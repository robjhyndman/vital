[{"path":"https://pkg.robjhyndman.com/vital/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rob Hyndman. Author, maintainer, copyright holder. Mitchell O'Hara-Wild. Contributor.","code":""},{"path":"https://pkg.robjhyndman.com/vital/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hyndman R (2024). vital: Tidy Analysis Tools Mortality, Fertility, Migration Population Data. R package version 0.1.0, https://github.com/robjhyndman/vital, https://pkg.robjhyndman.com/vital/.","code":"@Manual{,   title = {vital: Tidy Analysis Tools for Mortality, Fertility, Migration and Population Data},   author = {Rob Hyndman},   year = {2024},   note = {R package version 0.1.0, https://github.com/robjhyndman/vital},   url = {https://pkg.robjhyndman.com/vital/}, }"},{"path":"https://pkg.robjhyndman.com/vital/index.html","id":"vital-","dir":"","previous_headings":"","what":"Tidy Analysis Tools for Mortality, Fertility, Migration and Population Data","title":"Tidy Analysis Tools for Mortality, Fertility, Migration and Population Data","text":"goal vital allow analysis demographic data using tidy tools.","code":""},{"path":"https://pkg.robjhyndman.com/vital/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tidy Analysis Tools for Mortality, Fertility, Migration and Population Data","text":"can install development version vital GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"robjhyndman/vital\")"},{"path":"https://pkg.robjhyndman.com/vital/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Tidy Analysis Tools for Mortality, Fertility, Migration and Population Data","text":"","code":"library(vital) library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(ggplot2)  # Examples using Victorian females vic_female <- aus_mortality |>   filter(State == \"Victoria\", Sex == \"female\")  # Lifetable in 2000 vic_female |>    filter(Year == 2000) |>   life_table() #> # A vital: 101 x 12 [?] #> # Key:     Age, Sex, State, Code [101] #>     Year Sex   State Code       mx      qx    lx      dx    Lx    Tx    ex   Age #>    <int> <chr> <chr> <chr>   <dbl>   <dbl> <dbl>   <dbl> <dbl> <dbl> <dbl> <int> #>  1  2000 fema… Vict… VIC   4.02e-3 4.01e-3 1     4.01e-3 0.996  82.6  82.6     0 #>  2  2000 fema… Vict… VIC   2.70e-4 2.70e-4 0.996 2.69e-4 0.996  81.6  82.0     1 #>  3  2000 fema… Vict… VIC   3.38e-5 3.38e-5 0.996 3.37e-5 0.996  80.6  81.0     2 #>  4  2000 fema… Vict… VIC   3.32e-5 3.32e-5 0.996 3.30e-5 0.996  79.6  80.0     3 #>  5  2000 fema… Vict… VIC   9.83e-5 9.83e-5 0.996 9.79e-5 0.996  78.7  79.0     4 #>  6  2000 fema… Vict… VIC   9.65e-5 9.65e-5 0.996 9.61e-5 0.996  77.7  78.0     5 #>  7  2000 fema… Vict… VIC   2.22e-4 2.22e-4 0.995 2.21e-4 0.995  76.7  77.0     6 #>  8  2000 fema… Vict… VIC   6.32e-5 6.32e-5 0.995 6.29e-5 0.995  75.7  76.0     7 #>  9  2000 fema… Vict… VIC   3.16e-5 3.16e-5 0.995 3.14e-5 0.995  74.7  75.0     8 #> 10  2000 fema… Vict… VIC   1.25e-4 1.25e-4 0.995 1.25e-4 0.995  73.7  74.0     9 #> # ℹ 91 more rows  # Life expectancy vic_female |>    life_expectancy() |>    ggplot(aes(x = Year, y = ex)) +   geom_line() # Smoothed data vic_female |>    filter(Year == 2000) |>    smooth_mortality(Mortality) |>   autoplot(Mortality) +   geom_line(aes(y = .smooth), col = \"blue\") +   ylab(\"Mortality rate\") +   scale_y_log10() # Lee-Carter model lc <- vic_female |>   model(lee_carter = LC(log(Mortality))) report(lc) #> Series: Mortality  #> Model: LC  #> Transformation: log(Mortality)  #>  #> Options: #>   Adjust method: dt #>   Jump choice: fit #>  #> Age functions #> # A tibble: 101 × 3 #>     Age    ax     bx #>   <int> <dbl>  <dbl> #> 1     0 -4.15 0.0157 #> 2     1 -6.40 0.0218 #> 3     2 -7.01 0.0195 #> 4     3 -7.32 0.0180 #> 5     4 -7.36 0.0159 #> # ℹ 96 more rows #>  #> Time coefficients #> # A tsibble: 120 x 2 [1Y] #>    Year    kt #>   <int> <dbl> #> 1  1901 111.  #> 2  1902 111.  #> 3  1903 109.  #> 4  1904 100.  #> 5  1905  98.8 #> # ℹ 115 more rows #>  #> Time series model: RW w/ drift  #>  #> Variance explained: 72.99%  autoplot(lc) # Forecasts from Lee-Carter model lc |>   forecast(h = 20) |>   autoplot(Mortality) +   ylab(\"Mortality rate\") +   scale_y_log10()"},{"path":"https://pkg.robjhyndman.com/vital/reference/FDM.html","id":null,"dir":"Reference","previous_headings":"","what":"Functional data model — FDM","title":"Functional data model — FDM","text":"Functional data model mortality fertility rates function age. FDM() returns functional data model applied formula's response variable function age.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FDM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functional data model — FDM","text":"","code":"FDM(formula, order = 6, ts_model_fn = fable::ARIMA, ...)"},{"path":"https://pkg.robjhyndman.com/vital/reference/FDM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functional data model — FDM","text":"formula Model specification. order Number principal components fit. ts_model_fn Univariate time series modelling function coefficients. model works fable package ok. Default fable::ARIMA(). ... used.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FDM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functional data model — FDM","text":"model specification.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FDM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Functional data model — FDM","text":"Hyndman, R.J., Ullah, S. (2007) Robust forecasting mortality fertility rates: functional data approach. Computational Statistics & Data Analysis, 51, 4942-4956. https://robjhyndman.com/publications/funcfor/","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FDM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Functional data model — FDM","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FDM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functional data model — FDM","text":"","code":"hu <- aus_mortality |>   dplyr::filter(State == \"Victoria\", Sex == \"female\") |>   smooth_mortality(Mortality) |>   model(hyndman_ullah = FDM(log(.smooth))) report(hu) #> Series: .smooth  #> Model: FDM  #> Transformation: log(.smooth)  #>  #> Basis functions #> # A tibble: 101 × 8 #>     Age  mean  phi1    phi2    phi3    phi4     phi5    phi6 #>   <dbl> <dbl> <dbl>   <dbl>   <dbl>   <dbl>    <dbl>   <dbl> #> 1     0 -4.15 0.147  0.0715 0.0637   0.0129  0.00976 -0.0905 #> 2     1 -6.33 0.190 -0.0332 0.0807  -0.219   0.106   -0.332  #> 3     2 -6.94 0.175  0.0216 0.0870  -0.238  -0.0279  -0.300  #> 4     3 -7.28 0.166  0.0326 0.0478  -0.203  -0.119   -0.300  #> 5     4 -7.46 0.161  0.0352 0.00566 -0.168  -0.126   -0.325  #> # ℹ 96 more rows #>  #> Coefficients #> # A tsibble: 120 x 8 [1Y] #>    Year  mean beta1 beta2 beta3 beta4   beta5   beta6 #>   <int> <dbl> <dbl> <dbl> <dbl> <dbl>   <dbl>   <dbl> #> 1  1901     1  12.3 -1.19  1.98 0.245  0.124  0.129   #> 2  1902     1  12.0 -1.27  1.74 0.232  0.173  0.193   #> 3  1903     1  11.9 -1.26  1.82 0.566 -0.295  0.0544  #> 4  1904     1  11.5 -1.03  1.79 0.675 -0.251  0.145   #> 5  1905     1  11.0 -1.18  1.55 0.982 -0.0756 0.00383 #> # ℹ 115 more rows #>  #> Time series models #>    beta1 : ARIMA(0,1,1) w/ drift  #>    beta2 : ARIMA(0,2,2)  #>    beta3 : ARIMA(2,0,2)  #>    beta4 : ARIMA(1,0,3)  #>    beta5 : ARIMA(1,0,1)  #>    beta6 : ARIMA(1,0,1)  #>  #> Variance explained #>   95.63 + 2.39 + 0.64 + 0.36 + 0.22 + 0.18 = 99.42% autoplot(hu)"},{"path":"https://pkg.robjhyndman.com/vital/reference/FMEAN.html","id":null,"dir":"Reference","previous_headings":"","what":"Functional mean model — FMEAN","title":"Functional mean model — FMEAN","text":"FMEAN() returns iid functional model applied formula's response variable function age.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FMEAN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functional mean model — FMEAN","text":"","code":"FMEAN(formula, ...)"},{"path":"https://pkg.robjhyndman.com/vital/reference/FMEAN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functional mean model — FMEAN","text":"formula Model specification. ... used.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FMEAN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functional mean model — FMEAN","text":"model specification.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FMEAN.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Functional mean model — FMEAN","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FMEAN.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functional mean model — FMEAN","text":"","code":"fmean <- aus_mortality |>   dplyr::filter(State == \"Victoria\", Sex == \"female\") |>   model(mean = FMEAN(Mortality)) report(fmean) #> Series: Mortality  #> Model: FMEAN  #>  #> # A tibble: 101 × 3 #>      Age     mean    sigma #>    <int>    <dbl>    <dbl> #>  1     0 0.0270   0.0263   #>  2     1 0.00444  0.00559  #>  3     2 0.00195  0.00219  #>  4     3 0.00129  0.00141  #>  5     4 0.00112  0.00118  #>  6     5 0.000931 0.00100  #>  7     6 0.000834 0.000870 #>  8     7 0.000753 0.000809 #>  9     8 0.000624 0.000681 #> 10     9 0.000581 0.000590 #> # ℹ 91 more rows autoplot(fmean) + ggplot2::scale_y_log10()"},{"path":"https://pkg.robjhyndman.com/vital/reference/FNAIVE.html","id":null,"dir":"Reference","previous_headings":"","what":"Functional naive model — FNAIVE","title":"Functional naive model — FNAIVE","text":"FNAIVE() returns random walk functional model applied formula's response variable function age.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FNAIVE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functional naive model — FNAIVE","text":"","code":"FNAIVE(formula, ...)"},{"path":"https://pkg.robjhyndman.com/vital/reference/FNAIVE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functional naive model — FNAIVE","text":"formula Model specification. ... used.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FNAIVE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functional naive model — FNAIVE","text":"model specification.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FNAIVE.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Functional naive model — FNAIVE","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FNAIVE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functional naive model — FNAIVE","text":"","code":"fnaive <- aus_mortality |>   dplyr::filter(State == \"Victoria\", Sex == \"female\") |>   model(fit = FNAIVE(Mortality)) report(fnaive) #> Series: Mortality  #> Model: FNAIVE  #>  #> # A tibble: 101 × 2 #>      Age    sigma #>    <int>    <dbl> #>  1     0 0.00609  #>  2     1 0.00180  #>  3     2 0.000610 #>  4     3 0.000401 #>  5     4 0.000443 #>  6     5 0.000406 #>  7     6 0.000386 #>  8     7 0.000329 #>  9     8 0.000306 #> 10     9 0.000285 #> # ℹ 91 more rows autoplot(fnaive) + ggplot2::scale_y_log10()"},{"path":"https://pkg.robjhyndman.com/vital/reference/LC.html","id":null,"dir":"Reference","previous_headings":"","what":"Lee-Carter model — LC","title":"Lee-Carter model — LC","text":"Lee-Carter model mortality fertility rates. LC() returns Lee-Carter model applied formula's response variable function age. produces standard Lee-Carter model default, although many options available. Missing rates set geometric mean rate relevant age.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/LC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lee-Carter model — LC","text":"","code":"LC(   formula,   adjust = c(\"dt\", \"dxt\", \"e0\", \"none\"),   jump_choice = c(\"fit\", \"actual\"),   scale = FALSE,   ... )"},{"path":"https://pkg.robjhyndman.com/vital/reference/LC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lee-Carter model — LC","text":"formula Model specification. include log variable modelled. See examples. adjust method use adjustment coefficients \\(k_t\\). Possibilities \"dt\" (Lee-Carter method, default), \"dxt\" (BMS method), \"e0\" (Lee-Miller method based life expectancy) \"none\". jump_choice Method used computation jump-point forecasts. Possibilities: \"actual\" (use actual rates final year) \"fit\" (use fitted rates). original Lee-Carter method used \"fit\" (default), Lee Miller (2001) authors prefer \"actual\". scale TRUE, bx kt rescaled kt drift parameter = 1. ... used.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/LC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lee-Carter model — LC","text":"model specification.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/LC.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Lee-Carter model — LC","text":"Basellini, U, Camarda, C G, Booth, H (2022) Thirty years : review Lee-Carter method forecasting mortality. International Journal Forecasting, 39(3), 1033-1049. Booth, H., Maindonald, J., Smith, L. (2002) Applying Lee-Carter conditions variable mortality decline. Population Studies, 56, 325-336. Lee, R D, Carter, L R (1992) Modeling forecasting US mortality. Journal American Statistical Association, 87, 659-671. Lee R D, Miller T (2001). Evaluating performance Lee-Carter method forecasting mortality. Demography, 38(4), 537–549.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/LC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Lee-Carter model — LC","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/LC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lee-Carter model — LC","text":"","code":"lc <- aus_mortality |>   dplyr::filter(State == \"Victoria\", Sex == \"female\") |>   model(lee_carter = LC(log(Mortality))) report(lc) #> Series: Mortality  #> Model: LC  #> Transformation: log(Mortality)  #>  #> Options: #>   Adjust method: dt #>   Jump choice: fit #>  #> Age functions #> # A tibble: 101 × 3 #>     Age    ax     bx #>   <int> <dbl>  <dbl> #> 1     0 -4.15 0.0157 #> 2     1 -6.40 0.0218 #> 3     2 -7.01 0.0195 #> 4     3 -7.32 0.0180 #> 5     4 -7.36 0.0159 #> # ℹ 96 more rows #>  #> Time coefficients #> # A tsibble: 120 x 2 [1Y] #>    Year    kt #>   <int> <dbl> #> 1  1901 111.  #> 2  1902 111.  #> 3  1903 109.  #> 4  1904 100.  #> 5  1905  98.8 #> # ℹ 115 more rows #>  #> Time series model: RW w/ drift  #>  #> Variance explained: 72.99% autoplot(lc)"},{"path":"https://pkg.robjhyndman.com/vital/reference/age_components.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract age components from a model — age_components","title":"Extract age components from a model — age_components","text":"mable single model column, return model components indexed age.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/age_components.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract age components from a model — age_components","text":"","code":"age_components(object, ...)"},{"path":"https://pkg.robjhyndman.com/vital/reference/age_components.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract age components from a model — age_components","text":"object vital mable object single model column. ... currently used.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/age_components.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract age components from a model — age_components","text":"vital object containing age components model.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/age_components.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract age components from a model — age_components","text":"","code":"aus_mortality |>   dplyr::filter(State == \"Victoria\", Sex == \"female\") |>   model(lee_carter = LC(log(Mortality))) |>   age_components() #> # A tibble: 101 × 6 #>    Sex    State    Code    Age    ax     bx #>    <chr>  <chr>    <chr> <int> <dbl>  <dbl> #>  1 female Victoria VIC       0 -4.15 0.0157 #>  2 female Victoria VIC       1 -6.40 0.0218 #>  3 female Victoria VIC       2 -7.01 0.0195 #>  4 female Victoria VIC       3 -7.32 0.0180 #>  5 female Victoria VIC       4 -7.36 0.0159 #>  6 female Victoria VIC       5 -7.63 0.0172 #>  7 female Victoria VIC       6 -7.48 0.0123 #>  8 female Victoria VIC       7 -7.73 0.0149 #>  9 female Victoria VIC       8 -8.08 0.0178 #> 10 female Victoria VIC       9 -7.81 0.0114 #> # ℹ 91 more rows"},{"path":"https://pkg.robjhyndman.com/vital/reference/as_vital.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce to a vital object — as_vital","title":"Coerce to a vital object — as_vital","text":"vital object type tsibble contains vital statistics births, deaths, population counts, mortality fertility rates. tsibble special class allows special methods used. object attribute stores variables names needed functions, including age, sex, births, deaths population.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/as_vital.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce to a vital object — as_vital","text":"","code":"as_vital(x, ...)  # S3 method for demogdata as_vital(x, sex_groups = TRUE, ...)  # S3 method for tbl_ts as_vital(   x,   .age = NULL,   .sex = NULL,   .deaths = NULL,   .births = NULL,   .population = NULL,   reorder = FALSE,   ... )  # S3 method for data.frame as_vital(   x,   key = NULL,   index,   .age = NULL,   .sex = NULL,   .deaths = NULL,   .births = NULL,   .population = NULL,   ... )"},{"path":"https://pkg.robjhyndman.com/vital/reference/as_vital.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce to a vital object — as_vital","text":"x Object coerced vital format. ... arguments passed tsibble::as_tsibble() sex_groups Logical variable indicating groups denote sexes .age Character string name age variable .sex Character string name sex variable .deaths Character string name deaths variable .births Character string name births variable .population Character string name population variable reorder Logical indicating variables reordered. key Variable(s) uniquely determine time indices. NULL empty key, c() multiple variables. works tidy selector (e.g. tidyselect::starts_with()). index variable specify time index variable.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/as_vital.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce to a vital object — as_vital","text":"tsibble class vital.","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/vital/reference/as_vital.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Coerce to a vital object — as_vital","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/as_vital.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce to a vital object — as_vital","text":"","code":"# coerce demogdata object to vital as_vital(demography::fr.mort) #> # A vital: 63,603 x 7 [1Y] #> # Key:     AgeGroup, Age, Sex [333] #>     Year AgeGroup   Age Sex    Mortality Exposure Deaths #>    <int> <chr>    <int> <chr>      <dbl>    <dbl>  <dbl> #>  1  1816 0            0 female   0.187    408224. 76332. #>  2  1816 1            1 female   0.0467   382452. 17861. #>  3  1816 2            2 female   0.0339   351454. 11924. #>  4  1816 3            3 female   0.0229   337733.  7738. #>  5  1816 4            4 female   0.0160   331576.  5304. #>  6  1816 5            5 female   0.0138   313554.  4338. #>  7  1816 6            6 female   0.0121   306853.  3714. #>  8  1816 7            7 female   0.0104   301860.  3148. #>  9  1816 8            8 female   0.00891  296639.  2642. #> 10  1816 9            9 female   0.00760  289057.  2195. #> # ℹ 63,593 more rows # create a vital with only age as a key tibble::tibble(   year = rep(2010:2015, 100),   age = rep(0:99, each = 6),   mx = runif(600, 0, 1) ) |>   as_vital(     index = year,     key = age,     .age = \"age\"   ) #> # A vital: 600 x 3 [1Y] #> # Key:     age [100] #>     year   age      mx #>    <int> <int>   <dbl> #>  1  2010     0 0.0808  #>  2  2011     0 0.834   #>  3  2012     0 0.601   #>  4  2013     0 0.157   #>  5  2014     0 0.00740 #>  6  2015     0 0.466   #>  7  2010     1 0.498   #>  8  2011     1 0.290   #>  9  2012     1 0.733   #> 10  2013     1 0.773   #> # ℹ 590 more rows"},{"path":"https://pkg.robjhyndman.com/vital/reference/aus_fertility.html","id":null,"dir":"Reference","previous_headings":"","what":"Australian fertility data — aus_fertility","title":"Australian fertility data — aus_fertility","text":"aus_fertility annual vital object covering years 1921-2002 three values:","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/aus_fertility.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Australian fertility data — aus_fertility","text":"Time series class vital","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/aus_fertility.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Australian fertility data — aus_fertility","text":"Australian Human Mortality Database","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/aus_fertility.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Australian fertility data — aus_fertility","text":"data disaggregated using one key: extreme age groups (15 49) also include younger older mothers respectively.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/aus_fertility.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Australian fertility data — aus_fertility","text":"","code":"library(ggplot2) aus_fertility #> # A vital: 3,010 x 5 [1Y] #> # Key:     Age [35] #>     Year   Age Fertility Exposure Births #>    <int> <int>     <dbl>    <dbl>  <dbl> #>  1  1921    15   0.00175    49228   86.1 #>  2  1922    15   0.00159    50118   79.7 #>  3  1923    15   0.00159    51033   81.1 #>  4  1924    15   0.00171    51930   88.8 #>  5  1925    15   0.0021     52888  111.  #>  6  1926    15   0.0024     53813  129.  #>  7  1927    15   0.0023     54770  126.  #>  8  1928    15   0.0024     55701  134.  #>  9  1929    15   0.0025     56464  141.  #> 10  1930    15   0.0023     57066  131.  #> # ℹ 3,000 more rows aus_fertility |>   autoplot(Fertility) +   ylab(\"Fertility rate\")"},{"path":"https://pkg.robjhyndman.com/vital/reference/aus_mortality.html","id":null,"dir":"Reference","previous_headings":"","what":"Australian mortality data — aus_mortality","title":"Australian mortality data — aus_mortality","text":"aus_mortality annual vital three values:","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/aus_mortality.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Australian mortality data — aus_mortality","text":"Time series class vital","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/aus_mortality.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Australian mortality data — aus_mortality","text":"Australian Human Mortality Database","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/aus_mortality.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Australian mortality data — aus_mortality","text":"data disaggregated using four keys: age group 100 also includes people died aged older 100. data 1970 taken Australian Demographic Data Bank (https://pkg.robjhyndman.com/addb/). 1971, data come Australian Human Mortality Database (https://aushd.org). may discontinuities introduced due different methods used prepare data 1971. Note \"ACTOT\" includes ACT overseas territories available 2003. data exclusively ACT begins 1971.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/aus_mortality.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Australian mortality data — aus_mortality","text":"","code":"library(ggplot2) aus_mortality #> # A vital: 300,879 x 8 [1Y] #> # Key:     Age, Sex, State, Code [2,727] #>     Year   Age Sex    State                      Code  Mortality Exposure Deaths #>    <int> <int> <chr>  <chr>                      <chr>     <dbl>    <dbl>  <dbl> #>  1  1971     0 female Australian Capital Territ… ACT     0.0126     1912.   24   #>  2  1972     0 female Australian Capital Territ… ACT     0.0121     1986.   24.1 #>  3  1973     0 female Australian Capital Territ… ACT     0.0154     2011.   31   #>  4  1974     0 female Australian Capital Territ… ACT     0.0116     2072.   24   #>  5  1975     0 female Australian Capital Territ… ACT     0.0101     2081.   21   #>  6  1976     0 female Australian Capital Territ… ACT     0.0153     2087.   32   #>  7  1977     0 female Australian Capital Territ… ACT     0.00904    2101.   19   #>  8  1978     0 female Australian Capital Territ… ACT     0.0103     2048.   21   #>  9  1979     0 female Australian Capital Territ… ACT     0.0123     2034.   25   #> 10  1980     0 female Australian Capital Territ… ACT     0.00826    2083.   17.2 #> # ℹ 300,869 more rows aus_mortality |>   dplyr::filter(State==\"Victoria\", Sex != \"total\") |>   autoplot(Exposure) +   ylab(\"Population at 30 June (thousands)\") #> Warning: Removed 70 rows containing missing values or values outside the scale range #> (`geom_line()`)."},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.fbl_vtl_ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot forecasts from a vital model — autoplot.fbl_vtl_ts","title":"Plot forecasts from a vital model — autoplot.fbl_vtl_ts","text":"Produces plot showing forecasts obtained model applied vital object.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.fbl_vtl_ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot forecasts from a vital model — autoplot.fbl_vtl_ts","text":"","code":"# S3 method for fbl_vtl_ts autoplot(object, ...)"},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.fbl_vtl_ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot forecasts from a vital model — autoplot.fbl_vtl_ts","text":"object fable object obtained vital model. ... arguments ignored.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.fbl_vtl_ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot forecasts from a vital model — autoplot.fbl_vtl_ts","text":"ggplot2 object.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.fbl_vtl_ts.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot forecasts from a vital model — autoplot.fbl_vtl_ts","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.fbl_vtl_ts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot forecasts from a vital model — autoplot.fbl_vtl_ts","text":"","code":"library(ggplot2) aus_mortality |>  dplyr::filter(State == \"Victoria\") |>  model(ave = FMEAN(Mortality)) |>  forecast(h = 10) |>  autoplot() + scale_y_log10()"},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.mdl_vtl_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot output from a vital model — autoplot.mdl_vtl_df","title":"Plot output from a vital model — autoplot.mdl_vtl_df","text":"Produces plot showing model applied vital object. can applied one type model . use select() choose model column plot. multiple keys, separate models identified colour.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.mdl_vtl_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot output from a vital model — autoplot.mdl_vtl_df","text":"","code":"# S3 method for mdl_vtl_df autoplot(object, ...)"},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.mdl_vtl_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot output from a vital model — autoplot.mdl_vtl_df","text":"object mable object obtained vital. ... arguments ignored.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.mdl_vtl_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot output from a vital model — autoplot.mdl_vtl_df","text":"ggplot2 object.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.mdl_vtl_df.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot output from a vital model — autoplot.mdl_vtl_df","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.mdl_vtl_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot output from a vital model — autoplot.mdl_vtl_df","text":"","code":"library(ggplot2) aus_mortality |>  dplyr::filter(State == \"Victoria\") |>  model(ave = FMEAN(Mortality)) |>  autoplot() + scale_y_log10()"},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.vital.html","id":null,"dir":"Reference","previous_headings":"","what":"Rainbow plot of demographic data against age — autoplot.vital","title":"Rainbow plot of demographic data against age — autoplot.vital","text":"Produce rainbow plot (coloured time index) demographic variable age.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.vital.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rainbow plot of demographic data against age — autoplot.vital","text":"","code":"# S3 method for vital autoplot(object, .vars = NULL, age = attributes(object)$agevar, ...)"},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.vital.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rainbow plot of demographic data against age — autoplot.vital","text":"object vital including age variable variable wish plot. .vars name variable wish plot. age name age variable. supplied, function attempt find . ... arguments used.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.vital.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rainbow plot of demographic data against age — autoplot.vital","text":"ggplot2 object.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.vital.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Rainbow plot of demographic data against age — autoplot.vital","text":"Hyndman, Rob J & Shang, Han Lin (2010) Rainbow plots, bagplots, boxplots functional data. Journal Computational Graphical Statistics, 19(1), 29-45. https://robjhyndman.com/publications/rainbow-fda/","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.vital.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rainbow plot of demographic data against age — autoplot.vital","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.vital.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rainbow plot of demographic data against age — autoplot.vital","text":"","code":"autoplot(aus_fertility, Fertility)"},{"path":"https://pkg.robjhyndman.com/vital/reference/collapse_ages.html","id":null,"dir":"Reference","previous_headings":"","what":"Collapse upper ages into a single age group. Counts are summed while\nrates are recomputed. — collapse_ages","title":"Collapse upper ages into a single age group. Counts are summed while\nrates are recomputed. — collapse_ages","text":"Collapse upper ages single age group. Counts summed rates recomputed.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/collapse_ages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collapse upper ages into a single age group. Counts are summed while\nrates are recomputed. — collapse_ages","text":"","code":"collapse_ages(.data, max_age = 100)"},{"path":"https://pkg.robjhyndman.com/vital/reference/collapse_ages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collapse upper ages into a single age group. Counts are summed while\nrates are recomputed. — collapse_ages","text":".data vital object including age variable max_age Maximum age include collapsed age group.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/collapse_ages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collapse upper ages into a single age group. Counts are summed while\nrates are recomputed. — collapse_ages","text":"vital object variables .data, upper ages collapsed single age group.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/collapse_ages.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Collapse upper ages into a single age group. Counts are summed while\nrates are recomputed. — collapse_ages","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/collapse_ages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collapse upper ages into a single age group. Counts are summed while\nrates are recomputed. — collapse_ages","text":"","code":"aus_mortality |>  dplyr::filter(State == \"Victoria\", Sex == \"female\") |>  collapse_ages(max_age = 85) #> # A vital: 10,320 x 8 [1Y] #> # Key:     Age, Sex, State, Code [86] #>     Year   Age Sex    State    Code  Mortality Exposure Deaths #>    <int> <int> <chr>  <chr>    <chr>     <dbl>    <dbl>  <dbl> #>  1  1901     0 female Victoria VIC      0.100     13993   1405 #>  2  1902     0 female Victoria VIC      0.108     14049   1516 #>  3  1903     0 female Victoria VIC      0.103     14064   1452 #>  4  1904     0 female Victoria VIC      0.0726    14058   1020 #>  5  1905     0 female Victoria VIC      0.0752    14125   1062 #>  6  1906     0 female Victoria VIC      0.0916    14232   1303 #>  7  1907     0 female Victoria VIC      0.0688    14395    990 #>  8  1908     0 female Victoria VIC      0.0810    14547   1178 #>  9  1909     0 female Victoria VIC      0.0645    14716    949 #> 10  1910     0 female Victoria VIC      0.0701    14847   1041 #> # ℹ 10,310 more rows"},{"path":"https://pkg.robjhyndman.com/vital/reference/forecast.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce forecasts from a vital model — forecast.FDM","title":"Produce forecasts from a vital model — forecast.FDM","text":"forecast function allows produce future predictions vital model, response function age. forecasts returned contain point forecasts distribution.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/forecast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce forecasts from a vital model — forecast.FDM","text":"","code":"# S3 method for FDM forecast(   object,   new_data = NULL,   h = NULL,   point_forecast = list(.mean = mean),   simulate = FALSE,   bootstrap = FALSE,   times = 5000,   seed = NULL,   ... )  # S3 method for LC forecast(   object,   new_data = NULL,   h = NULL,   point_forecast = list(.mean = mean),   simulate = FALSE,   bootstrap = FALSE,   times = 5000,   seed = NULL,   ... )  # S3 method for FMEAN forecast(   object,   new_data = NULL,   h = NULL,   point_forecast = list(.mean = mean),   simulate = FALSE,   bootstrap = FALSE,   times = 5000,   seed = NULL,   ... )  # S3 method for FNAIVE forecast(   object,   new_data = NULL,   h = NULL,   point_forecast = list(.mean = mean),   simulate = FALSE,   bootstrap = FALSE,   times = 5000,   seed = NULL,   ... )  # S3 method for mdl_vtl_df forecast(   object,   new_data = NULL,   h = NULL,   point_forecast = list(.mean = mean),   simulate = FALSE,   bootstrap = FALSE,   times = 5000,   seed = NULL,   ... )"},{"path":"https://pkg.robjhyndman.com/vital/reference/forecast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce forecasts from a vital model — forecast.FDM","text":"object mable containing one models. new_data tsibble containing future information used forecast. h Number time steps ahead forecast. can used instead new_data covariates model. ignored new_data provided. point_forecast list functions used compute point forecasts forecast distribution. simulate  TRUE, forecast distributions computed using simulation parametric model. bootstrap TRUE, forecast distributions computed using simulation resampling. times number sample paths use estimating forecast distribution bootstrap = TRUE. seed seed random generation distributions. ... Additional arguments passed specific model method.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/forecast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce forecasts from a vital model — forecast.FDM","text":"fable containing following columns: .model: name model used obtain forecast. Taken column names models provided mable. forecast distribution. name column dependent variable model(s). multiple dependent variables exist, named .distribution. Point forecasts computed distribution using functions point_forecast argument. columns new_data, excluding whose names conflict .","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/forecast.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Produce forecasts from a vital model — forecast.FDM","text":"Rob J Hyndman Mitchell O'Hara-Wild","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/forecast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce forecasts from a vital model — forecast.FDM","text":"","code":"aus_mortality |>  dplyr::filter(State == \"Victoria\", Sex == \"female\") |>  model(naive = FNAIVE(Mortality)) |>  forecast(h = 10) #> # A fable: 1,010 x 8 [1Y] #> # Key:     Sex, State, Code, .model, Age [101] #>    Sex    State    Code  .model  Year   Age          Mortality   .mean #>    <chr>  <chr>    <chr> <chr>  <dbl> <int>             <dist>   <dbl> #>  1 female Victoria VIC   naive   2021     0 N(0.0025, 3.7e-05) 0.00252 #>  2 female Victoria VIC   naive   2022     0 N(0.0025, 7.4e-05) 0.00252 #>  3 female Victoria VIC   naive   2023     0 N(0.0025, 0.00011) 0.00252 #>  4 female Victoria VIC   naive   2024     0 N(0.0025, 0.00015) 0.00252 #>  5 female Victoria VIC   naive   2025     0 N(0.0025, 0.00019) 0.00252 #>  6 female Victoria VIC   naive   2026     0 N(0.0025, 0.00022) 0.00252 #>  7 female Victoria VIC   naive   2027     0 N(0.0025, 0.00026) 0.00252 #>  8 female Victoria VIC   naive   2028     0   N(0.0025, 3e-04) 0.00252 #>  9 female Victoria VIC   naive   2029     0 N(0.0025, 0.00033) 0.00252 #> 10 female Victoria VIC   naive   2030     0 N(0.0025, 0.00037) 0.00252 #> # ℹ 1,000 more rows"},{"path":"https://pkg.robjhyndman.com/vital/reference/generate.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate responses from a mable — generate.mdl_vtl_df","title":"Generate responses from a mable — generate.mdl_vtl_df","text":"Use fitted model simulate future data similar behaviour response.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/generate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate responses from a mable — generate.mdl_vtl_df","text":"","code":"# S3 method for mdl_vtl_df generate(   x,   new_data = NULL,   h = NULL,   bootstrap = FALSE,   times = 1,   seed = NULL,   ... )"},{"path":"https://pkg.robjhyndman.com/vital/reference/generate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate responses from a mable — generate.mdl_vtl_df","text":"x mable. new_data Future data needed generation (include time index exogenous regressors) h simulation horizon (can used instead new_data regular time series exogenous regressors). bootstrap TRUE, forecast distributions computed using simulation resampled errors. times number replications. seed seed random generation distributions. ... Additional arguments","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/generate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate responses from a mable — generate.mdl_vtl_df","text":"vital object simulated values.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/generate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate responses from a mable — generate.mdl_vtl_df","text":"Innovations sampled model's assumed error distribution. bootstrap TRUE, innovations sampled model's residuals.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/generate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate responses from a mable — generate.mdl_vtl_df","text":"Rob J Hyndman Mitchell O'Hara-Wild","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/generate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate responses from a mable — generate.mdl_vtl_df","text":"","code":"aus_mortality |>   dplyr::filter(State == \"Victoria\") |>   model(lc = LC(Mortality)) |>   generate(times = 3, bootstrap = TRUE) #> Warning: 3 errors (1 unique) encountered for lc #> [3] Lee-Carter models require a log transformation of the response variable. #> # A vital: 1,818 x 8 [1Y] #> # Key:     Age, Sex, State, Code, .model, .rep [909] #>     Year   Age Sex    State    Code  .model .rep   .sim #>    <dbl> <int> <chr>  <chr>    <chr> <chr>  <chr> <dbl> #>  1  2021     0 female Victoria VIC   lc     1        NA #>  2  2021     1 female Victoria VIC   lc     1        NA #>  3  2021     2 female Victoria VIC   lc     1        NA #>  4  2021     3 female Victoria VIC   lc     1        NA #>  5  2021     4 female Victoria VIC   lc     1        NA #>  6  2021     5 female Victoria VIC   lc     1        NA #>  7  2021     6 female Victoria VIC   lc     1        NA #>  8  2021     7 female Victoria VIC   lc     1        NA #>  9  2021     8 female Victoria VIC   lc     1        NA #> 10  2021     9 female Victoria VIC   lc     1        NA #> # ℹ 1,808 more rows"},{"path":"https://pkg.robjhyndman.com/vital/reference/interpolate.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolate missing values using a vital model — interpolate.mdl_vtl_df","title":"Interpolate missing values using a vital model — interpolate.mdl_vtl_df","text":"Uses fitted vital model interpolate missing values dataset.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/interpolate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolate missing values using a vital model — interpolate.mdl_vtl_df","text":"","code":"# S3 method for mdl_vtl_df interpolate(object, new_data, ...)"},{"path":"https://pkg.robjhyndman.com/vital/reference/interpolate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolate missing values using a vital model — interpolate.mdl_vtl_df","text":"object mable containing single model column. new_data dataset structure data used fit model. ... arguments passed interpolate methods.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/interpolate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpolate missing values using a vital model — interpolate.mdl_vtl_df","text":"vital object missing values interpolated.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/interpolate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Interpolate missing values using a vital model — interpolate.mdl_vtl_df","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/interpolate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interpolate missing values using a vital model — interpolate.mdl_vtl_df","text":"","code":"act_female <- aus_mortality |>  dplyr::filter(Code == \"ACTOT\", Sex == \"female\") act_female |>  model(mean = FMEAN(Mortality)) |>  interpolate(act_female) #> # A vital: 10,403 x 6 [1Y] #> # Key:     Age, Sex, State, Code [101] #>     Year   Age Sex    State                                      Code  Mortality #>    <int> <int> <chr>  <chr>                                      <chr>     <dbl> #>  1  1901     0 female Australian Capital Territory and Overseas… ACTOT  0.0159   #>  2  1901     1 female Australian Capital Territory and Overseas… ACTOT  0.00214  #>  3  1901     2 female Australian Capital Territory and Overseas… ACTOT  0.00112  #>  4  1901     3 female Australian Capital Territory and Overseas… ACTOT  0.00126  #>  5  1901     4 female Australian Capital Territory and Overseas… ACTOT  0.000215 #>  6  1901     5 female Australian Capital Territory and Overseas… ACTOT  0.000220 #>  7  1901     6 female Australian Capital Territory and Overseas… ACTOT  0.000703 #>  8  1901     7 female Australian Capital Territory and Overseas… ACTOT  0.000811 #>  9  1901     8 female Australian Capital Territory and Overseas… ACTOT  0.000880 #> 10  1901     9 female Australian Capital Territory and Overseas… ACTOT  0.000177 #> # ℹ 10,393 more rows"},{"path":"https://pkg.robjhyndman.com/vital/reference/life_expectancy.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute life expectancy from age-specific mortality rates — life_expectancy","title":"Compute life expectancy from age-specific mortality rates — life_expectancy","text":"Returns remaining life expectancy given age (0 default).","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/life_expectancy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute life expectancy from age-specific mortality rates — life_expectancy","text":"","code":"life_expectancy(.data, from_age = 0, mortality)"},{"path":"https://pkg.robjhyndman.com/vital/reference/life_expectancy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute life expectancy from age-specific mortality rates — life_expectancy","text":".data vital object including age variable variable containing mortality rates. from_age Age life expectancy calculated. Either scalar vector ages. mortality Variable .data containing Mortality rates (mx). omitted, variable name  mx, Mortality Rate used (case sensitive).","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/life_expectancy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute life expectancy from age-specific mortality rates — life_expectancy","text":"vital object life expectancy column ex.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/life_expectancy.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute life expectancy from age-specific mortality rates — life_expectancy","text":"Chiang CL. (1984) life table applications. Robert E Krieger Publishing Company: Malabar. Keyfitz, N, Caswell, H. (2005) Applied Mathematical Demography, Springer-Verlag: New York. Preston, S.H., Heuveline, P., Guillot, M. (2001) Demography: measuring modeling population processes. Blackwell","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/vital/reference/life_expectancy.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute life expectancy from age-specific mortality rates — life_expectancy","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/life_expectancy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute life expectancy from age-specific mortality rates — life_expectancy","text":"","code":"# Compute Victorian life expectancy for females over time aus_mortality |>   dplyr::filter(Code == \"VIC\", Sex == \"female\") |>   life_expectancy() #> # A vital: 120 x 9 [1Y] #> # Key:     Age, Sex, State, Code [1] #>     Year   Age Sex    State    Code     ex    rx    nx    ax #>    <int> <int> <chr>  <chr>    <chr> <dbl> <dbl> <dbl> <dbl> #>  1  1901     0 female Victoria VIC    55.8 0.937     1 0.334 #>  2  1902     0 female Victoria VIC    55.6 0.934     1 0.35  #>  3  1903     0 female Victoria VIC    56.2 0.936     1 0.342 #>  4  1904     0 female Victoria VIC    58.9 0.949     1 0.256 #>  5  1905     0 female Victoria VIC    59.2 0.948     1 0.264 #>  6  1906     0 female Victoria VIC    58.0 0.941     1 0.309 #>  7  1907     0 female Victoria VIC    59.8 0.951     1 0.246 #>  8  1908     0 female Victoria VIC    58.9 0.945     1 0.280 #>  9  1909     0 female Victoria VIC    61.2 0.953     1 0.234 #> 10  1910     0 female Victoria VIC    60.8 0.950     1 0.249 #> # ℹ 110 more rows"},{"path":"https://pkg.robjhyndman.com/vital/reference/life_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute period lifetables from age-specific mortality rates — life_table","title":"Compute period lifetables from age-specific mortality rates — life_table","text":"available years ages included tables. $qx = mx/(1 + ((1-ax) * mx))$ per Chiang (1984). Warning: code tested data based single-year age groups.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/life_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute period lifetables from age-specific mortality rates — life_table","text":"","code":"life_table(.data, mortality)"},{"path":"https://pkg.robjhyndman.com/vital/reference/life_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute period lifetables from age-specific mortality rates — life_table","text":".data vital including age variable variable containing mortality rates. mortality Variable .data containing Mortality rates (mx). omitted, variable name  mx, Mortality Rate used (case sensitive).","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/life_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute period lifetables from age-specific mortality rates — life_table","text":"vital object containing index, keys, new life table variables mx, qx, lx, dx, Lx, Tx ex.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/life_table.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute period lifetables from age-specific mortality rates — life_table","text":"Chiang CL. (1984) life table applications. Robert E Krieger Publishing Company: Malabar. Keyfitz, N, Caswell, H. (2005) Applied mathematical demography, Springer-Verlag: New York. Preston, S.H., Heuveline, P., Guillot, M. (2001) Demography: measuring modeling population processes. Blackwell","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/life_table.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute period lifetables from age-specific mortality rates — life_table","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/life_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute period lifetables from age-specific mortality rates — life_table","text":"","code":"# Compute Victorian life table for females in 2003 aus_mortality |>   dplyr::filter(Code == \"VIC\", Sex == \"female\", Year == 2003) |>   life_table() #> # A vital: 101 x 15 [?] #> # Key:     Age, Sex, State, Code [101] #>     Year   Age Sex   State Code       mx      qx    lx      dx    Lx    Tx    ex #>    <int> <int> <chr> <chr> <chr>   <dbl>   <dbl> <dbl>   <dbl> <dbl> <dbl> <dbl> #>  1  2003     0 fema… Vict… VIC   4.12e-3 4.10e-3 1     4.10e-3 0.996  83.2  83.2 #>  2  2003     1 fema… Vict… VIC   5.76e-4 5.76e-4 0.996 5.73e-4 0.996  82.2  82.6 #>  3  2003     2 fema… Vict… VIC   2.03e-4 2.03e-4 0.995 2.02e-4 0.995  81.2  81.6 #>  4  2003     3 fema… Vict… VIC   6.65e-5 6.65e-5 0.995 6.61e-5 0.995  80.2  80.6 #>  5  2003     4 fema… Vict… VIC   1.32e-4 1.32e-4 0.995 1.31e-4 0.995  79.2  79.6 #>  6  2003     5 fema… Vict… VIC   3.31e-5 3.31e-5 0.995 3.30e-5 0.995  78.3  78.6 #>  7  2003     6 fema… Vict… VIC   0       0       0.995 0       0.995  77.3  77.7 #>  8  2003     7 fema… Vict… VIC   6.46e-5 6.46e-5 0.995 6.42e-5 0.995  76.3  76.7 #>  9  2003     8 fema… Vict… VIC   3.17e-5 3.17e-5 0.995 3.15e-5 0.995  75.3  75.7 #> 10  2003     9 fema… Vict… VIC   3.12e-5 3.12e-5 0.995 3.11e-5 0.995  74.3  74.7 #> # ℹ 91 more rows #> # ℹ 3 more variables: rx <dbl>, nx <dbl>, ax <dbl>"},{"path":"https://pkg.robjhyndman.com/vital/reference/model.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate models for vital data — model.vital","title":"Estimate models for vital data — model.vital","text":"Trains specified model definition(s) dataset. function estimate set model definitions (passed via ...) series within .data (identified key structure). result mable (model table), neatly stores estimated models tabular structure. Rows data identify different series within data, model column contains models model definition. cell mable identifies single model.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate models for vital data — model.vital","text":"","code":"# S3 method for vital model(.data, ..., .safely = TRUE)"},{"path":"https://pkg.robjhyndman.com/vital/reference/model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate models for vital data — model.vital","text":".data vital object including age variable. ... Definitions models used. models must share response variable. .safely model encounters error, rather aborting process NULL model returned instead. allows error occur computing many models, without losing results successful models.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate models for vital data — model.vital","text":"mable containing fitted models.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/model.html","id":"parallel","dir":"Reference","previous_headings":"","what":"Parallel","title":"Estimate models for vital data — model.vital","text":"possible estimate models parallel using future package. specifying future::plan() estimating models, computed according plan.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/model.html","id":"progress","dir":"Reference","previous_headings":"","what":"Progress","title":"Estimate models for vital data — model.vital","text":"Progress model estimation can obtained wrapping code progressr::with_progress(). customisation progress reported can controlled using progressr package.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/model.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimate models for vital data — model.vital","text":"Rob J Hyndman Mitchell O'Hara-Wild","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate models for vital data — model.vital","text":"","code":"aus_mortality |>   dplyr::filter(State == \"Victoria\", Sex == \"female\") |>   model(     naive = FNAIVE(Mortality),     mean = FMEAN(Mortality)   ) #> # A mable: 1 x 5 #> # Key:     Sex, State, Code [1] #>   Sex    State    Code     naive    mean #>   <chr>  <chr>    <chr>  <model> <model> #> 1 female Victoria VIC   <FNAIVE> <FMEAN>"},{"path":"https://pkg.robjhyndman.com/vital/reference/net_migration.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate net migration from a vital object — net_migration","title":"Calculate net migration from a vital object — net_migration","text":"Calculate net migration vital object","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/net_migration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate net migration from a vital object — net_migration","text":"","code":"net_migration(deaths, births)"},{"path":"https://pkg.robjhyndman.com/vital/reference/net_migration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate net migration from a vital object — net_migration","text":"deaths vital object containing least time index, age, population 1 January, death rates. births vital object containing least time index number births per time period. assumed population variable deaths object, keys age present objects.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/net_migration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate net migration from a vital object — net_migration","text":"vital object containing population, estimated deaths (actual deaths) net migration, using formula Net Migration = Population - lag(Population cohort) - Deaths + Births. Births returned Population Age -1, deaths estimated life table","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/net_migration.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate net migration from a vital object — net_migration","text":"Hyndman Booth (2008) Stochastic population forecasts using functional data models mortality, fertility migration. International Journal Forecasting, 24(3), 323-342.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/net_migration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate net migration from a vital object — net_migration","text":"","code":"if (FALSE) { # Files downloaded from the [Human Mortality Database](https://mortality.org) deaths <- read_hmd_files(c(\"Population.txt\", \"Mx_1x1.txt\")) births <- read_hmd_file(\"Births.txt\") mig <- net_migration(deaths, births) }"},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data directly from HMD and construct a vital object for use in other functions — read_hmd","title":"Read data directly from HMD and construct a vital object for use in other functions — read_hmd","text":"read_hmd reads single-year single-age data Human Mortality Database (HMD https://www.mortality.org) constructs vital object suitable use functions. function uses HMDHFDplus::readHMDweb() download required data. designed handle Deaths, Population, Exposure, Death Rates Births. default, Deaths, Population, Exposure Death Rates downloaded. better handle Births separately age-specific.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data directly from HMD and construct a vital object for use in other functions — read_hmd","text":"","code":"read_hmd(   country,   username,   password,   variables = c(\"Deaths\", \"Exposures\", \"Population\", \"Mx\") )"},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data directly from HMD and construct a vital object for use in other functions — read_hmd","text":"country Directory abbreviation HMD. instance, Australia = \"AUS\". username HMD username (case-sensitive) password HMD password (case-sensitive) variables List variables download HMD. data contains mixture age-specific non-age-specific variables, non-age-specific data repeated age.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data directly from HMD and construct a vital object for use in other functions — read_hmd","text":"read_hmd returns vital object combining downloaded data.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read data directly from HMD and construct a vital object for use in other functions — read_hmd","text":"order read data, users required create account HMD website (https://www.mortality.org), obtain valid username password.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read data directly from HMD and construct a vital object for use in other functions — read_hmd","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read data directly from HMD and construct a vital object for use in other functions — read_hmd","text":"","code":"if (FALSE) { norway <- read_hmd(   country = \"NOR\",   username = \"Nora.Weigh@mymail.com\",   password = \"FF!5xeEFa6\" ) norway_births <- read_hmd(   country = \"NOR\",   username = \"Nora.Weigh@mymail.com\",   password = \"FF!5xeEFa6\",   variables = \"Births\" ) }"},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data from files downloaded from HMD and construct a vital object for use in other functions — read_hmd_files","title":"Read data from files downloaded from HMD and construct a vital object for use in other functions — read_hmd_files","text":"read_hmd_files reads single-year single-age data files downloaded Human Mortality Database (HMD https://www.mortality.org) constructs vital object suitable use functions. function uses HMDHFDplus::readHMD() parse files.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data from files downloaded from HMD and construct a vital object for use in other functions — read_hmd_files","text":"","code":"read_hmd_files(files)"},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data from files downloaded from HMD and construct a vital object for use in other functions — read_hmd_files","text":"files Vector file names containing data downloaded HMD. file names used determine contain. file names per HMD, function automatically determine contents. unclear file contains, columns named according filename. data contains mixture age-specific non-age-specific variables, non-age-specific data repeated age.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data from files downloaded from HMD and construct a vital object for use in other functions — read_hmd_files","text":"read_hmd_files returns vital object combining downloaded data.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd_files.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read data from files downloaded from HMD and construct a vital object for use in other functions — read_hmd_files","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read data from files downloaded from HMD and construct a vital object for use in other functions — read_hmd_files","text":"","code":"if (FALSE) { mortality <- read_hmd_files(   files = c(\"Deaths_1x1.txt\", \"Exposures_1x1.txt\", \"Population.txt\", \"Mx_1x1.txt\") ) births <- read_hmd_files(\"Births.txt\") }"},{"path":"https://pkg.robjhyndman.com/vital/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. fabletools augment, estimate, glance, interpolate, model, report, tidy generics forecast, generate ggplot2 autoplot","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/smooth_vital.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions to smooth demographic data — smooth_spline","title":"Functions to smooth demographic data — smooth_spline","text":"smoothing functions allow smoothing variable vital object. vital object returned along additional columns containing information smoothed variable: usually .smooth containing smoothed values, .smooth_se containing corresponding standard errors.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/smooth_vital.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions to smooth demographic data — smooth_spline","text":"","code":"smooth_spline(.data, .var, age_spacing = 1, k = -1)  smooth_mortality(.data, .var, age_spacing = 1, b = 65, power = 0.4, k = 30)  smooth_fertility(.data, .var, age_spacing = 1, lambda = 1e-10)  smooth_loess(.data, .var, age_spacing = 1, span = 0.2)"},{"path":"https://pkg.robjhyndman.com/vital/reference/smooth_vital.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions to smooth demographic data — smooth_spline","text":".data vital object .var name variable smooth age_spacing Spacing ages smoothed vital. Default 1. k Number knots use penalized regression spline estimate. b Lower age monotonicity. , smooth curve assumed monotonically increasing. power Power transformation age variable smoothing. Default 0.4 (mortality data). lambda Penalty constrained regression spline. span Span loess smooth.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/smooth_vital.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functions to smooth demographic data — smooth_spline","text":"vital added columns containing smoothed values standard errors","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/smooth_vital.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Functions to smooth demographic data — smooth_spline","text":"smooth_mortality() use penalized regression splines applied log mortality monotonicity constraint age b. methodology based Wood (1994). smooth_fertility() uses weighted regression B-splines concavity constraint, based Ng (1999). function smooth_loess() uses locally quadratic regression, smooth_spline() uses penalized regression splines.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/smooth_vital.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Functions to smooth demographic data — smooth_spline","text":"Hyndman, R.J., Ullah, S. (2007) Robust forecasting mortality fertility rates: functional data approach. Computational Statistics & Data Analysis, 51, 4942-4956. https://robjhyndman.com/publications/funcfor/","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/smooth_vital.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Functions to smooth demographic data — smooth_spline","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/smooth_vital.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functions to smooth demographic data — smooth_spline","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union aus_mortality |>   filter(State == \"Victoria\", Sex == \"female\") |>   smooth_mortality(Mortality) #> # A vital: 12,120 x 10 [1Y] #> # Key:     Age, Sex, State, Code [101] #>     Year   Age Sex    State   Code  Mortality Exposure Deaths .smooth .smooth_se #>    <int> <dbl> <chr>  <chr>   <chr>     <dbl>    <dbl>  <dbl> <dbl[1>  <dbl[1d]> #>  1  1901     0 female Victor… VIC     0.100      13993   1405 0.100     0.00258  #>  2  1901     1 female Victor… VIC     0.0235     13079    308 0.0233    0.00126  #>  3  1901     2 female Victor… VIC     0.00806    12409    100 0.00830   0.000683 #>  4  1901     3 female Victor… VIC     0.00472    12931     61 0.00480   0.000425 #>  5  1901     4 female Victor… VIC     0.00370    12986     48 0.00371   0.000333 #>  6  1901     5 female Victor… VIC     0.00324    13589     44 0.00328   0.000289 #>  7  1901     6 female Victor… VIC     0.00310    13872     43 0.00302   0.000263 #>  8  1901     7 female Victor… VIC     0.00284    14077     40 0.00276   0.000237 #>  9  1901     8 female Victor… VIC     0.00261    14198     37 0.00249   0.000215 #> 10  1901     9 female Victor… VIC     0.00225    14694     33 0.00222   0.000195 #> # ℹ 12,110 more rows aus_fertility |>   smooth_fertility(Fertility) #> # A vital: 3,010 x 7 [1Y] #> # Key:     Age [35] #>     Year   Age Fertility Exposure Births .smooth .smooth_se #>    <int> <dbl>     <dbl>    <dbl>  <dbl>   <dbl>      <dbl> #>  1  1921    15   0.00175    49228   86.1 0.00175    0.00304 #>  2  1921    16   0.00685    47779  327.  0.00684    0.0106  #>  3  1921    17   0.0183     45894  839.  0.0188     0.0256  #>  4  1921    18   0.0399     45683 1824.  0.0399     0.0479  #>  5  1921    19   0.0676     43364 2931.  0.0675     0.0708  #>  6  1921    20   0.0914     47016 4297.  0.0934     0.0850  #>  7  1921    21   0.120      48023 5787.  0.116      0.0916  #>  8  1921    22   0.142      46368 6566.  0.142      0.0974  #>  9  1921    23   0.16       45123 7220.  0.160      0.0965  #> 10  1921    24   0.167      46709 7782.  0.167      0.0902  #> # ℹ 3,000 more rows"},{"path":"https://pkg.robjhyndman.com/vital/reference/time_components.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract time components from a model — time_components","title":"Extract time components from a model — time_components","text":"mable single model column, return model components indexed time.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/time_components.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract time components from a model — time_components","text":"","code":"time_components(object, ...)"},{"path":"https://pkg.robjhyndman.com/vital/reference/time_components.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract time components from a model — time_components","text":"object vital mable object single model column. ... currently used.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/time_components.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract time components from a model — time_components","text":"tsibble object containing time components model.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/time_components.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract time components from a model — time_components","text":"","code":"aus_mortality |>   dplyr::filter(State == \"Victoria\", Sex == \"female\") |>   model(lee_carter = LC(log(Mortality))) |>   time_components() #> # A tsibble: 120 x 5 [1Y] #> # Key:       Sex, State, Code [1] #>    Sex    State    Code   Year    kt #>    <chr>  <chr>    <chr> <int> <dbl> #>  1 female Victoria VIC    1901 111.  #>  2 female Victoria VIC    1902 111.  #>  3 female Victoria VIC    1903 109.  #>  4 female Victoria VIC    1904 100.  #>  5 female Victoria VIC    1905  98.8 #>  6 female Victoria VIC    1906 104.  #>  7 female Victoria VIC    1907  97.0 #>  8 female Victoria VIC    1908 100.  #>  9 female Victoria VIC    1909  89.6 #> 10 female Victoria VIC    1910  91.2 #> # ℹ 110 more rows"},{"path":"https://pkg.robjhyndman.com/vital/reference/total_fertility_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute total fertility rate from age-specific fertility rates — total_fertility_rate","title":"Compute total fertility rate from age-specific fertility rates — total_fertility_rate","text":"Total fertility rate expected number babies per woman life-time given fertility rate age woman's life.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/total_fertility_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute total fertility rate from age-specific fertility rates — total_fertility_rate","text":"","code":"total_fertility_rate(.data, fertility)"},{"path":"https://pkg.robjhyndman.com/vital/reference/total_fertility_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute total fertility rate from age-specific fertility rates — total_fertility_rate","text":".data vital object including age variable variable containing fertility rates. fertility Variable .data containing fertility rates. omitted, variable name  fx, Fertility Rate used (case sensitive).","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/total_fertility_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute total fertility rate from age-specific fertility rates — total_fertility_rate","text":"vital object total fertility column tfr.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/total_fertility_rate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute total fertility rate from age-specific fertility rates — total_fertility_rate","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/total_fertility_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute total fertility rate from age-specific fertility rates — total_fertility_rate","text":"","code":"# Compute Australian total fertility rates over time aus_fertility |>   total_fertility_rate() #> # A vital: 86 x 4 [1Y] #>     Year Fertility Exposure  Births #>    <int>     <dbl>    <dbl>   <dbl> #>  1  1921      3.11  1418909 136874. #>  2  1922      3.10  1450407 138845. #>  3  1923      3.01  1482482 137207. #>  4  1924      2.97  1514008 137369. #>  5  1925      2.95  1547341 138818. #>  6  1926      2.85  1579812 136442. #>  7  1927      2.81  1613370 136994. #>  8  1928      2.77  1645999 137266. #>  9  1929      2.64  1673581 132331. #> 10  1930      2.58  1696345 130890. #> # ℹ 76 more rows"},{"path":"https://pkg.robjhyndman.com/vital/reference/vital-package.html","id":null,"dir":"Reference","previous_headings":"","what":"vital: Tidy Analysis Tools for Mortality, Fertility, Migration and Population Data — vital-package","title":"vital: Tidy Analysis Tools for Mortality, Fertility, Migration and Population Data — vital-package","text":"Functions analysing vital statistics based tools consistent tidyverse. Tools provided data visualization, lifetable calculations, computing net migration numbers, Lee-Carter modelling; functional data modelling forecasting.","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/vital/reference/vital-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"vital: Tidy Analysis Tools for Mortality, Fertility, Migration and Population Data — vital-package","text":"Maintainer: Rob Hyndman Rob.Hyndman@monash.edu (ORCID) [copyright holder] contributors: Mitchell O'Hara-Wild (ORCID) [contributor]","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/vital.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a vital object — vital","title":"Create a vital object — vital","text":"vital object type tsibble contains vital statistics births, deaths, population counts, mortality fertility rates. tsibble special class allows special methods used. object attribute stores variables names needed functions, including age, sex, births, deaths population.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/vital.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a vital object — vital","text":"","code":"vital(   ...,   key = NULL,   index,   .age = NULL,   .sex = NULL,   .deaths = NULL,   .births = NULL,   .population = NULL,   regular = TRUE,   .drop = TRUE )"},{"path":"https://pkg.robjhyndman.com/vital/reference/vital.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a vital object — vital","text":"... set name-value pairs key Variable(s) uniquely determine time indices. NULL empty key, c() multiple variables. works tidy selector (e.g. tidyselect::starts_with()) index variable specify time index variable. .age Character string name age variable .sex Character string name sex variable .deaths Character string name deaths variable .births Character string name births variable .population Character string name population variable regular Regular time interval (TRUE) irregular (FALSE). interval determined greatest common divisor index column, TRUE. .drop TRUE, empty key groups dropped.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/vital.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a vital object — vital","text":"tsibble class vital.","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/vital/reference/vital.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a vital object — vital","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/vital.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a vital object — vital","text":"","code":"# create a vital with only age as a key vital(   year = rep(2010:2015, 100),   age = rep(0:99, each = 6),   mx = runif(600, 0, 1),   index = year,   key = age,   .age = \"age\" ) #> # A vital: 600 x 3 [1Y] #> # Key:     age [100] #>     year   age     mx #>    <int> <int>  <dbl> #>  1  2010     0 0.202  #>  2  2011     0 0.942  #>  3  2012     0 0.655  #>  4  2013     0 0.944  #>  5  2014     0 0.0702 #>  6  2015     0 0.0720 #>  7  2010     1 0.346  #>  8  2011     1 0.835  #>  9  2012     1 0.448  #> 10  2013     1 0.867  #> # ℹ 590 more rows"},{"path":"https://pkg.robjhyndman.com/vital/news/index.html","id":"vital-010","dir":"Changelog","previous_headings":"","what":"vital 0.1.0","title":"vital 0.1.0","text":"Still development CRAN version planned June 2024","code":""}]
