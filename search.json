[{"path":"https://pkg.robjhyndman.com/vital/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rob Hyndman. Author, maintainer, copyright holder. Mitchell O'Hara-Wild. Contributor.","code":""},{"path":"https://pkg.robjhyndman.com/vital/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hyndman R (2023). vital: Tidy Analysis Tools Mortality, Fertility, Migration Population Data. https://pkg.robjhyndman.com/vital, http://github.com/robjhyndman/vital.","code":"@Manual{,   title = {vital: Tidy Analysis Tools for Mortality, Fertility, Migration and Population Data},   author = {Rob Hyndman},   year = {2023},   note = {https://pkg.robjhyndman.com/vital, http://github.com/robjhyndman/vital}, }"},{"path":"https://pkg.robjhyndman.com/vital/index.html","id":"vital","dir":"","previous_headings":"","what":"Tidy Analysis Tools for Mortality, Fertility, Migration and Population Data","title":"Tidy Analysis Tools for Mortality, Fertility, Migration and Population Data","text":"goal vital allow analysis demographic data using tidy tools.","code":""},{"path":"https://pkg.robjhyndman.com/vital/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tidy Analysis Tools for Mortality, Fertility, Migration and Population Data","text":"can install development version vital GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"robjhyndman/vital\")"},{"path":"https://pkg.robjhyndman.com/vital/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Tidy Analysis Tools for Mortality, Fertility, Migration and Population Data","text":"","code":"library(vital) demography::fr.mort |> as_vital() #> # A tsibble: 63,603 x 7 [1Y] #> # Key:       AgeGroup, Age, Group [333] #>     Year AgeGroup   Age Group  Mortality Exposure Deaths #>    <dbl> <chr>    <dbl> <chr>      <dbl>    <dbl>  <dbl> #>  1  1816 0            0 female     0.187  408224. 76332. #>  2  1817 0            0 female     0.182  416591. 75706. #>  3  1818 0            0 female     0.186  406352. 75465. #>  4  1819 0            0 female     0.197  414025. 81477. #>  5  1820 0            0 female     0.181  442196. 80000. #>  6  1821 0            0 female     0.182  438347. 79709. #>  7  1822 0            0 female     0.207  418536. 86756. #>  8  1823 0            0 female     0.192  418807. 80469. #>  9  1824 0            0 female     0.199  423222. 84023. #> 10  1825 0            0 female     0.194  448137. 87104. #> # … with 63,593 more rows"},{"path":"https://pkg.robjhyndman.com/vital/reference/FDM.html","id":null,"dir":"Reference","previous_headings":"","what":"Functional data model — FDM","title":"Functional data model — FDM","text":"Functional data model mortality fertility rates function age. FDM() returns functional data model applied formula's response variable function age.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FDM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functional data model — FDM","text":"","code":"FDM(formula, order = 6, ts_model_fn = fable::ARIMA, ...)"},{"path":"https://pkg.robjhyndman.com/vital/reference/FDM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functional data model — FDM","text":"formula Model specification. order Number principal components fit. ts_model_fn Univariate time series modelling function coefficients. ... used.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FDM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functional data model — FDM","text":"model specification.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FDM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Functional data model — FDM","text":"Hyndman, R.J., Ullah, S. (2007) Robust forecasting mortality fertility rates: functional data approach. Computational Statistics & Data Analysis, 51, 4942-4956. https://robjhyndman.com/publications/funcfor/","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FDM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Functional data model — FDM","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FDM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functional data model — FDM","text":"","code":"hu <- aus_mortality |>   dplyr::filter(State == \"Victoria\", Sex == \"female\") |>   model(hyndman_ullah = FDM(Mortality)) report(hu) #> Series: Mortality  #> Model: FDM  #>  #> Basis functions #> # A tibble: 101 × 8 #>     Age  mean  phi1    phi2    phi3    phi4    phi5    phi6 #>   <int> <dbl> <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> #> 1     0 -3.87 0.137  0.0753  0.0538 -0.0252  0.0310 -0.0447 #> 2     1 -6.04 0.195 -0.0164  0.0291  0.0891 -0.169   0.0463 #> 3     2 -6.67 0.167  0.0481  0.0901 -0.0151 -0.0418 -0.0534 #> 4     3 -7.07 0.168  0.116   0.0461 -0.120   0.0407 -0.106  #> 5     4 -7.14 0.150  0.0138 -0.0113 -0.0248 -0.0686  0.0389 #> # ℹ 96 more rows #>  #> Coefficients #> # A tsibble: 103 x 8 [1Y] #>    Year  mean beta1   beta2 beta3 beta4 beta5    beta6 #>   <int> <dbl> <dbl>   <dbl> <dbl> <dbl> <dbl>    <dbl> #> 1  1901     1 10.9  -0.0595  1.77  1.30 0.407  0.00618 #> 2  1902     1 10.7  -0.255   1.41  1.30 0.227 -0.0997  #> 3  1903     1 10.6  -0.334   1.70  1.09 0.406  0.0160  #> 4  1904     1 10.1  -0.148   1.62  1.20 0.418  0.0656  #> 5  1905     1  9.63 -0.432   1.54  1.10 0.669  0.0869  #> # ℹ 98 more rows #>  #> Time series models #>    beta1 : ARIMA(0,1,1) w/ drift  #>    beta2 : ARIMA(2,0,0)  #>    beta3 : ARIMA(2,0,3)  #>    beta4 : ARIMA(2,0,2)  #>    beta5 : ARIMA(1,0,1)  #>    beta6 : ARIMA(2,0,2)  #>  #> Variance explained #>   89.39 + 2.21 + 1 + 0.72 + 0.62 + 0.44 = 94.39% autoplot(hu)"},{"path":"https://pkg.robjhyndman.com/vital/reference/FMEAN.html","id":null,"dir":"Reference","previous_headings":"","what":"Functional mean model — FMEAN","title":"Functional mean model — FMEAN","text":"FMEAN() returns iid functional model applied formula's response variable function age.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FMEAN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functional mean model — FMEAN","text":"","code":"FMEAN(formula, ...)"},{"path":"https://pkg.robjhyndman.com/vital/reference/FMEAN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functional mean model — FMEAN","text":"formula Model specification. ... used.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FMEAN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functional mean model — FMEAN","text":"model specification.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FMEAN.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Functional mean model — FMEAN","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FMEAN.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functional mean model — FMEAN","text":"","code":"fmean <- aus_mortality |>   dplyr::filter(State == \"Victoria\", Sex == \"female\") |>   model(mean = FMEAN(Mortality)) report(fmean) #> Series: Mortality  #> Model: FMEAN  #>  #> # A tibble: 101 × 3 #>      Age     mean    sigma #>    <int>    <dbl>    <dbl> #>  1     0 0.0310   0.0263   #>  2     1 0.00514  0.00574  #>  3     2 0.00226  0.00222  #>  4     3 0.00149  0.00143  #>  5     4 0.00129  0.00120  #>  6     5 0.00108  0.00101  #>  7     6 0.000967 0.000870 #>  8     7 0.000864 0.000821 #>  9     8 0.000717 0.000692 #> 10     9 0.000664 0.000597 #> # ℹ 91 more rows autoplot(fmean) + ggplot2::scale_y_log10()"},{"path":"https://pkg.robjhyndman.com/vital/reference/FNAIVE.html","id":null,"dir":"Reference","previous_headings":"","what":"Functional naive model — FNAIVE","title":"Functional naive model — FNAIVE","text":"FNAIVE() returns random walk functional model applied formula's response variable function age.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FNAIVE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functional naive model — FNAIVE","text":"","code":"FNAIVE(formula, ...)"},{"path":"https://pkg.robjhyndman.com/vital/reference/FNAIVE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functional naive model — FNAIVE","text":"formula Model specification. ... used.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FNAIVE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functional naive model — FNAIVE","text":"model specification.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FNAIVE.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Functional naive model — FNAIVE","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FNAIVE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functional naive model — FNAIVE","text":"","code":"fnaive <- aus_mortality |>   dplyr::filter(State == \"Victoria\", Sex == \"female\") |>   model(fit = FNAIVE(Mortality)) report(fnaive) #> Series: Mortality  #> Model: FNAIVE  #>  #> # A tibble: 101 × 2 #>      Age    sigma #>    <int>    <dbl> #>  1     0 0.00658  #>  2     1 0.00194  #>  3     2 0.000656 #>  4     3 0.000432 #>  5     4 0.000477 #>  6     5 0.000437 #>  7     6 0.000414 #>  8     7 0.000356 #>  9     8 0.000330 #> 10     9 0.000307 #> # ℹ 91 more rows autoplot(fnaive) + ggplot2::scale_y_log10()"},{"path":"https://pkg.robjhyndman.com/vital/reference/LC.html","id":null,"dir":"Reference","previous_headings":"","what":"Lee-Carter model — LC","title":"Lee-Carter model — LC","text":"Lee-Carter model mortality fertility rates. LC() returns Lee-Carter model applied formula's response variable function age. produces standard Lee-Carter model default, although many options available. Missing rates set geometric mean rate relevant age.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/LC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lee-Carter model — LC","text":"","code":"LC(formula, adjust = c(\"dt\", \"dxt\", \"e0\", \"none\"), scale = FALSE, ...)"},{"path":"https://pkg.robjhyndman.com/vital/reference/LC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lee-Carter model — LC","text":"formula Model specification. adjust method use adjustment coefficients \\(k_t kt\\). Possibilities “dt” (Lee-Carter method, default), “dxt” (BMS method), “e0” (Lee-Miller method based life expectancy) “none”. scale TRUE, bx kt rescaled kt drift parameter = 1. ... used.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/LC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lee-Carter model — LC","text":"model specification.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/LC.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Lee-Carter model — LC","text":"Basellini, U, Camarda, C G, Booth, H (2022) Thirty years : review Lee-Carter method forecasting mortality. International Journal Forecasting, 39(3), 1033-1049. https://doi.org/10.1016/j.ijforecast.2022.11.002 Booth, H., Maindonald, J., Smith, L. (2002) Applying Lee-Carter conditions variable mortality decline. Population Studies, 56, 325-336. https://doi.org/10.1080/00324720215935 Lee, R D, Carter, L R (1992) Modeling forecasting US mortality. Journal American Statistical Association, 87, 659-671. https://doi.org/10.1080/01621459.1992.10475265 Lee R D, Miller T (2001). Evaluating performance Lee-Carter   method forecasting mortality. Demography, 38(4), 537–549. https://doi.org/10.1353/dem.2001.0036","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/LC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Lee-Carter model — LC","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/LC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lee-Carter model — LC","text":"","code":"lc <- aus_mortality |>   dplyr::filter(State == \"Victoria\", Sex == \"female\") |>   model(lee_carter = LC(Mortality)) report(lc) #> Series: Mortality  #> Model: LC  #>  #> Age functions #> # A tibble: 101 × 3 #>     Age    ax     bx #>   <int> <dbl>  <dbl> #> 1     0 -4.95 0.0110 #> 2     1 -4.90 0.0109 #> 3     2 -4.93 0.0111 #> 4     3 -4.95 0.0110 #> 5     4 -4.91 0.0109 #> # ℹ 96 more rows #>  #> Time coefficients #> # A tsibble: 103 x 2 [1Y] #>    Year     kt #>   <int>  <dbl> #> 1  1901  109.  #> 2  1902  -82.5 #> 3  1903 -165.  #> 4  1904 -205.  #> 5  1905 -218.  #> # ℹ 98 more rows #>  #> Time series model: RW w/ drift  #>  #> Variance explained: 90.27% autoplot(lc)"},{"path":"https://pkg.robjhyndman.com/vital/reference/as_vital.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce to a vital object — as_vital","title":"Coerce to a vital object — as_vital","text":"vital object type tsibble contains vital statistics births, deaths, population counts, mortality fertility rates. tsibble special class allows special methods used. object attribute stores variables names needed functions, including age, sex, births, deaths population.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/as_vital.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce to a vital object — as_vital","text":"","code":"as_vital(x, ...)  # S3 method for demogdata as_vital(x, sex_groups = TRUE, ...)  # S3 method for tbl_ts as_vital(   x,   .age = NULL,   .sex = NULL,   .deaths = NULL,   .births = NULL,   .population = NULL,   reorder = FALSE,   ... )  # S3 method for data.frame as_vital(   x,   key = NULL,   index,   .age = NULL,   .sex = NULL,   .deaths = NULL,   .births = NULL,   .population = NULL,   ... )"},{"path":"https://pkg.robjhyndman.com/vital/reference/as_vital.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce to a vital object — as_vital","text":"x Object coerced vital format. ... arguments passed as_tsibble sex_groups Logical variable indicating groups denote sexes .age Character string name age variable .sex Character string name sex variable .deaths Character string name deaths variable .births Character string name births variable .population Character string name population variable reorder Logical indicating variables reordered. key Variable(s) uniquely determine time indices. NULL empty key, c() multiple variables. works tidy selector (e.g. starts_with()). index variable specify time index variable.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/as_vital.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce to a vital object — as_vital","text":"vital object.","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/vital/reference/as_vital.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Coerce to a vital object — as_vital","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/as_vital.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce to a vital object — as_vital","text":"","code":"# coerce demogdata object to vital as_vital(demography::fr.mort) #> # A vital: 63,603 x 7 [1Y] #> # Key:     AgeGroup, Age, Sex [333] #>     Year AgeGroup   Age Sex    Mortality Exposure Deaths #>    <int> <chr>    <int> <chr>      <dbl>    <dbl>  <dbl> #>  1  1816 0            0 female   0.187    408224. 76332. #>  2  1816 1            1 female   0.0467   382452. 17861. #>  3  1816 2            2 female   0.0339   351454. 11924. #>  4  1816 3            3 female   0.0229   337733.  7738. #>  5  1816 4            4 female   0.0160   331576.  5304. #>  6  1816 5            5 female   0.0138   313554.  4338. #>  7  1816 6            6 female   0.0121   306853.  3714. #>  8  1816 7            7 female   0.0104   301860.  3148. #>  9  1816 8            8 female   0.00891  296639.  2642. #> 10  1816 9            9 female   0.00760  289057.  2195. #> # ℹ 63,593 more rows # create a vital with only age as a key tibble(   year = rep(2010:2015, 100),   age = rep(0:99, each = 6),   mx = runif(600, 0, 1) ) |>   as_vital(     index = year,     key = age,     .age = \"age\"   ) #> # A vital: 600 x 3 [1Y] #> # Key:     age [100] #>     year   age    mx #>    <int> <int> <dbl> #>  1  2010     0 0.583 #>  2  2011     0 0.371 #>  3  2012     0 0.533 #>  4  2013     0 0.437 #>  5  2014     0 0.450 #>  6  2015     0 0.576 #>  7  2010     1 0.424 #>  8  2011     1 0.393 #>  9  2012     1 0.675 #> 10  2013     1 0.830 #> # ℹ 590 more rows"},{"path":"https://pkg.robjhyndman.com/vital/reference/aus_fertility.html","id":null,"dir":"Reference","previous_headings":"","what":"Australian fertility data — aus_fertility","title":"Australian fertility data — aus_fertility","text":"aus_fertility annual `vital` object covering years 1921-2002 three values:","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/aus_fertility.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Australian fertility data — aus_fertility","text":"Time series class `vital`","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/aus_fertility.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Australian fertility data — aus_fertility","text":"Australian Human Mortality Database","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/aus_fertility.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Australian fertility data — aus_fertility","text":"data disaggregated using one key: extreme age groups (15 49) also include younger older mothers respectively.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/aus_fertility.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Australian fertility data — aus_fertility","text":"","code":"library(ggplot2) aus_fertility #> # A vital: 3,010 x 5 [1Y] #> # Key:     Age [35] #>     Year   Age Fertility Exposure Births #>    <int> <int>     <dbl>    <dbl>  <dbl> #>  1  1921    15   0.00175    49228   86.1 #>  2  1922    15   0.00159    50118   79.7 #>  3  1923    15   0.00159    51033   81.1 #>  4  1924    15   0.00171    51930   88.8 #>  5  1925    15   0.0021     52888  111.  #>  6  1926    15   0.0024     53813  129.  #>  7  1927    15   0.0023     54770  126.  #>  8  1928    15   0.0024     55701  134.  #>  9  1929    15   0.0025     56464  141.  #> 10  1930    15   0.0023     57066  131.  #> # ℹ 3,000 more rows aus_fertility |>   autoplot(Fertility) +   ylab(\"Fertility rate\")"},{"path":"https://pkg.robjhyndman.com/vital/reference/aus_mortality.html","id":null,"dir":"Reference","previous_headings":"","what":"Australian mortality data — aus_mortality","title":"Australian mortality data — aus_mortality","text":"aus_mortality annual `vital` three values:","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/aus_mortality.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Australian mortality data — aus_mortality","text":"Time series class `vital`","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/aus_mortality.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Australian mortality data — aus_mortality","text":"Australian Human Mortality Database","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/aus_mortality.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Australian mortality data — aus_mortality","text":"data disaggregated using four keys: age group 100 also includes people died aged older 100.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/aus_mortality.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Australian mortality data — aus_mortality","text":"","code":"library(ggplot2) aus_mortality #> # A vital: 280,881 x 8 [1Y] #> # Key:     Age, Sex, State, Code [2,727] #>     Year   Age Sex    State     Code  Mortality Exposure Deaths #>    <int> <int> <chr>  <chr>     <chr>     <dbl>    <dbl>  <dbl> #>  1  1901     0 female Australia AUS     0.103      46315   4780 #>  2  1901     1 female Australia AUS     0.0231     42345    978 #>  3  1901     2 female Australia AUS     0.00694    41766    290 #>  4  1901     3 female Australia AUS     0.00453    42635    193 #>  5  1901     4 female Australia AUS     0.00376    42774    161 #>  6  1901     5 female Australia AUS     0.00299    44160    132 #>  7  1901     6 female Australia AUS     0.00259    44747    116 #>  8  1901     7 female Australia AUS     0.00218    45515     99 #>  9  1901     8 female Australia AUS     0.00185    45437     84 #> 10  1901     9 female Australia AUS     0.00144    45911     66 #> # ℹ 280,871 more rows aus_mortality |>   dplyr::filter(State==\"Victoria\", Sex != \"total\") |>   autoplot(Exposure) +   ylab(\"Population at 30 June (thousands)\")"},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.fbl_vtl_ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot forecasts from a vital model — autoplot.fbl_vtl_ts","title":"Plot forecasts from a vital model — autoplot.fbl_vtl_ts","text":"Produces plot showing forecasts obtained model applied vital object.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.fbl_vtl_ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot forecasts from a vital model — autoplot.fbl_vtl_ts","text":"","code":"# S3 method for fbl_vtl_ts autoplot(object, ...)"},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.fbl_vtl_ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot forecasts from a vital model — autoplot.fbl_vtl_ts","text":"object fable object obtained vital model. ... arguments ignored.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.fbl_vtl_ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot forecasts from a vital model — autoplot.fbl_vtl_ts","text":"ggplot2 object.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.fbl_vtl_ts.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot forecasts from a vital model — autoplot.fbl_vtl_ts","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.fbl_vtl_ts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot forecasts from a vital model — autoplot.fbl_vtl_ts","text":"","code":"library(ggplot2) aus_mortality |>  dplyr::filter(State == \"Victoria\") |>  model(ave = FMEAN(Mortality)) |>  forecast(h = 10) |>  autoplot() + scale_y_log10()"},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.mdl_vtl_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot output from a vital model — autoplot.mdl_vtl_df","title":"Plot output from a vital model — autoplot.mdl_vtl_df","text":"Produces plot showing model applied vital object. can applied one type model . use select() choose model column plot. multiple keys, separate models identified colour.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.mdl_vtl_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot output from a vital model — autoplot.mdl_vtl_df","text":"","code":"# S3 method for mdl_vtl_df autoplot(object, ...)"},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.mdl_vtl_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot output from a vital model — autoplot.mdl_vtl_df","text":"object mable object obtained vital. ... arguments ignored.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.mdl_vtl_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot output from a vital model — autoplot.mdl_vtl_df","text":"ggplot2 object.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.mdl_vtl_df.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot output from a vital model — autoplot.mdl_vtl_df","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.mdl_vtl_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot output from a vital model — autoplot.mdl_vtl_df","text":"","code":"library(ggplot2) aus_mortality |>  dplyr::filter(State == \"Victoria\") |>  model(ave = FMEAN(Mortality)) |>  autoplot() + scale_y_log10()"},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.vital.html","id":null,"dir":"Reference","previous_headings":"","what":"Rainbow plot of demographic data against age — autoplot.vital","title":"Rainbow plot of demographic data against age — autoplot.vital","text":"Produce rainbow plot (coloured time index) demographic variable age.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.vital.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rainbow plot of demographic data against age — autoplot.vital","text":"","code":"# S3 method for vital autoplot(object, .vars = NULL, ...)"},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.vital.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rainbow plot of demographic data against age — autoplot.vital","text":"object vital including age variable variable wish plot. .vars name variable wish plot. ... arguments used.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.vital.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rainbow plot of demographic data against age — autoplot.vital","text":"ggplot2 object.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.vital.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Rainbow plot of demographic data against age — autoplot.vital","text":"Hyndman, Rob J & Shang, Han Lin (2010) Rainbow plots, bagplots, boxplots functional data. Journal Computational Graphical Statistics, 19(1), 29-45. https://robjhyndman.com/publications/rainbow-fda/","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.vital.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rainbow plot of demographic data against age — autoplot.vital","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.vital.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rainbow plot of demographic data against age — autoplot.vital","text":"","code":"autoplot(aus_fertility, Fertility)"},{"path":"https://pkg.robjhyndman.com/vital/reference/collapse_ages.html","id":null,"dir":"Reference","previous_headings":"","what":"Collapse upper ages into a single age group. Counts are summed while\nrates are recomputed. — collapse_ages","title":"Collapse upper ages into a single age group. Counts are summed while\nrates are recomputed. — collapse_ages","text":"Collapse upper ages single age group. Counts summed rates recomputed.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/collapse_ages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collapse upper ages into a single age group. Counts are summed while\nrates are recomputed. — collapse_ages","text":"","code":"collapse_ages(.data, max_age = 100)"},{"path":"https://pkg.robjhyndman.com/vital/reference/collapse_ages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collapse upper ages into a single age group. Counts are summed while\nrates are recomputed. — collapse_ages","text":".data vital object including age variable max_age Maximum age include collapsed age group.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/collapse_ages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collapse upper ages into a single age group. Counts are summed while\nrates are recomputed. — collapse_ages","text":"vital object variables `.data`, upper ages collapsed single age group.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/collapse_ages.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Collapse upper ages into a single age group. Counts are summed while\nrates are recomputed. — collapse_ages","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/collapse_ages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collapse upper ages into a single age group. Counts are summed while\nrates are recomputed. — collapse_ages","text":"","code":"aus_mortality |>  dplyr::filter(State == \"Victoria\", Sex == \"female\") |>  collapse_ages(max_age = 85) #> # A vital: 8,858 x 8 [1Y] #> # Key:     Age, Sex, State, Code [86] #>     Year   Age Sex    State    Code  Mortality Exposure Deaths #>    <int> <int> <chr>  <chr>    <chr>     <dbl>    <dbl>  <dbl> #>  1  1901     0 female Victoria VIC      0.100     13993   1405 #>  2  1902     0 female Victoria VIC      0.108     14049   1516 #>  3  1903     0 female Victoria VIC      0.103     14064   1452 #>  4  1904     0 female Victoria VIC      0.0726    14058   1020 #>  5  1905     0 female Victoria VIC      0.0752    14125   1062 #>  6  1906     0 female Victoria VIC      0.0916    14232   1303 #>  7  1907     0 female Victoria VIC      0.0688    14395    990 #>  8  1908     0 female Victoria VIC      0.0810    14547   1178 #>  9  1909     0 female Victoria VIC      0.0645    14716    949 #> 10  1910     0 female Victoria VIC      0.0701    14847   1041 #> # ℹ 8,848 more rows"},{"path":"https://pkg.robjhyndman.com/vital/reference/forecast.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce forecasts from a vital model — forecast.FDM","title":"Produce forecasts from a vital model — forecast.FDM","text":"forecast function allows produce future predictions vital model, response function age. forecasts returned contain point forecasts distribution.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/forecast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce forecasts from a vital model — forecast.FDM","text":"","code":"# S3 method for FDM forecast(   object,   new_data = NULL,   h = NULL,   point_forecast = list(.mean = mean),   simulate = FALSE,   bootstrap = FALSE,   times = 5000,   seed = NULL,   ... )  # S3 method for LC forecast(   object,   new_data = NULL,   h = NULL,   point_forecast = list(.mean = mean),   simulate = FALSE,   bootstrap = FALSE,   times = 5000,   seed = NULL,   se = c(\"innovdrift\", \"innovonly\"),   jumpchoice = c(\"fit\", \"actual\"),   ... )  # S3 method for FMEAN forecast(   object,   new_data = NULL,   h = NULL,   point_forecast = list(.mean = mean),   simulate = FALSE,   bootstrap = FALSE,   times = 5000,   seed = NULL,   ... )  # S3 method for FNAIVE forecast(   object,   new_data = NULL,   h = NULL,   point_forecast = list(.mean = mean),   simulate = FALSE,   bootstrap = FALSE,   times = 5000,   seed = NULL,   ... )  # S3 method for mdl_vtl_df forecast(   object,   new_data = NULL,   h = NULL,   point_forecast = list(.mean = mean),   simulate = FALSE,   bootstrap = FALSE,   times = 5000,   seed = NULL,   ... )"},{"path":"https://pkg.robjhyndman.com/vital/reference/forecast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce forecasts from a vital model — forecast.FDM","text":"object mable containing one models. new_data `tsibble` containing future information used forecast. h Number time steps ahead forecast. can used instead new_data covariates model. ignored new_data provided. point_forecast list functions used compute point forecasts forecast distribution. simulate  `TRUE`, forecast distributions computed using simulation parametric model. bootstrap `TRUE`, forecast distributions computed using simulation resampling. times number sample paths use estimating forecast distribution `bootstrap = TRUE`. seed seed random generation distributions. ... Additional arguments passed specific model method. se Method used computation standard error. Possibilities: “innovdrift” (innovations drift) “innovonly” (innovations ). jumpchoice Method used computation jumpchoice. Possibilities: “actual” (use actual rates final year) “fit” (use fitted rates). original Lee-Carter method used 'fit' (default), Lee Miller (2001) authors prefer 'actual' (default).","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/forecast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce forecasts from a vital model — forecast.FDM","text":"fable containing following columns: - `.model`: name model used obtain forecast. Taken   column names models provided mable. - forecast distribution. name column   dependent variable model(s). multiple dependent variables exist,   named `.distribution`. - Point forecasts computed distribution using functions   `point_forecast` argument. - columns `new_data`, excluding whose names conflict   .","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/forecast.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Produce forecasts from a vital model — forecast.FDM","text":"Rob J Hyndman Mitchell O'Hara-Wild","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/generate.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate responses from a mable — generate.mdl_vtl_df","title":"Generate responses from a mable — generate.mdl_vtl_df","text":"Use fitted model simulate future data similar behaviour response.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/generate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate responses from a mable — generate.mdl_vtl_df","text":"","code":"# S3 method for mdl_vtl_df generate(   x,   new_data = NULL,   h = NULL,   bootstrap = FALSE,   times = 1,   seed = NULL,   ... )"},{"path":"https://pkg.robjhyndman.com/vital/reference/generate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate responses from a mable — generate.mdl_vtl_df","text":"x mable. new_data Future data needed generation (include time index exogenous regressors) h simulation horizon (can used instead `new_data` regular time series exogenous regressors). bootstrap `TRUE`, forecast distributions computed using simulation resampled errors. times number replications. seed seed random generation distributions. ... Additional arguments","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/generate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate responses from a mable — generate.mdl_vtl_df","text":"Innovations sampled model's assumed error distribution. `bootstrap` `TRUE`, innovations sampled model's residuals.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/generate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate responses from a mable — generate.mdl_vtl_df","text":"Rob J Hyndman Mitchell O'Hara-Wild","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/generate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate responses from a mable — generate.mdl_vtl_df","text":"","code":"aus_mortality |>   dplyr::filter(State == \"Victoria\") |>   model(lc = LC(Mortality)) |>   generate(times = 3, bootstrap = TRUE) #> # A vital: 1,818 x 8 [1Y] #> # Key:     Age, Sex, State, Code, .model, .rep [909] #>     Year   Age Sex    State    Code  .model .rep   .sim #>    <dbl> <int> <chr>  <chr>    <chr> <chr>  <chr> <dbl> #>  1  2004     0 female Victoria VIC   lc     1     0.477 #>  2  2004     1 female Victoria VIC   lc     1     0.489 #>  3  2004     2 female Victoria VIC   lc     1     0.515 #>  4  2004     3 female Victoria VIC   lc     1     0.485 #>  5  2004     4 female Victoria VIC   lc     1     0.483 #>  6  2004     5 female Victoria VIC   lc     1     0.462 #>  7  2004     6 female Victoria VIC   lc     1     0.472 #>  8  2004     7 female Victoria VIC   lc     1     0.501 #>  9  2004     8 female Victoria VIC   lc     1     0.446 #> 10  2004     9 female Victoria VIC   lc     1     0.485 #> # ℹ 1,808 more rows"},{"path":"https://pkg.robjhyndman.com/vital/reference/interpolate.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolate missing values using a vital model — interpolate.mdl_vtl_df","title":"Interpolate missing values using a vital model — interpolate.mdl_vtl_df","text":"Uses fitted vital model interpolate missing values dataset.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/interpolate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolate missing values using a vital model — interpolate.mdl_vtl_df","text":"","code":"# S3 method for mdl_vtl_df interpolate(object, new_data, ...)"},{"path":"https://pkg.robjhyndman.com/vital/reference/interpolate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolate missing values using a vital model — interpolate.mdl_vtl_df","text":"object mable containing single model column. new_data dataset structure data used fit model. ... arguments passed interpolate methods.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/interpolate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Interpolate missing values using a vital model — interpolate.mdl_vtl_df","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/life_expectancy.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute life expectancy from age-specific mortality rates — life_expectancy","title":"Compute life expectancy from age-specific mortality rates — life_expectancy","text":"Returns remaining life expectancy given age (0 default).","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/life_expectancy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute life expectancy from age-specific mortality rates — life_expectancy","text":"","code":"life_expectancy(.data, from_age = 0, mortality)"},{"path":"https://pkg.robjhyndman.com/vital/reference/life_expectancy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute life expectancy from age-specific mortality rates — life_expectancy","text":".data vital object including age variable variable containing mortality rates. from_age Age life expectancy calculated. Either scalar vector ages. mortality Variable `.data` containing Mortality rates (mx). omitted, variable name  `mx`, `Mortality` `Rate` used (case sensitive).","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/life_expectancy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute life expectancy from age-specific mortality rates — life_expectancy","text":"vital object life expectancy column `ex`.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/life_expectancy.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute life expectancy from age-specific mortality rates — life_expectancy","text":"Chiang CL. (1984) life table applications. Robert E Krieger Publishing Company: Malabar. Keyfitz, N, Caswell, H. (2005) Applied Mathematical Demography, Springer-Verlag: New York. Preston, S.H., Heuveline, P., Guillot, M. (2001) Demography: measuring modeling population processes. Blackwell","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/vital/reference/life_expectancy.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute life expectancy from age-specific mortality rates — life_expectancy","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/life_expectancy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute life expectancy from age-specific mortality rates — life_expectancy","text":"","code":"# Compute Australia life expectancy for females over time aus_mortality |>   dplyr::filter(Code == \"AUS\", Sex == \"female\") |>   life_expectancy() #> # A vital: 103 x 6 [1Y] #> # Key:     Age, Sex, State, Code [1] #>     Year Sex    State     Code     ex   Age #>    <int> <chr>  <chr>     <chr> <dbl> <int> #>  1  1901 female Australia AUS    56.3     0 #>  2  1902 female Australia AUS    55.8     0 #>  3  1903 female Australia AUS    56.4     0 #>  4  1904 female Australia AUS    58.7     0 #>  5  1905 female Australia AUS    59.8     0 #>  6  1906 female Australia AUS    59.5     0 #>  7  1907 female Australia AUS    59.6     0 #>  8  1908 female Australia AUS    59.8     0 #>  9  1909 female Australia AUS    61.4     0 #> 10  1910 female Australia AUS    61.2     0 #> # ℹ 93 more rows"},{"path":"https://pkg.robjhyndman.com/vital/reference/life_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute period lifetables from age-specific mortality rates — life_table","title":"Compute period lifetables from age-specific mortality rates — life_table","text":"available years ages included tables. qx = mx/(1 + ((1-ax) * mx)) per Chiang (1984). Warning: code tested data based single-year age groups.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/life_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute period lifetables from age-specific mortality rates — life_table","text":"","code":"life_table(.data, mortality)"},{"path":"https://pkg.robjhyndman.com/vital/reference/life_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute period lifetables from age-specific mortality rates — life_table","text":".data vital including age variable variable containing mortality rates. mortality Variable `.data` containing Mortality rates (mx). omitted, variable name  `mx`, `Mortality` `Rate` used (case sensitive).","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/life_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute period lifetables from age-specific mortality rates — life_table","text":"vital object containing index, keys, new life table variables `mx`, `qx`, `lx`, `dx`, `Lx`, `Tx` `ex`.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/life_table.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute period lifetables from age-specific mortality rates — life_table","text":"Chiang CL. (1984) life table applications. Robert E Krieger Publishing Company: Malabar. Keyfitz, N, Caswell, H. (2005) Applied mathematical demography, Springer-Verlag: New York. Preston, S.H., Heuveline, P., Guillot, M. (2001) Demography: measuring modeling population processes. Blackwell","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/life_table.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute period lifetables from age-specific mortality rates — life_table","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/life_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute period lifetables from age-specific mortality rates — life_table","text":"","code":"# Compute Australia life table for females in 2003 aus_mortality |>   dplyr::filter(Code == \"AUS\", Sex == \"female\", Year == 2003) |>   life_table() #> # A vital: 101 x 12 [?] #> # Key:     Age, Sex, State, Code [101] #>     Year Sex   State Code       mx      qx    lx      dx    Lx    Tx    ex   Age #>    <int> <chr> <chr> <chr>   <dbl>   <dbl> <dbl>   <dbl> <dbl> <dbl> <dbl> <int> #>  1  2003 fema… Aust… AUS   4.33e-3 4.32e-3 1     4.32e-3 0.996  83.2  83.2     0 #>  2  2003 fema… Aust… AUS   3.66e-4 3.66e-4 0.996 3.64e-4 0.996  82.2  82.5     1 #>  3  2003 fema… Aust… AUS   2.34e-4 2.34e-4 0.995 2.33e-4 0.995  81.2  81.6     2 #>  4  2003 fema… Aust… AUS   2.07e-4 2.07e-4 0.995 2.06e-4 0.995  80.2  80.6     3 #>  5  2003 fema… Aust… AUS   1.67e-4 1.67e-4 0.995 1.66e-4 0.995  79.2  79.6     4 #>  6  2003 fema… Aust… AUS   8.73e-5 8.73e-5 0.995 8.68e-5 0.995  78.2  78.6     5 #>  7  2003 fema… Aust… AUS   3.89e-5 3.89e-5 0.995 3.87e-5 0.995  77.2  77.6     6 #>  8  2003 fema… Aust… AUS   1.16e-4 1.16e-4 0.995 1.15e-4 0.995  76.2  76.6     7 #>  9  2003 fema… Aust… AUS   1.20e-4 1.20e-4 0.994 1.20e-4 0.994  75.2  75.6     8 #> 10  2003 fema… Aust… AUS   9.04e-5 9.04e-5 0.994 8.99e-5 0.994  74.2  74.6     9 #> # ℹ 91 more rows"},{"path":"https://pkg.robjhyndman.com/vital/reference/model.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate models for vital data — model.vital","title":"Estimate models for vital data — model.vital","text":"Trains specified model definition(s) dataset. function estimate set model definitions (passed via `...`) series within `.data` (identified key structure). result mable (model table), neatly stores estimated models tabular structure. Rows data identify different series within data, model column contains models model definition. cell mable identifies single model.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate models for vital data — model.vital","text":"","code":"# S3 method for vital model(.data, ..., .safely = TRUE)"},{"path":"https://pkg.robjhyndman.com/vital/reference/model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate models for vital data — model.vital","text":".data vital object including age variable. ... Definitions models used. models must share response variable. .safely model encounters error, rather aborting process [NULL model][null_model()] returned instead. allows error occur computing many models, without losing results successful models.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/model.html","id":"parallel","dir":"Reference","previous_headings":"","what":"Parallel","title":"Estimate models for vital data — model.vital","text":"possible estimate models parallel using [future](https://cran.r-project.org/package=future) package. specifying [`future::plan()`] estimating models, computed according plan.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/model.html","id":"progress","dir":"Reference","previous_headings":"","what":"Progress","title":"Estimate models for vital data — model.vital","text":"Progress model estimation can obtained wrapping code `progressr::with_progress()`. customisation progress reported can controlled using `progressr` package.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/model.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimate models for vital data — model.vital","text":"Rob J Hyndman Mitchell O'Hara-Wild","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data directly from HMD and construct a vital object for use in other functions — read_hmd","title":"Read data directly from HMD and construct a vital object for use in other functions — read_hmd","text":"read_hmd reads 1x1 data Human Mortality Database (HMD https://www.mortality.org) constructs vital object suitable use functions. function uses readHMDweb download required data.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data directly from HMD and construct a vital object for use in other functions — read_hmd","text":"","code":"read_hmd(   country,   username,   password,   variables = c(\"Deaths\", \"Exposures\", \"Population\", \"Mx\") )"},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data directly from HMD and construct a vital object for use in other functions — read_hmd","text":"country Directory abbreviation HMD. instance, Australia = \"AUS\". username HMD username (case-sensitive) password HMD password (case-sensitive) variables List variables download HMD.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data directly from HMD and construct a vital object for use in other functions — read_hmd","text":"read_hmd returns vital object following variables: Year Numerical vector containing year observation Age Numerical vector containing age group OpenInterval Logical vector indicating age interval open Sex Character vector taking values \"Female\", \"Male\", \"Total\" Deaths Total deaths Exposure Numerical vector exposure--risk, equal population size 30 June Population Numerical vector containing population size 1 January Mortality Numerical vector mortality rate, equal Deaths/Exposure","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read data directly from HMD and construct a vital object for use in other functions — read_hmd","text":"order read data, users required create account HMD website (https://www.mortality.org), obtain valid username password.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read data directly from HMD and construct a vital object for use in other functions — read_hmd","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read data directly from HMD and construct a vital object for use in other functions — read_hmd","text":"","code":"if (FALSE) { norway <- read_hmd(   country = \"NOR\",   username = \"Nora.Nilsen@mymail.com\",   password = \"FF!5xeEFa6\" ) }"},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data from files downloaded from HMD and construct a vital object for use in other functions — read_hmd_files","title":"Read data from files downloaded from HMD and construct a vital object for use in other functions — read_hmd_files","text":"read_hmd_files reads 1x1 data files downloaded Human Mortality Database (HMD https://www.mortality.org) constructs vital object suitable use functions. function uses readHMD parse files. least one file required. file missing, corresponding variable missing output.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data from files downloaded from HMD and construct a vital object for use in other functions — read_hmd_files","text":"","code":"read_hmd_files(Deaths = NULL, Exposures = NULL, Population = NULL, Mx = NULL)"},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data from files downloaded from HMD and construct a vital object for use in other functions — read_hmd_files","text":"Deaths File containing deaths data Exposures File containing exposures data Population File containing population data Mx File containing mortality data","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data from files downloaded from HMD and construct a vital object for use in other functions — read_hmd_files","text":"read_hmd_files returns vital object following variables: Year Numerical vector containing year observation Age Numerical vector containing age group OpenInterval Logical vector indicating age interval open Sex Character vector taking values \"Female\", \"Male\", \"Total\" Deaths Total deaths Exposure Numerical vector exposure--risk, equal population size 30 June Population Numerical vector containing population size 1 January Mortality Numerical vector mortality rate, equal Deaths/Exposure","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd_files.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read data from files downloaded from HMD and construct a vital object for use in other functions — read_hmd_files","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read data from files downloaded from HMD and construct a vital object for use in other functions — read_hmd_files","text":"","code":"if (FALSE) { read_hmd_files(   Deaths = \"Deaths_1x1.txt\",   Exposures = \"Exposures_1x1.txt\",   Population = \"Population.txt\",   Mx = \"Mx_1x1.txt\") }"},{"path":"https://pkg.robjhyndman.com/vital/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. generics forecast ggplot2 autoplot","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/total_fertility_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute total fertility rate from age-specific fertility rates — total_fertility_rate","title":"Compute total fertility rate from age-specific fertility rates — total_fertility_rate","text":"Total fertility rate expected number babies per woman life-time given fertility rate age woman's life.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/total_fertility_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute total fertility rate from age-specific fertility rates — total_fertility_rate","text":"","code":"total_fertility_rate(.data, fertility)"},{"path":"https://pkg.robjhyndman.com/vital/reference/total_fertility_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute total fertility rate from age-specific fertility rates — total_fertility_rate","text":".data vital object including age variable variable containing fertility rates. fertility Variable `.data` containing fertility rates. omitted, variable name  `fx`, `Fertility` `Rate` used (case sensitive).","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/total_fertility_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute total fertility rate from age-specific fertility rates — total_fertility_rate","text":"vital object total fertility column `tfr`.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/total_fertility_rate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute total fertility rate from age-specific fertility rates — total_fertility_rate","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/total_fertility_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute total fertility rate from age-specific fertility rates — total_fertility_rate","text":"","code":"# Compute Australian total fertility rates over time aus_fertility |>   total_fertility_rate() #> # A vital: 86 x 4 [1Y] #>     Year Fertility Exposure  Births #>    <int>     <dbl>    <dbl>   <dbl> #>  1  1921      3.11  1418909 136874. #>  2  1922      3.10  1450407 138845. #>  3  1923      3.01  1482482 137207. #>  4  1924      2.97  1514008 137369. #>  5  1925      2.95  1547341 138818. #>  6  1926      2.85  1579812 136442. #>  7  1927      2.81  1613370 136994. #>  8  1928      2.77  1645999 137266. #>  9  1929      2.64  1673581 132331. #> 10  1930      2.58  1696345 130890. #> # ℹ 76 more rows"},{"path":"https://pkg.robjhyndman.com/vital/reference/vital-package.html","id":null,"dir":"Reference","previous_headings":"","what":"vital: Tidy Analysis Tools for Mortality, Fertility, Migration and Population Data — vital-package","title":"vital: Tidy Analysis Tools for Mortality, Fertility, Migration and Population Data — vital-package","text":"Functions analysing vital statistics based tools consistent tidyverse. Tools provided data visualization, lifetable calculations, computing net migration numbers, Lee-Carter modelling; functional data modelling stochastic population forecasting.","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/vital/reference/vital-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"vital: Tidy Analysis Tools for Mortality, Fertility, Migration and Population Data — vital-package","text":"Maintainer: Rob Hyndman Rob.Hyndman@monash.edu (ORCID) [copyright holder] Authors: Mitchell O'Hara-Wild (ORCID)","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/vital.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a vital object — vital","title":"Create a vital object — vital","text":"vital object type tsibble contains vital statistics births, deaths, population counts, mortality fertility rates. tsibble special class allows special methods used. object attribute stores variables names needed functions, including age, sex, births, deaths population.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/vital.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a vital object — vital","text":"","code":"vital(   ...,   key = NULL,   index,   .age = NULL,   .sex = NULL,   .deaths = NULL,   .births = NULL,   .population = NULL,   regular = TRUE,   .drop = TRUE )"},{"path":"https://pkg.robjhyndman.com/vital/reference/vital.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a vital object — vital","text":"... set name-value pairs key Variable(s) uniquely determine time indices. NULL empty key, c() multiple variables. works tidy selector (e.g. starts_with()). index variable specify time index variable. .age Character string name age variable .sex Character string name sex variable .deaths Character string name deaths variable .births Character string name births variable .population Character string name population variable regular Regular time interval (TRUE) irregular (FALSE). interval determined greatest common divisor index column, TRUE. .drop TRUE, empty key groups dropped.","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/vital/reference/vital.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a vital object — vital","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/vital.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a vital object — vital","text":"","code":"# create a vital with only age as a key vital(   year = rep(2010:2015, 100),   age = rep(0:99, each = 6),   mx = runif(600, 0, 1),   index = year,   key = age,   .age = \"age\" ) #> # A vital: 600 x 3 [1Y] #> # Key:     age [100] #>     year   age    mx #>    <int> <int> <dbl> #>  1  2010     0 0.252 #>  2  2011     0 0.243 #>  3  2012     0 0.888 #>  4  2013     0 0.479 #>  5  2014     0 0.183 #>  6  2015     0 0.623 #>  7  2010     1 0.511 #>  8  2011     1 0.472 #>  9  2012     1 0.666 #> 10  2013     1 0.128 #> # ℹ 590 more rows"},{"path":"https://pkg.robjhyndman.com/vital/reference/vital_conflicts.html","id":null,"dir":"Reference","previous_headings":"","what":"Conflicts between vital packages and other packages — vital_conflicts","title":"Conflicts between vital packages and other packages — vital_conflicts","text":"function lists conflicts packages vital collection packages loaded.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/vital_conflicts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conflicts between vital packages and other packages — vital_conflicts","text":"","code":"vital_conflicts()"},{"path":"https://pkg.robjhyndman.com/vital/reference/vital_conflicts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conflicts between vital packages and other packages — vital_conflicts","text":"list object class vital_conflicts.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/vital_conflicts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conflicts between vital packages and other packages — vital_conflicts","text":"conflicts deliberately ignored: intersect, union, setequal, setdiff dplyr; intersect, union, setdiff, .difftime lubridate. functions make base equivalents generic, negatively affect existing code.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/vital_conflicts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conflicts between vital packages and other packages — vital_conflicts","text":"","code":"vital_conflicts() #> ── Conflicts ──────────────────────────────────────────────── vital_conflicts ── #> ✖ tsibble::intersect() masks base::intersect() #> ✖ tsibble::setdiff()   masks base::setdiff() #> ✖ tsibble::union()     masks base::union()"},{"path":"https://pkg.robjhyndman.com/vital/reference/vital_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"List all packages loaded by vital — vital_packages","title":"List all packages loaded by vital — vital_packages","text":"List packages loaded vital","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/vital_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all packages loaded by vital — vital_packages","text":"","code":"vital_packages(include_self = FALSE)"},{"path":"https://pkg.robjhyndman.com/vital/reference/vital_packages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all packages loaded by vital — vital_packages","text":"include_self Include vital list?","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/vital_packages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all packages loaded by vital — vital_packages","text":"character vector package names.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/vital_packages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List all packages loaded by vital — vital_packages","text":"","code":"vital_packages() #>  [1] \"cli\"            \"crayon\"         \"distributional\" \"dplyr\"          #>  [5] \"fable\"          \"fabletools\"     \"future.apply\"   \"ggplot2\"        #>  [9] \"HMDHFDplus\"     \"patchwork\"      \"progressr\"      \"purrr\"          #> [13] \"rlang\"          \"rstudioapi\"     \"tibble\"         \"tidyr\"          #> [17] \"tidyselect\"     \"tsibble\"        \"vctrs\""}]
