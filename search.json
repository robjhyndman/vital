[{"path":"https://pkg.robjhyndman.com/vital/articles/intro.html","id":"vital-objects","dir":"Articles","previous_headings":"","what":"vital objects","title":"Introduction to the vital package","text":"basic data object vital, time-indexed tibble contains vital statistics births, deaths, population counts, mortality fertility rates. use Norwegian data following examples. First, let’s remove “Total” Sex category collapse upper ages final age group 100+. example contains data 1900 2023. 101 age groups 2 Sex categories. vital must time “index” variable, optionally categorical variables known “key” variables. row must unique combination index key variables. columns “vital” variables, “Age” “Sex”. can use functions see variables index, key vital:","code":"nor <- norway_mortality |>   filter(Sex != \"Total\") |>   collapse_ages(max_age = 100) nor #> # A vital: 25,048 x 7 [1Y] #> # Key:     Age x Sex [101 x 2] #>     Year   Age OpenInterval Sex    Population Deaths Mortality #>    <int> <int> <lgl>        <chr>       <dbl>  <dbl>     <dbl> #>  1  1900     0 FALSE        Female      30070 2376.    0.0778  #>  2  1900     1 FALSE        Female      28960  842     0.0290  #>  3  1900     2 FALSE        Female      28043  348     0.0123  #>  4  1900     3 FALSE        Female      27019  216.    0.00786 #>  5  1900     4 FALSE        Female      26854  168.    0.00624 #>  6  1900     5 FALSE        Female      25569  140.    0.00538 #>  7  1900     6 FALSE        Female      25534  108.    0.00422 #>  8  1900     7 FALSE        Female      24314   93.5   0.00376 #>  9  1900     8 FALSE        Female      24979   93.5   0.00380 #> 10  1900     9 FALSE        Female      24428   90     0.00365 #> # ℹ 25,038 more rows index_var(nor) #> [1] \"Year\" key_vars(nor) #> [1] \"Age\" \"Sex\" vital_vars(nor) #>          age          sex       deaths   population  #>        \"Age\"        \"Sex\"     \"Deaths\" \"Population\""},{"path":"https://pkg.robjhyndman.com/vital/articles/intro.html","id":"plots","dir":"Articles","previous_headings":"","what":"Plots","title":"Introduction to the vital package","text":"autoplot() functions plotting vital objects. produce rainbow plots (Hyndman Shang 2010) line represents data one year, variable plotted age.  can use standard ggplot functions modify plot desired. example, population pyramids years.","code":"nor |>   autoplot(Mortality) +   scale_y_log10() nor |>   mutate(Population = if_else(Sex == \"Female\", -Population, Population)) |>   autoplot(Population) +   coord_flip() +   facet_grid(. ~ Sex, scales = \"free_x\")"},{"path":"https://pkg.robjhyndman.com/vital/articles/intro.html","id":"life-tables-and-life-expectancy","dir":"Articles","previous_headings":"","what":"Life tables and life expectancy","title":"Introduction to the vital package","text":"Life tables (Chiang 1984) can produced using life_table() function. produce life tables unique combination index key variables age. Life expectancy (exe_x x=0x=0 default) computed using life_expectancy():","code":"# Life tables for males and females in Norway in 2000 nor |>   filter(Year == 2000) |>   life_table() #> # A vital: 202 x 13 [?] #> # Key:     Age x Sex [101 x 2] #>     Year   Age Sex        mx      qx    lx      dx    Lx    Tx    ex    rx    nx #>    <int> <int> <chr>   <dbl>   <dbl> <dbl>   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1  2000     0 Fema… 3.28e-3 3.27e-3 1     3.27e-3 0.997  81.4  81.4 0.997     1 #>  2  2000     1 Fema… 2.77e-4 2.77e-4 0.997 2.76e-4 0.997  80.4  80.6 1.000     1 #>  3  2000     2 Fema… 3.09e-4 3.09e-4 0.996 3.08e-4 0.996  79.4  79.7 1.000     1 #>  4  2000     3 Fema… 1.33e-4 1.33e-4 0.996 1.32e-4 0.996  78.4  78.7 1.000     1 #>  5  2000     4 Fema… 1.68e-4 1.68e-4 0.996 1.67e-4 0.996  77.4  77.7 1.000     1 #>  6  2000     5 Fema… 3.30e-5 3.30e-5 0.996 3.29e-5 0.996  76.4  76.7 1.000     1 #>  7  2000     6 Fema… 1.35e-4 1.35e-4 0.996 1.34e-4 0.996  75.4  75.7 1.000     1 #>  8  2000     7 Fema… 1.68e-4 1.68e-4 0.996 1.67e-4 0.996  74.4  74.7 1.000     1 #>  9  2000     8 Fema… 6.70e-5 6.70e-5 0.996 6.67e-5 0.995  73.4  73.7 1.000     1 #> 10  2000     9 Fema… 1.97e-4 1.97e-4 0.995 1.96e-4 0.995  72.4  72.7 1.000     1 #> # ℹ 192 more rows #> # ℹ 1 more variable: ax <dbl> # Life expectancy for males and females in Norway nor |>   life_expectancy() |>   ggplot(aes(x = Year, y = ex, color = Sex)) +   geom_line()"},{"path":"https://pkg.robjhyndman.com/vital/articles/intro.html","id":"smoothing","dir":"Articles","previous_headings":"","what":"Smoothing","title":"Introduction to the vital package","text":"Several smoothing functions provided: smooth_spline(), smooth_mortality(), smooth_fertility(), smooth_loess(), smoothing across age variable year. methods used smooth_mortality() smooth_fertility() described Hyndman Ullah (2007).","code":"# Smoothed data nor |>   filter(Year == 1967) |>   smooth_mortality(Mortality) |>   autoplot(Mortality) +   geom_line(aes(y = .smooth), col = \"#0072B2\") +   ylab(\"Mortality rate\") +   scale_y_log10()"},{"path":"https://pkg.robjhyndman.com/vital/articles/intro.html","id":"lee-carter-models","dir":"Articles","previous_headings":"","what":"Lee-Carter models","title":"Introduction to the vital package","text":"Lee-Carter models (Lee Carter 1992) estimated using LC() function must called within model() function: Models fitted combinations key variables excluding age. see details specific model, use report() function. results can plotted.  components can extracted. Forecasts obtained using forecast() function forecasts returned distribution column (transformed normal log transformation used model). .mean column gives point forecasts equal mean distribution column.","code":"# Lee-Carter model lc <- nor |>   model(lee_carter = LC(log(Mortality))) lc #> # A mable: 2 x 2 #> # Key:     Sex [2] #>   Sex    lee_carter #>   <chr>     <model> #> 1 Female       <LC> #> 2 Male         <LC> lc |>   filter(Sex == \"Female\") |>   report() #> Series: Mortality  #> Model: LC  #> Transformation: log(Mortality)  #>  #> Options: #>   Adjust method: dt #>   Jump choice: fit #>  #> Age functions #> # A tibble: 101 × 3 #>     Age    ax     bx #>   <int> <dbl>  <dbl> #> 1     0 -4.33 0.0155 #> 2     1 -6.16 0.0223 #> 3     2 -6.77 0.0193 #> 4     3 -7.14 0.0187 #> 5     4 -7.18 0.0165 #> # ℹ 96 more rows #>  #> Time coefficients #> # A tsibble: 124 x 2 [1Y] #>    Year    kt #>   <int> <dbl> #> 1  1900  115. #> 2  1901  109. #> 3  1902  103. #> 4  1903  109. #> 5  1904  106. #> # ℹ 119 more rows #>  #> Time series model: RW w/ drift  #>  #> Variance explained: 66.33% autoplot(lc) age_components(lc) #> # A tibble: 202 × 4 #>    Sex      Age    ax     bx #>    <chr>  <int> <dbl>  <dbl> #>  1 Female     0 -4.33 0.0155 #>  2 Female     1 -6.16 0.0223 #>  3 Female     2 -6.77 0.0193 #>  4 Female     3 -7.14 0.0187 #>  5 Female     4 -7.18 0.0165 #>  6 Female     5 -7.41 0.0174 #>  7 Female     6 -7.45 0.0165 #>  8 Female     7 -7.48 0.0155 #>  9 Female     8 -7.37 0.0125 #> 10 Female     9 -7.39 0.0124 #> # ℹ 192 more rows time_components(lc) #> # A tsibble: 248 x 3 [1Y] #> # Key:       Sex [2] #>    Sex     Year    kt #>    <chr>  <int> <dbl> #>  1 Female  1900 115.  #>  2 Female  1901 109.  #>  3 Female  1902 103.  #>  4 Female  1903 109.  #>  5 Female  1904 106.  #>  6 Female  1905 110.  #>  7 Female  1906 101.  #>  8 Female  1907 106.  #>  9 Female  1908 105.  #> 10 Female  1909  99.6 #> # ℹ 238 more rows # Forecasts from Lee-Carter model lc |>   forecast(h = 20) #> # A vital fable: 4,040 x 6 [1Y] #> # Key:           Age x (Sex, .model) [101 x 2] #>    Sex    .model      Year   Age          Mortality    .mean #>    <chr>  <chr>      <dbl> <int>             <dist>    <dbl> #>  1 Female lee_carter  2024     0 t(N(-6.8, 0.0088)) 0.00110  #>  2 Female lee_carter  2025     0  t(N(-6.9, 0.018)) 0.00106  #>  3 Female lee_carter  2026     0  t(N(-6.9, 0.027)) 0.00103  #>  4 Female lee_carter  2027     0  t(N(-6.9, 0.036)) 0.00100  #>  5 Female lee_carter  2028     0    t(N(-7, 0.045)) 0.000972 #>  6 Female lee_carter  2029     0    t(N(-7, 0.055)) 0.000944 #>  7 Female lee_carter  2030     0    t(N(-7, 0.064)) 0.000916 #>  8 Female lee_carter  2031     0  t(N(-7.1, 0.074)) 0.000889 #>  9 Female lee_carter  2032     0  t(N(-7.1, 0.084)) 0.000863 #> 10 Female lee_carter  2033     0  t(N(-7.1, 0.094)) 0.000838 #> # ℹ 4,030 more rows"},{"path":"https://pkg.robjhyndman.com/vital/articles/intro.html","id":"functional-data-models","dir":"Articles","previous_headings":"","what":"Functional data models","title":"Introduction to the vital package","text":"Functional data models (Hyndman Ullah 2007) can estimated similar way Lee-Carter models, additional smoothing step, modelling LC replaced FDM.  Functional data models multiple principal components, rather single factor used Lee-Carter models.  default, six factors estimated using FDM(). chosen plot first three. components can extracted.","code":"# FDM model fdm <- nor |>   smooth_mortality(Mortality) |>   model(hu = FDM(log(.smooth))) fc_fdm <- fdm |>   forecast(h = 20) autoplot(fc_fdm) +   scale_y_log10() fdm |>   autoplot(show_order = 3) age_components(fdm) #> # A tibble: 202 × 9 #>    Sex      Age  mean  phi1     phi2     phi3    phi4     phi5    phi6 #>    <chr>  <dbl> <dbl> <dbl>    <dbl>    <dbl>   <dbl>    <dbl>   <dbl> #>  1 Female     0 -4.34 0.133  0.257    0.0933  -0.0790 -0.0626   0.0496 #>  2 Female     1 -6.13 0.185  0.232   -0.00843 -0.243  -0.145    0.392  #>  3 Female     2 -6.82 0.167  0.192   -0.0932  -0.239   0.00395  0.0676 #>  4 Female     3 -7.15 0.159  0.187   -0.158   -0.252   0.0838  -0.0257 #>  5 Female     4 -7.36 0.156  0.171   -0.209   -0.256   0.110   -0.119  #>  6 Female     5 -7.50 0.153  0.145   -0.232   -0.240   0.120   -0.229  #>  7 Female     6 -7.60 0.150  0.113   -0.241   -0.167   0.0931  -0.246  #>  8 Female     7 -7.69 0.148  0.0761  -0.251   -0.0526  0.0317  -0.158  #>  9 Female     8 -7.75 0.146  0.0372  -0.262    0.0586 -0.0442  -0.0344 #> 10 Female     9 -7.78 0.144 -0.00131 -0.266    0.142  -0.120    0.0639 #> # ℹ 192 more rows time_components(fdm) #> # A tsibble: 248 x 9 [1Y] #> # Key:       Sex [2] #>    Sex     Year  mean beta1   beta2  beta3    beta4   beta5  beta6 #>    <chr>  <int> <dbl> <dbl>   <dbl>  <dbl>    <dbl>   <dbl>  <dbl> #>  1 Female  1900     1  13.7  0.0205 -0.564  0.109   -0.0526 -0.313 #>  2 Female  1901     1  13.0 -0.195  -0.790  0.0667  -0.0868 -0.300 #>  3 Female  1902     1  12.7 -0.488  -0.541 -0.0327  -0.109  -0.497 #>  4 Female  1903     1  13.4 -0.426  -0.747 -0.00132 -0.0597 -0.160 #>  5 Female  1904     1  13.1 -0.483  -0.546  0.188   -0.198  -0.403 #>  6 Female  1905     1  13.5 -0.395  -0.640 -0.0218   0.0109 -0.166 #>  7 Female  1906     1  13.0 -0.881  -0.822  0.0824  -0.105  -0.235 #>  8 Female  1907     1  13.1 -0.500  -0.335  0.279   -0.0908 -0.237 #>  9 Female  1908     1  13.0 -0.417  -0.636  0.114   -0.153  -0.207 #> 10 Female  1909     1  12.3 -0.337  -0.753  0.0418  -0.0990 -0.368 #> # ℹ 238 more rows"},{"path":"https://pkg.robjhyndman.com/vital/articles/intro.html","id":"coherent-functional-data-models","dir":"Articles","previous_headings":"","what":"Coherent functional data models","title":"Introduction to the vital package","text":"coherent functional data model (Hyndman, Booth, Yasmeen 2013), obtained first computing sex-products sex-ratios smoothed mortality data. functional data model fitted smoothed data, forecasts obtained, product/ratio transformation reversed. following code shows steps. , make_pr() makes product-ratios, undo_pr() undoes . argument coherent = TRUE FDM() ensures ARIMA models fitted coefficients stationary applied sex-ratios.","code":"fdm_coherent <- nor |>   smooth_mortality(Mortality) |>   make_pr(.smooth) |>   model(hby = FDM(log(.smooth), coherent = TRUE)) fc_coherent <- fdm_coherent |>   forecast(h = 20) |>   undo_pr(.smooth) fc_coherent #> # A vital fable: 4,040 x 6 [1Y] #> # Key:           Age x (Sex, .model) [101 x 2] #>     Year   Age Sex    .model      .smooth     .mean #>    <dbl> <dbl> <chr>  <chr>        <dist>     <dbl> #>  1  2024     0 Female hby    sample[2000] 0.00202   #>  2  2024     1 Female hby    sample[2000] 0.000274  #>  3  2024     2 Female hby    sample[2000] 0.000164  #>  4  2024     3 Female hby    sample[2000] 0.000128  #>  5  2024     4 Female hby    sample[2000] 0.000112  #>  6  2024     5 Female hby    sample[2000] 0.000103  #>  7  2024     6 Female hby    sample[2000] 0.0000980 #>  8  2024     7 Female hby    sample[2000] 0.0000956 #>  9  2024     8 Female hby    sample[2000] 0.0000973 #> 10  2024     9 Female hby    sample[2000] 0.000101  #> # ℹ 4,030 more rows"},{"path":[]},{"path":"https://pkg.robjhyndman.com/vital/articles/population_forecasting.html","id":"migration-model","dir":"Articles","previous_headings":"","what":"Migration model","title":"Stochastic population forecasting","text":"use coherent functional data model (Hyndman, Booth, Yasmeen 2013) log mortality rates. ensure coherence, compute geometric mean sex-specific mortality rates corresponding ratios, using make_pr() function. data smoothed first, 6 components used default FDM, although first two plotted .","code":"fit_mortality <- norway_mortality |>   filter(Sex != \"Total\") |>   smooth_mortality(Mortality) |>   make_pr(.smooth) |>   model(fdm = FDM(log(.smooth), coherent = TRUE)) autoplot(fit_mortality, 2)"},{"path":"https://pkg.robjhyndman.com/vital/articles/population_forecasting.html","id":"fertility-model","dir":"Articles","previous_headings":"","what":"Fertility model","title":"Stochastic population forecasting","text":"fertility, use functional mean model square root transformation, applied last 13 years data. plotted model shows fitted values square root scale.","code":"fit_fertility <- norway_fertility |>   filter(Year > 2010) |>   smooth_fertility(Fertility) |>   model(fmean = FMEAN(sqrt(.smooth))) autoplot(fit_fertility)"},{"path":"https://pkg.robjhyndman.com/vital/articles/population_forecasting.html","id":"net-migration-model","dir":"Articles","previous_headings":"","what":"Net migration model","title":"Stochastic population forecasting","text":"net migration, use coherent functional data model. net migration values can positive negative, can’t take products ratios. Instead, need compute means corresponding differences using mean_sd() function.","code":"netmig <- net_migration(   norway_mortality |> filter(Sex != \"Total\"),   norway_births ) |>   make_sd(NetMigration) fit_migration <- netmig |>   model(fdm = FDM(NetMigration, coherent = TRUE)) autoplot(fit_migration)"},{"path":"https://pkg.robjhyndman.com/vital/articles/population_forecasting.html","id":"population-simulation","dir":"Articles","previous_headings":"","what":"Population simulation","title":"Stochastic population forecasting","text":"generate_population() function takes starting population, three component models, simulates future age-sex-specific population values. produce ten replicates future population. first replicate plotted , along last years historical data.  simulated populations can used compute quantities can derived populations numbers sex age. example, mean age population next 10 years can also plot population pyramids prediction intervals. example, population pyramid 2032 95% prediction interval.","code":"pop <- norway_mortality |>   filter(Sex != \"Total\", Year == max(Year)) future <- generate_population(   starting_population = pop,   mortality_model = fit_mortality,   fertility_model = fit_fertility,   migration_model = fit_migration,   h = 10,   n_reps = 500 ) future |>   filter(.rep == \"100\") |>   ggplot(aes(x = Age, y = Population, group = Year, color = Year)) +   geom_line(     data = norway_mortality |> filter(Year > 2010, Sex != \"Total\"),     color = \"grey\",     mapping = aes(group = Year)   )  +   geom_line() +   scale_color_gradientn(colours = rainbow(10)[1:9]) +   facet_grid(. ~ Sex) future |>   group_by(Sex, .rep) |>   summarise(mean_age = sum(Population * (Age + 0.5)) / sum(Population)) |>   group_by(Sex) |>   summarise(mean_age = mean(mean_age)) #> # A vital: 20 x 3 [1Y] #> # Key:     Sex [2] #>    Sex     Year mean_age #>    <chr>  <dbl>    <dbl> #>  1 Female  2024     42.0 #>  2 Female  2025     42.3 #>  3 Female  2026     42.5 #>  4 Female  2027     42.7 #>  5 Female  2028     42.9 #>  6 Female  2029     43.1 #>  7 Female  2030     43.4 #>  8 Female  2031     43.6 #>  9 Female  2032     43.8 #> 10 Female  2033     44.0 #> 11 Male    2024     40.7 #> 12 Male    2025     40.9 #> 13 Male    2026     41.2 #> 14 Male    2027     41.4 #> 15 Male    2028     41.6 #> 16 Male    2029     41.9 #> 17 Male    2030     42.1 #> 18 Male    2031     42.3 #> 19 Male    2032     42.5 #> 20 Male    2033     42.7 pyramid_2032 <- future |>   filter(Year == 2032) |>   mutate(Population = if_else(Sex == \"Female\", -Population, Population)) |>   group_by(Age, Sex) |>   summarise(     lo = quantile(Population, 0.025),     med = quantile(Population, 0.5),     hi = quantile(Population, 0.975)   ) pyramid_2032 |>   ggplot(aes(x = Age)) +   geom_ribbon(aes(ymin = lo, ymax = hi, colour = NULL),     fill = \"#c14b14\", alpha = 0.2   ) +   geom_line(aes(y = med), color = \"#c14b14\") +   facet_grid(. ~ Sex, scales = \"free_x\") +   labs(y = \"Population\") +   coord_flip() +   guides(fill = \"none\", alpha = \"none\")"},{"path":[]},{"path":"https://pkg.robjhyndman.com/vital/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rob Hyndman. Author, maintainer, copyright holder. Sixian Tang. Author. Miles McBain. Contributor. Mitchell O'Hara-Wild. Contributor.","code":""},{"path":"https://pkg.robjhyndman.com/vital/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hyndman R, Tang S (2025). vital: Tidy Analysis Tools Mortality, Fertility, Migration Population Data. R package version 2.0.0, https://pkg.robjhyndman.com/vital/.","code":"@Manual{,   title = {vital: Tidy Analysis Tools for Mortality, Fertility, Migration and Population Data},   author = {Rob Hyndman and Sixian Tang},   year = {2025},   note = {R package version 2.0.0},   url = {https://pkg.robjhyndman.com/vital/}, }"},{"path":"https://pkg.robjhyndman.com/vital/index.html","id":"vital-","dir":"","previous_headings":"","what":"Tidy Analysis Tools for Mortality, Fertility, Migration and Population Data","title":"Tidy Analysis Tools for Mortality, Fertility, Migration and Population Data","text":"goal vital allow analysis demographic data using tidy tools.","code":""},{"path":"https://pkg.robjhyndman.com/vital/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tidy Analysis Tools for Mortality, Fertility, Migration and Population Data","text":"can install stable version CRAN: can install development version Github:","code":"pak::pak(\"vital\") pak::pak(\"robjhyndman/vital\")"},{"path":"https://pkg.robjhyndman.com/vital/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Tidy Analysis Tools for Mortality, Fertility, Migration and Population Data","text":"First load necessary packages.","code":"library(vital) library(tsibble) library(dplyr) library(ggplot2)"},{"path":"https://pkg.robjhyndman.com/vital/index.html","id":"vital-objects","dir":"","previous_headings":"Examples","what":"vital objects","title":"Tidy Analysis Tools for Mortality, Fertility, Migration and Population Data","text":"basic data object vital, time-indexed tibble contains vital statistics births, deaths, population counts, mortality fertility rates. example vital object containing mortality data Norway. can use functions see variables index, key vital:","code":"norway_mortality <- norway_mortality |>   collapse_ages(max_age = 100) index_var(norway_mortality) #> [1] \"Year\" key_vars(norway_mortality) #> [1] \"Age\" \"Sex\" vital_vars(norway_mortality) #>          age          sex       deaths   population  #>        \"Age\"        \"Sex\"     \"Deaths\" \"Population\""},{"path":"https://pkg.robjhyndman.com/vital/index.html","id":"plots","dir":"","previous_headings":"Examples","what":"Plots","title":"Tidy Analysis Tools for Mortality, Fertility, Migration and Population Data","text":"","code":"norway_mortality |>   filter(Sex != \"Total\", Year < 1980, Age < 90) |>   autoplot(Mortality) + scale_y_log10()"},{"path":"https://pkg.robjhyndman.com/vital/index.html","id":"life-tables-and-life-expectancy","dir":"","previous_headings":"Examples","what":"Life tables and life expectancy","title":"Tidy Analysis Tools for Mortality, Fertility, Migration and Population Data","text":"","code":"# Life table for Norwegian males in 2000 norway_mortality |>   filter(Sex == \"Male\", Year == 2000) |>   life_table() #> # A vital: 101 x 13 [?] #> # Key:     Age x Sex [101 x 1] #>     Year   Age Sex        mx      qx    lx      dx    Lx    Tx    ex    rx    nx #>    <int> <int> <chr>   <dbl>   <dbl> <dbl>   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1  2000     0 Male  4.26e-3 4.24e-3 1     4.24e-3 0.996  76.0  76.0 0.996     1 #>  2  2000     1 Male  5.93e-4 5.93e-4 0.996 5.90e-4 0.995  75.0  75.3 0.999     1 #>  3  2000     2 Male  2.29e-4 2.29e-4 0.995 2.28e-4 0.995  74.0  74.3 1.000     1 #>  4  2000     3 Male  1.57e-4 1.57e-4 0.995 1.56e-4 0.995  73.0  73.3 1.000     1 #>  5  2000     4 Male  2.21e-4 2.21e-4 0.995 2.20e-4 0.995  72.0  72.3 1.000     1 #>  6  2000     5 Male  1.89e-4 1.89e-4 0.995 1.88e-4 0.994  71.0  71.4 1.000     1 #>  7  2000     6 Male  1.28e-4 1.28e-4 0.994 1.27e-4 0.994  70.0  70.4 1.000     1 #>  8  2000     7 Male  1.27e-4 1.27e-4 0.994 1.26e-4 0.994  69.0  69.4 1.000     1 #>  9  2000     8 Male  9.40e-5 9.40e-5 0.994 9.34e-5 0.994  68.0  68.4 1.000     1 #> 10  2000     9 Male  2.17e-4 2.17e-4 0.994 2.16e-4 0.994  67.0  67.4 1.000     1 #> # ℹ 91 more rows #> # ℹ 1 more variable: ax <dbl> # Life expectancy norway_mortality |>   filter(Sex != \"Total\") |>   life_expectancy() |>   ggplot(aes(x = Year, y = ex, color = Sex)) +   geom_line()"},{"path":"https://pkg.robjhyndman.com/vital/index.html","id":"smoothing","dir":"","previous_headings":"Examples","what":"Smoothing","title":"Tidy Analysis Tools for Mortality, Fertility, Migration and Population Data","text":"Several smoothing functions provided: smooth_spline(), smooth_mortality(), smooth_fertility(), smooth_loess(), smoothing across age variable year.","code":"# Smoothed data norway_mortality |>   filter(Sex != \"Total\", Year == 1967) |>   smooth_mortality(Mortality) |>   autoplot(Mortality) +   geom_line(aes(y = .smooth), col = \"#0072B2\") +   ylab(\"Mortality rate\") +   scale_y_log10()"},{"path":"https://pkg.robjhyndman.com/vital/index.html","id":"mortality-models","dir":"","previous_headings":"Examples","what":"Mortality models","title":"Tidy Analysis Tools for Mortality, Fertility, Migration and Population Data","text":"Several mortality models available including variations Lee-Carter models (Lee & Carter, JASA, 1992), functional data models (Hyndman & Ullah, CSDA, 2007). Models fitted combinations key variables excluding age.  forecasts returned distribution column (transformed normal log transformation used model). .mean column gives point forecasts equal mean distribution column.","code":"fit <- norway_mortality |>   filter(Sex != \"Total\") |>   model(     lee_carter = LC(log(Mortality)),     fdm = FDM(log(Mortality))   ) fit #> # A mable: 2 x 3 #> # Key:     Sex [2] #>   Sex    lee_carter     fdm #>   <chr>     <model> <model> #> 1 Female       <LC>   <FDM> #> 2 Male         <LC>   <FDM> fit |>   select(lee_carter) |>   filter(Sex == \"Female\") |>   report() #> Series: Mortality  #> Model: LC  #> Transformation: log(Mortality)  #>  #> Options: #>   Adjust method: dt #>   Jump choice: fit #>  #> Age functions #> # A tibble: 101 × 3 #>     Age    ax     bx #>   <int> <dbl>  <dbl> #> 1     0 -4.33 0.0155 #> 2     1 -6.16 0.0223 #> 3     2 -6.77 0.0193 #> 4     3 -7.14 0.0187 #> 5     4 -7.18 0.0165 #> # ℹ 96 more rows #>  #> Time coefficients #> # A tsibble: 124 x 2 [1Y] #>    Year    kt #>   <int> <dbl> #> 1  1900  115. #> 2  1901  109. #> 3  1902  103. #> 4  1903  109. #> 5  1904  106. #> # ℹ 119 more rows #>  #> Time series model: RW w/ drift  #>  #> Variance explained: 66.33% fit |>   select(lee_carter) |>   autoplot() fit |>   select(lee_carter) |>   age_components() #> # A tibble: 202 × 4 #>    Sex      Age    ax     bx #>    <chr>  <int> <dbl>  <dbl> #>  1 Female     0 -4.33 0.0155 #>  2 Female     1 -6.16 0.0223 #>  3 Female     2 -6.77 0.0193 #>  4 Female     3 -7.14 0.0187 #>  5 Female     4 -7.18 0.0165 #>  6 Female     5 -7.41 0.0174 #>  7 Female     6 -7.45 0.0165 #>  8 Female     7 -7.48 0.0155 #>  9 Female     8 -7.37 0.0125 #> 10 Female     9 -7.39 0.0124 #> # ℹ 192 more rows fit |>   select(lee_carter) |>   time_components() #> # A tsibble: 248 x 3 [1Y] #> # Key:       Sex [2] #>    Sex     Year    kt #>    <chr>  <int> <dbl> #>  1 Female  1900 115.  #>  2 Female  1901 109.  #>  3 Female  1902 103.  #>  4 Female  1903 109.  #>  5 Female  1904 106.  #>  6 Female  1905 110.  #>  7 Female  1906 101.  #>  8 Female  1907 106.  #>  9 Female  1908 105.  #> 10 Female  1909  99.6 #> # ℹ 238 more rows fit |> forecast(h = 20) #> # A vital fable: 8,080 x 6 [1Y] #> # Key:           Age x (Sex, .model) [101 x 4] #>    Sex    .model      Year   Age          Mortality    .mean #>    <chr>  <chr>      <dbl> <int>             <dist>    <dbl> #>  1 Female lee_carter  2024     0 t(N(-6.8, 0.0088)) 0.00110  #>  2 Female lee_carter  2025     0  t(N(-6.9, 0.018)) 0.00106  #>  3 Female lee_carter  2026     0  t(N(-6.9, 0.027)) 0.00103  #>  4 Female lee_carter  2027     0  t(N(-6.9, 0.036)) 0.00100  #>  5 Female lee_carter  2028     0    t(N(-7, 0.045)) 0.000972 #>  6 Female lee_carter  2029     0    t(N(-7, 0.055)) 0.000944 #>  7 Female lee_carter  2030     0    t(N(-7, 0.064)) 0.000916 #>  8 Female lee_carter  2031     0  t(N(-7.1, 0.074)) 0.000889 #>  9 Female lee_carter  2032     0  t(N(-7.1, 0.084)) 0.000863 #> 10 Female lee_carter  2033     0  t(N(-7.1, 0.094)) 0.000838 #> # ℹ 8,070 more rows"},{"path":"https://pkg.robjhyndman.com/vital/reference/FDM.html","id":null,"dir":"Reference","previous_headings":"","what":"Functional data model — FDM","title":"Functional data model — FDM","text":"Functional data model mortality fertility rates function age. FDM() returns functional data model applied formula's response variable function age.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FDM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functional data model — FDM","text":"","code":"FDM(formula, order = 6, ts_model_fn = fable::ARIMA, coherent = FALSE, ...)"},{"path":"https://pkg.robjhyndman.com/vital/reference/FDM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functional data model — FDM","text":"formula Model specification. order Number principal components fit. ts_model_fn Univariate time series modelling function coefficients. model works fable package ok. Default fable::ARIMA(). coherent TRUE, fitted models stationary, case key variable taking value geometric_mean mean. designed work vitals produced using make_pr() make_sd. Default FALSE. works ts_model_fn ARIMA(). ... used.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FDM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functional data model — FDM","text":"model specification.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FDM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Functional data model — FDM","text":"Hyndman, R. J., Ullah, S. (2007) Robust forecasting mortality fertility rates: functional data approach. Computational Statistics & Data Analysis, 5, 4942-4956. https://robjhyndman.com/publications/funcfor/ Hyndman, R. J., Booth, H., & Yasmeen, F. (2013). Coherent mortality forecasting: product-ratio method functional time series models. Demography, 50(1), 261-283. https://robjhyndman.com/publications/coherentfdm/","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FDM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Functional data model — FDM","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FDM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functional data model — FDM","text":"","code":"hu <- norway_mortality |>   dplyr::filter(Sex == \"Female\", Year > 2010) |>   smooth_mortality(Mortality) |>   model(hyndman_ullah = FDM(log(.smooth))) report(hu) #> Series: .smooth  #> Model: FDM  #> Transformation: log(.smooth)  #>  #> Basis functions #> # A tibble: 111 × 8 #>     Age  mean    phi1    phi2  phi3     phi4     phi5    phi6 #>   <dbl> <dbl>   <dbl>   <dbl> <dbl>    <dbl>    <dbl>   <dbl> #> 1     0 -6.27 -0.0470  0.153  0.107  0.220    0.00196 -0.299  #> 2     1 -8.51  0.167   0.107  0.295  0.00735 -0.410   -0.269  #> 3     2 -9.00  0.170   0.0341 0.295 -0.00474 -0.314   -0.195  #> 4     3 -9.22  0.155  -0.0284 0.298 -0.0733  -0.121   -0.0204 #> 5     4 -9.33  0.119  -0.0878 0.298 -0.125    0.0290   0.103  #> # ℹ 106 more rows #>  #> Coefficients #> # A tsibble: 13 x 8 [1Y] #>    Year  mean  beta1 beta2  beta3  beta4   beta5   beta6 #>   <int> <dbl>  <dbl> <dbl>  <dbl>  <dbl>   <dbl>   <dbl> #> 1  2011     1  2.06  0.297 -0.562 0.0844  0.164   0.119  #> 2  2012     1  0.356 0.135  0.943 0.543   0.314  -0.134  #> 3  2013     1  0.126 0.662  0.334 0.437  -0.0629  0.0955 #> 4  2014     1 -0.892 0.729 -0.246 0.175   0.258   0.0968 #> 5  2015     1 -0.652 0.678 -0.418 0.128  -0.410   0.0857 #> # ℹ 8 more rows #>  #> Time series models #>    beta1 : ARIMA(0,0,0)  #>    beta2 : ARIMA(1,0,0)  #>    beta3 : ARIMA(0,0,0)  #>    beta4 : ARIMA(0,0,0)  #>    beta5 : ARIMA(0,0,0)  #>    beta6 : ARIMA(0,0,0)  #>  #> Variance explained #>   34.57 + 23.46 + 18.78 + 13.54 + 5.59 + 1.5 = 97.45% autoplot(hu)"},{"path":"https://pkg.robjhyndman.com/vital/reference/FMEAN.html","id":null,"dir":"Reference","previous_headings":"","what":"Functional mean model — FMEAN","title":"Functional mean model — FMEAN","text":"FMEAN() returns iid functional model applied formula's response variable function age.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FMEAN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functional mean model — FMEAN","text":"","code":"FMEAN(formula, ...)"},{"path":"https://pkg.robjhyndman.com/vital/reference/FMEAN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functional mean model — FMEAN","text":"formula Model specification. ... used.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FMEAN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functional mean model — FMEAN","text":"model specification.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FMEAN.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Functional mean model — FMEAN","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FMEAN.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functional mean model — FMEAN","text":"","code":"fmean <- norway_mortality |>   dplyr::filter(Sex == \"Female\") |>   model(mean = FMEAN(Mortality)) report(fmean) #> Series: Mortality  #> Model: FMEAN  #>  #> # A tibble: 111 × 3 #>      Age     mean   sigma #>    <int>    <dbl>   <dbl> #>  1     0 0.0231   0.0212  #>  2     1 0.00616  0.00763 #>  3     2 0.00262  0.00324 #>  4     3 0.00179  0.00215 #>  5     4 0.00144  0.00173 #>  6     5 0.00124  0.00152 #>  7     6 0.00109  0.00134 #>  8     7 0.000972 0.00118 #>  9     8 0.000907 0.00111 #> 10     9 0.000879 0.00113 #> # ℹ 101 more rows autoplot(fmean) + ggplot2::scale_y_log10()"},{"path":"https://pkg.robjhyndman.com/vital/reference/FNAIVE.html","id":null,"dir":"Reference","previous_headings":"","what":"Functional naive model — FNAIVE","title":"Functional naive model — FNAIVE","text":"FNAIVE() returns random walk functional model applied formula's response variable function age.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FNAIVE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functional naive model — FNAIVE","text":"","code":"FNAIVE(formula, ...)"},{"path":"https://pkg.robjhyndman.com/vital/reference/FNAIVE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functional naive model — FNAIVE","text":"formula Model specification. ... used.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FNAIVE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functional naive model — FNAIVE","text":"model specification.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FNAIVE.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Functional naive model — FNAIVE","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/FNAIVE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functional naive model — FNAIVE","text":"","code":"fnaive <- norway_mortality |>   dplyr::filter(Sex == \"Female\") |>   model(fit = FNAIVE(Mortality)) report(fnaive) #> Series: Mortality  #> Model: FNAIVE  #>  #> # A tibble: 111 × 2 #>      Age    sigma #>    <int>    <dbl> #>  1     0 0.00287  #>  2     1 0.00124  #>  3     2 0.000740 #>  4     3 0.000503 #>  5     4 0.000402 #>  6     5 0.000413 #>  7     6 0.000323 #>  8     7 0.000257 #>  9     8 0.000260 #> 10     9 0.000279 #> # ℹ 101 more rows autoplot(fnaive) + ggplot2::scale_y_log10()"},{"path":"https://pkg.robjhyndman.com/vital/reference/GAPC.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized APC stochastic mortality model — GAPC","title":"Generalized APC stochastic mortality model — GAPC","text":"Generalized Age-Period-Cohort (GAPC) stochastic mortality mode defined Villegas et al. (2018). StMoMo package used fit model. Separate functions available fit various special cases GAPC model.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/GAPC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized APC stochastic mortality model — GAPC","text":"","code":"GAPC(formula, use_weights = TRUE, clip = 0, zeroCohorts = NULL, ...)  LC2(   formula,   link = c(\"log\", \"logit\"),   const = c(\"sum\", \"last\", \"first\"),   use_weights = TRUE,   clip = 0,   zeroCohorts = NULL,   ... )  CBD(   formula,   link = c(\"log\", \"logit\"),   use_weights = TRUE,   clip = 0,   zeroCohorts = NULL,   ... )  RH(   formula,   link = c(\"log\", \"logit\"),   cohortAgeFun = c(\"1\", \"NP\"),   use_weights = TRUE,   clip = 0,   zeroCohorts = NULL,   ... )  APC(   formula,   link = c(\"log\", \"logit\"),   use_weights = TRUE,   clip = 0,   zeroCohorts = NULL,   ... )  M7(   formula,   link = c(\"log\", \"logit\"),   use_weights = TRUE,   clip = 0,   zeroCohorts = NULL,   ... )  PLAT(   formula,   link = c(\"log\", \"logit\"),   use_weights = TRUE,   clip = 0,   zeroCohorts = NULL,   ... )"},{"path":"https://pkg.robjhyndman.com/vital/reference/GAPC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized APC stochastic mortality model — GAPC","text":"formula Model specification use_weights TRUE, call genWeightMat arguments clip zeroCohorts. clip Passed genWeightMat() zeroCohorts Passed genWeightMat() ... arguments passed StMoMo() link link function use. Either \"log\" \"logit\". using logit, mortality rates need 0 1. , likely need use initial rather central population values computing . const defines constraint impose period index model ensure identifiability. alternatives \"sum\" (default), \"last\" \"first\" apply constraints \\(\\sum_{t=1}^T \\kappa_t=0\\), \\(\\kappa_T = 0\\) \\(\\kappa_1 = 0\\) respectively. cohortAgeFun function defining cohort age modulating parameter \\(\\beta_x^{(0)}\\). can take values: \"NP\" non-parametric age term \"1\" \\(\\beta_x^{(0)} = 1\\) (default).","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/GAPC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized APC stochastic mortality model — GAPC","text":"model specification.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/GAPC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generalized APC stochastic mortality model — GAPC","text":"LC2() provides alternative implementation Lee-Carter model based GAPC specification. advantage approach LC() allows 0 rates mortality data. Note return identical results LC() model formulation different. LC2(), take logs mortality rates handled link function. LC(), need take logs mortality rates calling function. Renshaw-Haberman (RH) model due Renshaw Haberman (2006) another special case GAPC model, can considered extension Lee-Carter model age-specific cohort effect. Age-Period-Cohort (APC) model special case GAPC model discussed Renshaw Haberman (2011). Cairns-Blake-Dowd (CBD) model due Cairns et al (2006) can considered another  special case GAPC model primarily intended forecasting mortality patterns older populations. Cairns et al (2009) extended CBD model adding cohort effect quadratic age effect, giving M7 model. Plat (2009) combined CBD model features Lee-Carter model produce model suitable full age ranges captures cohort effect. functions returns GAPC model applied formula's response variable function age. model optionally call genWeightMat arguments clip zeroCohorts. arguments passed StMoMo.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/GAPC.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generalized APC stochastic mortality model — GAPC","text":"Cairns, AJG, Blake, D, Dowd, K (2006). two-factor model stochastic mortality parameter uncertainty: Theory calibration. Journal Risk Insurance, 73(4), 687-718. doi:10.1111/j.1539-6975.2006.00195.x Cairns AJG, Blake D, Dowd K, Coughlan GD, Epstein D, Ong , Balevich (2009). quantitative comparison stochastic mortality models using data England Wales United States. North American Actuarial Journal, 13(1), 1–35. doi:10.1080/10920277.2009.10597538 Lee, RD, Carter, LR (1992) Modeling forecasting US mortality. Journal American Statistical Association, 87, 659-671. doi:10.1080/01621459.1992.10475265 Plat R (2009). stochastic mortality modeling. Insurance: Mathematics Economics, 45(3), 393–404. doi:10.1016/j.insmatheco.2009.08.006 Renshaw, AE, Haberman, S (2006). cohort-based extension Lee-Carter model mortality reduction factors. Insurance: Mathematics Economics, 38(3), 556-570. doi:10.1016/j.insmatheco.2005.12.001 Renshaw, AE, Haberman, S (2011). comparative study parametric mortality projection models. Insurance: Mathematics Economics, 48(1), 35–55. <doi:10.1016/j. insmatheco.2010.09.003> Villegas, , Millossovich, P, Kaishev, VK (2018). StMoMo: R package stochastic mortality modelling. Journal Statistical Software, 84(3), 1-38. doi:10.18637/jss.v084.i03","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/vital/reference/GAPC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generalized APC stochastic mortality model — GAPC","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/GAPC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generalized APC stochastic mortality model — GAPC","text":"","code":"# Fit the same CBD model using GAPC() and CBD() gapc <- norway_mortality |>   dplyr::filter(Sex == \"Female\", Age > 50) |>   model(     cbd1 = GAPC(Mortality,       link = \"log\",       staticAgeFun = FALSE,       periodAgeFun = c(\"1\", function(x, ages) x - mean(ages))     ),     cbd2 = CBD(Mortality)   ) #> Registered S3 method overwritten by 'quantmod': #>   method            from #>   as.zoo.data.frame zoo  #> Warning: StMoMo: 39 data points have  #>                   non-positive exposures and have been zero weighted #> Warning: StMoMo: 39 data points have  #>                   non-positive exposures and have been zero weighted glance(gapc) #> # A tibble: 2 × 6 #>   Sex    .model  loglik deviance  nobs  npar #>   <chr>  <chr>    <dbl>    <dbl> <int> <int> #> 1 Female cbd1   -31129.   15529.  6868   248 #> 2 Female cbd2   -31129.   15529.  6868   248 gapc |>   dplyr::select(cbd2) |>   report() #> Series: Mortality  #> Model: GAPC  #> Stochastic Mortality Model fit #> Call: fit.StMoMo(object = model, Dxt = data2$Dxt, Ext = data2$Ext,   #> Call:     ages = data2$ages, years = data2$years, wxt = wxt, verbose = FALSE) #>  #> Poisson model with predictor: log m[x,t] = k1[t] + f2[x] k2[t] #>  #> Data:  vital #> Series:  Female #> Years in fit: 1900 - 2023 #> Ages in fit: 51 - 110  #>  #> Log-likelihood:  -31129.16 #> Deviance:  15528.54 #> Number of parameters:  248"},{"path":"https://pkg.robjhyndman.com/vital/reference/LC.html","id":null,"dir":"Reference","previous_headings":"","what":"Lee-Carter model — LC","title":"Lee-Carter model — LC","text":"Lee-Carter model mortality fertility rates. LC() returns Lee-Carter model applied formula's response variable function age. produces standard Lee-Carter model default, although many options available. Missing rates set geometric mean rate relevant age.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/LC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lee-Carter model — LC","text":"","code":"LC(   formula,   adjust = c(\"dt\", \"dxt\", \"e0\", \"none\"),   jump_choice = c(\"fit\", \"actual\"),   scale = FALSE,   ... )"},{"path":"https://pkg.robjhyndman.com/vital/reference/LC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lee-Carter model — LC","text":"formula Model specification. include log variable modelled. See examples. adjust method use adjustment coefficients \\(k_t\\). Possibilities \"dt\" (Lee-Carter method, default), \"dxt\" (BMS method), \"e0\" (Lee-Miller method based life expectancy) \"none\". jump_choice Method used computation jump-point forecasts. Possibilities: \"actual\" (use actual rates final year) \"fit\" (use fitted rates). original Lee-Carter method used \"fit\" (default), Lee Miller (2001) authors prefer \"actual\". scale TRUE, bx kt rescaled kt drift parameter = 1. ... used.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/LC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lee-Carter model — LC","text":"model specification.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/LC.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Lee-Carter model — LC","text":"Basellini, U, Camarda, C G, Booth, H (2022) Thirty years : review Lee-Carter method forecasting mortality. International Journal Forecasting, 39(3), 1033-1049. Booth, H., Maindonald, J., Smith, L. (2002) Applying Lee-Carter conditions variable mortality decline. Population Studies, 56, 325-336. Lee, R D, Carter, L R (1992) Modeling forecasting US mortality. Journal American Statistical Association, 87, 659-671. Lee R D, Miller T (2001). Evaluating performance Lee-Carter method forecasting mortality. Demography, 38(4), 537–549.","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/vital/reference/LC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Lee-Carter model — LC","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/LC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lee-Carter model — LC","text":"","code":"lc <- norway_mortality |>   dplyr::filter(Sex == \"Female\") |>   model(lee_carter = LC(log(Mortality))) report(lc) #> Series: Mortality  #> Model: LC  #> Transformation: log(Mortality)  #>  #> Options: #>   Adjust method: dt #>   Jump choice: fit #>  #> Age functions #> # A tibble: 111 × 3 #>     Age    ax     bx #>   <int> <dbl>  <dbl> #> 1     0 -4.33 0.0152 #> 2     1 -6.16 0.0219 #> 3     2 -6.77 0.0189 #> 4     3 -7.14 0.0184 #> 5     4 -7.18 0.0162 #> # ℹ 106 more rows #>  #> Time coefficients #> # A tsibble: 124 x 2 [1Y] #>    Year    kt #>   <int> <dbl> #> 1  1900  117. #> 2  1901  111. #> 3  1902  105. #> 4  1903  110. #> 5  1904  108. #> # ℹ 119 more rows #>  #> Time series model: RW w/ drift  #>  #> Variance explained: 64.85% autoplot(lc)"},{"path":"https://pkg.robjhyndman.com/vital/reference/age_components.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract age components from a model — age_components","title":"Extract age components from a model — age_components","text":"mable single model column, return model components indexed age.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/age_components.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract age components from a model — age_components","text":"","code":"age_components(object, ...)"},{"path":"https://pkg.robjhyndman.com/vital/reference/age_components.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract age components from a model — age_components","text":"object vital mable object single model column. ... currently used.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/age_components.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract age components from a model — age_components","text":"vital object containing age components model.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/age_components.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract age components from a model — age_components","text":"","code":"norway_mortality |>   dplyr::filter(Sex == \"Female\") |>   model(lee_carter = LC(log(Mortality))) |>   age_components() #> # A tibble: 111 × 4 #>    Sex      Age    ax     bx #>    <chr>  <int> <dbl>  <dbl> #>  1 Female     0 -4.33 0.0152 #>  2 Female     1 -6.16 0.0219 #>  3 Female     2 -6.77 0.0189 #>  4 Female     3 -7.14 0.0184 #>  5 Female     4 -7.18 0.0162 #>  6 Female     5 -7.41 0.0171 #>  7 Female     6 -7.45 0.0162 #>  8 Female     7 -7.48 0.0152 #>  9 Female     8 -7.37 0.0122 #> 10 Female     9 -7.39 0.0122 #> # ℹ 101 more rows"},{"path":"https://pkg.robjhyndman.com/vital/reference/as_vital.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce to a vital object — as_vital","title":"Coerce to a vital object — as_vital","text":"vital object type tsibble contains vital statistics births, deaths, population counts, mortality fertility rates. tsibble special class allows special methods used. object attribute stores variables names needed functions, including age, sex, births, deaths population.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/as_vital.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce to a vital object — as_vital","text":"","code":"as_vital(x, ...)  # S3 method for class 'demogdata' as_vital(x, sex_groups = TRUE, ...)  # S3 method for class 'tbl_ts' as_vital(   x,   .age = NULL,   .sex = NULL,   .deaths = NULL,   .births = NULL,   .population = NULL,   reorder = FALSE,   ... )  # S3 method for class 'data.frame' as_vital(   x,   key = NULL,   index,   .age = NULL,   .sex = NULL,   .deaths = NULL,   .births = NULL,   .population = NULL,   reorder = TRUE,   ... )"},{"path":"https://pkg.robjhyndman.com/vital/reference/as_vital.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce to a vital object — as_vital","text":"x Object coerced vital format. ... arguments passed tsibble::as_tsibble() sex_groups Logical variable indicating groups denote sexes .age Character string name age variable .sex Character string name sex variable .deaths Character string name deaths variable .births Character string name births variable .population Character string name population variable reorder Logical indicating variables reordered. key Variable(s) uniquely determine time indices. NULL empty key, c() multiple variables. works tidy selector (e.g. tidyselect::starts_with()). index variable specify time index variable.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/as_vital.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce to a vital object — as_vital","text":"tsibble class vital.","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/vital/reference/as_vital.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Coerce to a vital object — as_vital","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/as_vital.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce to a vital object — as_vital","text":"","code":"# coerce demogdata object to vital as_vital(demography::fr.mort) #> # A vital: 63,603 x 7 [1Y] #> # Key:     Age x (AgeGroup, Sex) [111 x 3] #>     Year AgeGroup   Age Sex    Mortality Exposure Deaths #>    <int> <chr>    <int> <chr>      <dbl>    <dbl>  <dbl> #>  1  1816 0            0 female   0.187    408224. 76332. #>  2  1816 1            1 female   0.0467   382452. 17861. #>  3  1816 2            2 female   0.0339   351454. 11924. #>  4  1816 3            3 female   0.0229   337733.  7738. #>  5  1816 4            4 female   0.0160   331576.  5304. #>  6  1816 5            5 female   0.0138   313554.  4338. #>  7  1816 6            6 female   0.0121   306853.  3714. #>  8  1816 7            7 female   0.0104   301860.  3148. #>  9  1816 8            8 female   0.00891  296639.  2642. #> 10  1816 9            9 female   0.00760  289057.  2195. #> # ℹ 63,593 more rows # create a vital with only age as a key data.frame(   year = rep(2010:2015, 100),   age = rep(0:99, each = 6),   mx = runif(600, 0, 1) ) |>   as_vital(     index = year,     key = age,     .age = \"age\"   ) #> # A vital: 600 x 3 [1Y] #> # Key:     age [100 x 1] #>     year   age     mx #>    <int> <int>  <dbl> #>  1  2010     0 0.402  #>  2  2010     1 0.290  #>  3  2010     2 0.0514 #>  4  2010     3 0.301  #>  5  2010     4 0.180  #>  6  2010     5 0.0960 #>  7  2010     6 0.461  #>  8  2010     7 0.204  #>  9  2010     8 0.570  #> 10  2010     9 0.545  #> # ℹ 590 more rows"},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.fbl_vtl_ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot forecasts from a vital model — autoplot.fbl_vtl_ts","title":"Plot forecasts from a vital model — autoplot.fbl_vtl_ts","text":"Produces plot showing forecasts obtained model applied vital object.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.fbl_vtl_ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot forecasts from a vital model — autoplot.fbl_vtl_ts","text":"","code":"# S3 method for class 'fbl_vtl_ts' autoplot(object, ...)"},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.fbl_vtl_ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot forecasts from a vital model — autoplot.fbl_vtl_ts","text":"object fable object obtained vital model. ... arguments ignored.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.fbl_vtl_ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot forecasts from a vital model — autoplot.fbl_vtl_ts","text":"ggplot2 object.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.fbl_vtl_ts.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot forecasts from a vital model — autoplot.fbl_vtl_ts","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.fbl_vtl_ts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot forecasts from a vital model — autoplot.fbl_vtl_ts","text":"","code":"library(ggplot2) norway_mortality |>   model(ave = FMEAN(Mortality)) |>   forecast(h = 10) |>   autoplot() + scale_y_log10()"},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.mdl_vtl_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot output from a vital model — autoplot.mdl_vtl_df","title":"Plot output from a vital model — autoplot.mdl_vtl_df","text":"Produces plot showing model applied vital object. can applied one type model . use select() choose model column plot. multiple keys, separate models identified colour.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.mdl_vtl_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot output from a vital model — autoplot.mdl_vtl_df","text":"","code":"# S3 method for class 'mdl_vtl_df' autoplot(object, ...)"},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.mdl_vtl_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot output from a vital model — autoplot.mdl_vtl_df","text":"object mable object obtained vital. ... arguments ignored.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.mdl_vtl_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot output from a vital model — autoplot.mdl_vtl_df","text":"ggplot2 object.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.mdl_vtl_df.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot output from a vital model — autoplot.mdl_vtl_df","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.mdl_vtl_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot output from a vital model — autoplot.mdl_vtl_df","text":"","code":"library(ggplot2) norway_mortality |>   model(ave = FMEAN(Mortality)) |>   autoplot() + scale_y_log10()"},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.vital.html","id":null,"dir":"Reference","previous_headings":"","what":"Rainbow plot of demographic data against age — autoplot.vital","title":"Rainbow plot of demographic data against age — autoplot.vital","text":"Produce rainbow plot (coloured time index) demographic variable age.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.vital.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rainbow plot of demographic data against age — autoplot.vital","text":"","code":"# S3 method for class 'vital' autoplot(object, .vars = NULL, age = age_var(object), ...)"},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.vital.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rainbow plot of demographic data against age — autoplot.vital","text":"object vital including age variable variable wish plot. .vars name variable wish plot. age name age variable. supplied, function attempt find . ... arguments used.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.vital.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rainbow plot of demographic data against age — autoplot.vital","text":"ggplot2 object.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.vital.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Rainbow plot of demographic data against age — autoplot.vital","text":"Hyndman, Rob J & Shang, Han Lin (2010) Rainbow plots, bagplots, boxplots functional data. Journal Computational Graphical Statistics, 19(1), 29-45. https://robjhyndman.com/publications/rainbow-fda/","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.vital.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rainbow plot of demographic data against age — autoplot.vital","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/autoplot.vital.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rainbow plot of demographic data against age — autoplot.vital","text":"","code":"autoplot(norway_fertility, Fertility)"},{"path":"https://pkg.robjhyndman.com/vital/reference/cohort_components.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract cohort components from a model — cohort_components","title":"Extract cohort components from a model — cohort_components","text":"mable single model column, return model components indexed birth year cohort.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/cohort_components.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract cohort components from a model — cohort_components","text":"","code":"cohort_components(object, ...)"},{"path":"https://pkg.robjhyndman.com/vital/reference/cohort_components.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract cohort components from a model — cohort_components","text":"object vital mable object single model column. ... currently used.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/cohort_components.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract cohort components from a model — cohort_components","text":"tsibble object containing cohort components model.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/cohort_components.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract cohort components from a model — cohort_components","text":"","code":"norway_mortality |>   dplyr::filter(Sex == \"Male\", Age > 50) |>   model(apc = APC(Mortality)) |>   cohort_components() #> Warning: StMoMo: 49 data points have  #>                   non-positive exposures and have been zero weighted #> # A tsibble: 183 x 3 [1Y] #> # Key:       Sex [1] #>    Sex   Birth_Year     gc #>    <chr>      <int>  <dbl> #>  1 Male        1790 NA     #>  2 Male        1791 NA     #>  3 Male        1792 NA     #>  4 Male        1793 NA     #>  5 Male        1794 NA     #>  6 Male        1795 NA     #>  7 Male        1796 -6.96  #>  8 Male        1797 NA     #>  9 Male        1798 -6.95  #> 10 Male        1799 -0.695 #> # ℹ 173 more rows"},{"path":"https://pkg.robjhyndman.com/vital/reference/collapse_ages.html","id":null,"dir":"Reference","previous_headings":"","what":"Collapse upper ages into a single age group. Counts are summed while rates are recomputed where possible. — collapse_ages","title":"Collapse upper ages into a single age group. Counts are summed while rates are recomputed where possible. — collapse_ages","text":"Collapse upper ages single age group. Counts summed rates recomputed possible.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/collapse_ages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collapse upper ages into a single age group. Counts are summed while rates are recomputed where possible. — collapse_ages","text":"","code":"collapse_ages(.data, max_age = 100)"},{"path":"https://pkg.robjhyndman.com/vital/reference/collapse_ages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collapse upper ages into a single age group. Counts are summed while rates are recomputed where possible. — collapse_ages","text":".data vital object including age variable max_age Maximum age include collapsed age group.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/collapse_ages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collapse upper ages into a single age group. Counts are summed while rates are recomputed where possible. — collapse_ages","text":"vital object variables .data, upper ages collapsed single age group.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/collapse_ages.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Collapse upper ages into a single age group. Counts are summed while rates are recomputed where possible. — collapse_ages","text":"object includes deaths, population mortality rates, deaths population summed mortality rates recomputed deaths/population. object contains mortality rates deaths population, last rate remains unchanged (warning generated).","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/collapse_ages.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Collapse upper ages into a single age group. Counts are summed while rates are recomputed where possible. — collapse_ages","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/collapse_ages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collapse upper ages into a single age group. Counts are summed while rates are recomputed where possible. — collapse_ages","text":"","code":"norway_mortality |>   dplyr::filter(Sex == \"Female\") |>   collapse_ages(max_age = 85) #> # A vital: 10,664 x 7 [1Y] #> # Key:     Age x Sex [86 x 1] #>     Year   Age OpenInterval Sex    Population Deaths Mortality #>    <int> <int> <lgl>        <chr>       <dbl>  <dbl>     <dbl> #>  1  1900     0 FALSE        Female      30070 2376.    0.0778  #>  2  1900     1 FALSE        Female      28960  842     0.0290  #>  3  1900     2 FALSE        Female      28043  348     0.0123  #>  4  1900     3 FALSE        Female      27019  216.    0.00786 #>  5  1900     4 FALSE        Female      26854  168.    0.00624 #>  6  1900     5 FALSE        Female      25569  140.    0.00538 #>  7  1900     6 FALSE        Female      25534  108.    0.00422 #>  8  1900     7 FALSE        Female      24314   93.5   0.00376 #>  9  1900     8 FALSE        Female      24979   93.5   0.00380 #> 10  1900     9 FALSE        Female      24428   90     0.00365 #> # ℹ 10,654 more rows"},{"path":"https://pkg.robjhyndman.com/vital/reference/forecast.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce forecasts from a vital model — forecast.FDM","title":"Produce forecasts from a vital model — forecast.FDM","text":"forecast function allows produce future predictions vital model, response function age. forecasts returned contain point forecasts distribution.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/forecast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce forecasts from a vital model — forecast.FDM","text":"","code":"# S3 method for class 'FDM' forecast(   object,   new_data = NULL,   h = NULL,   point_forecast = list(.mean = mean),   simulate = FALSE,   bootstrap = FALSE,   times = 5000,   ... )  # S3 method for class 'LC' forecast(   object,   new_data = NULL,   h = NULL,   point_forecast = list(.mean = mean),   simulate = FALSE,   bootstrap = FALSE,   times = 5000,   ... )  # S3 method for class 'GAPC' forecast(   object,   new_data = NULL,   h = NULL,   point_forecast = list(.mean = mean),   simulate = FALSE,   bootstrap = FALSE,   times = 5000,   ... )  # S3 method for class 'FMEAN' forecast(   object,   new_data = NULL,   h = NULL,   point_forecast = list(.mean = mean),   simulate = FALSE,   bootstrap = FALSE,   times = 5000,   ... )  # S3 method for class 'FNAIVE' forecast(   object,   new_data = NULL,   h = NULL,   point_forecast = list(.mean = mean),   simulate = FALSE,   bootstrap = FALSE,   times = 5000,   ... )  # S3 method for class 'mdl_vtl_df' forecast(   object,   new_data = NULL,   h = NULL,   point_forecast = list(.mean = mean),   simulate = FALSE,   bootstrap = FALSE,   times = 5000,   ... )"},{"path":"https://pkg.robjhyndman.com/vital/reference/forecast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce forecasts from a vital model — forecast.FDM","text":"object mable containing one models. new_data tsibble containing future information used forecast. h Number time steps ahead forecast. can used instead new_data covariates model. ignored new_data provided. point_forecast list functions used compute point forecasts forecast distribution. simulate  TRUE, forecast distributions computed using simulation parametric model. bootstrap TRUE, forecast distributions computed using simulation resampling. times number sample paths use estimating forecast distribution bootstrap = TRUE. ... Additional arguments passed specific model method.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/forecast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce forecasts from a vital model — forecast.FDM","text":"fable containing following columns: .model: name model used obtain forecast. Taken column names models provided mable. forecast distribution. name column dependent variable model(s). multiple dependent variables exist, named .distribution. Point forecasts computed distribution using functions point_forecast argument. columns new_data, excluding whose names conflict .","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/forecast.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Produce forecasts from a vital model — forecast.FDM","text":"Rob J Hyndman Mitchell O'Hara-Wild","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/forecast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce forecasts from a vital model — forecast.FDM","text":"","code":"norway_mortality |>   dplyr::filter(Sex == \"Female\") |>   model(naive = FNAIVE(Mortality)) |>   forecast(h = 10) #> # A vital fable: 1,110 x 6 [1Y] #> # Key:           Age x (Sex, .model) [111 x 1] #>    Sex    .model  Year   Age #>    <chr>  <chr>  <dbl> <int> #>  1 Female naive   2024     0 #>  2 Female naive   2025     0 #>  3 Female naive   2026     0 #>  4 Female naive   2027     0 #>  5 Female naive   2028     0 #>  6 Female naive   2029     0 #>  7 Female naive   2030     0 #>  8 Female naive   2031     0 #>  9 Female naive   2032     0 #> 10 Female naive   2033     0 #> # ℹ 1,100 more rows #> # ℹ 2 more variables: Mortality <dist>, .mean <dbl>"},{"path":"https://pkg.robjhyndman.com/vital/reference/generate.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate responses from a mable — generate.mdl_vtl_df","title":"Generate responses from a mable — generate.mdl_vtl_df","text":"Use fitted model simulate future data similar behaviour response.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/generate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate responses from a mable — generate.mdl_vtl_df","text":"","code":"# S3 method for class 'mdl_vtl_df' generate(x, new_data = NULL, h = NULL, bootstrap = FALSE, times = 1, ...)"},{"path":"https://pkg.robjhyndman.com/vital/reference/generate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate responses from a mable — generate.mdl_vtl_df","text":"x mable. new_data Future data needed generation (include time index exogenous regressors) h simulation horizon (can used instead new_data regular time series exogenous regressors). bootstrap TRUE, forecast distributions computed using simulation resampled errors. times number replications. ... Additional arguments","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/generate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate responses from a mable — generate.mdl_vtl_df","text":"vital object simulated values.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/generate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate responses from a mable — generate.mdl_vtl_df","text":"Innovations sampled model's assumed error distribution. bootstrap TRUE, innovations sampled model's residuals.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/generate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate responses from a mable — generate.mdl_vtl_df","text":"Rob J Hyndman Mitchell O'Hara-Wild","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/generate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate responses from a mable — generate.mdl_vtl_df","text":"","code":"norway_mortality |>   model(lc = LC(Mortality)) |>   generate(times = 3, bootstrap = TRUE) #> Warning: 3 errors (1 unique) encountered for lc #> [3] Lee-Carter models require a log transformation of the response variable. #> # A vital: 1,998 x 6 [1Y] #> # Key:     Age x (Sex, .model, .rep) [111 x 9] #>     Year   Age Sex    .model .rep   .sim #>    <dbl> <int> <chr>  <chr>  <chr> <dbl> #>  1  2024     0 Female lc     1        NA #>  2  2024     1 Female lc     1        NA #>  3  2024     2 Female lc     1        NA #>  4  2024     3 Female lc     1        NA #>  5  2024     4 Female lc     1        NA #>  6  2024     5 Female lc     1        NA #>  7  2024     6 Female lc     1        NA #>  8  2024     7 Female lc     1        NA #>  9  2024     8 Female lc     1        NA #> 10  2024     9 Female lc     1        NA #> # ℹ 1,988 more rows"},{"path":"https://pkg.robjhyndman.com/vital/reference/generate_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Future population simulation — generate_population","title":"Future population simulation — generate_population","text":"Simulate future age-specific population given starting population models fertility, mortality, migration. model NULL, assumed future births, deaths net migrants, respectively. experimental function thoroughly tested.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/generate_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Future population simulation — generate_population","text":"","code":"generate_population(   starting_population,   mortality_model = NULL,   fertility_model = NULL,   migration_model = NULL,   h = 10,   n_reps = 1000,   female = NULL )"},{"path":"https://pkg.robjhyndman.com/vital/reference/generate_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Future population simulation — generate_population","text":"starting_population vital object age-sex-specific starting population. mortality_model mable object containing age-sex-specific model mortality rates, trained data year starting population. NULL, zero future deaths. fertility_model mable object containing age-specific model fertility rates, trained data year starting population. NULL, zero future births. migration_model mable object containing age-sex-specific model net migration numbers, trained data year starting population. NULL, zero future net migrants. h forecast horizon equal number years simulate future. n_reps number replicates simulate. female character string giving name used females sex variable starting_population. needed computing births fertility rates. missing, function try identify likely value automatically.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/generate_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Future population simulation — generate_population","text":"vital object containing simulated future population.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/interpolate.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolate missing values using a vital model — interpolate.mdl_vtl_df","title":"Interpolate missing values using a vital model — interpolate.mdl_vtl_df","text":"Uses fitted vital model interpolate missing values dataset.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/interpolate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolate missing values using a vital model — interpolate.mdl_vtl_df","text":"","code":"# S3 method for class 'mdl_vtl_df' interpolate(object, new_data, ...)"},{"path":"https://pkg.robjhyndman.com/vital/reference/interpolate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolate missing values using a vital model — interpolate.mdl_vtl_df","text":"object mable containing single model column. new_data dataset structure data used fit model. ... arguments passed interpolate methods.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/interpolate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpolate missing values using a vital model — interpolate.mdl_vtl_df","text":"vital object missing values interpolated.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/interpolate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Interpolate missing values using a vital model — interpolate.mdl_vtl_df","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/interpolate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interpolate missing values using a vital model — interpolate.mdl_vtl_df","text":"","code":"nor_female <- norway_mortality |>   dplyr::filter(Sex == \"Female\") nor_female |>   model(mean = FMEAN(Mortality)) |>   interpolate(nor_female) #> # A vital: 13,764 x 4 [1Y] #> # Key:     Age x Sex [111 x 1] #>     Year   Age Sex    Mortality #>    <int> <int> <chr>      <dbl> #>  1  1900     0 Female   0.0778  #>  2  1900     1 Female   0.0290  #>  3  1900     2 Female   0.0123  #>  4  1900     3 Female   0.00786 #>  5  1900     4 Female   0.00624 #>  6  1900     5 Female   0.00538 #>  7  1900     6 Female   0.00422 #>  8  1900     7 Female   0.00376 #>  9  1900     8 Female   0.00380 #> 10  1900     9 Female   0.00365 #> # ℹ 13,754 more rows"},{"path":"https://pkg.robjhyndman.com/vital/reference/life_expectancy.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute life expectancy from age-specific mortality rates — life_expectancy","title":"Compute life expectancy from age-specific mortality rates — life_expectancy","text":"Returns remaining life expectancy given age (0 default).","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/life_expectancy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute life expectancy from age-specific mortality rates — life_expectancy","text":"","code":"life_expectancy(.data, from_age = 0, mortality)"},{"path":"https://pkg.robjhyndman.com/vital/reference/life_expectancy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute life expectancy from age-specific mortality rates — life_expectancy","text":".data vital object including age variable variable containing mortality rates. from_age Age life expectancy calculated. Either scalar vector ages. mortality Variable .data containing Mortality rates (mx). omitted, variable name  mx, Mortality Rate used (case sensitive).","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/life_expectancy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute life expectancy from age-specific mortality rates — life_expectancy","text":"vital object life expectancy column ex.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/life_expectancy.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute life expectancy from age-specific mortality rates — life_expectancy","text":"Chiang CL. (1984) life table applications. Robert E Krieger Publishing Company: Malabar. Keyfitz, N, Caswell, H. (2005) Applied Mathematical Demography, Springer-Verlag: New York. Preston, S.H., Heuveline, P., Guillot, M. (2001) Demography: measuring modeling population processes. Blackwell","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/vital/reference/life_expectancy.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute life expectancy from age-specific mortality rates — life_expectancy","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/life_expectancy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute life expectancy from age-specific mortality rates — life_expectancy","text":"","code":"# Compute Norwegian life expectancy for females over time norway_mortality |>   dplyr::filter(Sex == \"Female\") |>   life_expectancy() #> # A vital: 124 x 7 [1Y] #> # Key:     Age x Sex [1 x 1] #>     Year   Age Sex       ex    rx    nx    ax #>    <int> <int> <chr>  <dbl> <dbl> <dbl> <dbl> #>  1  1900     0 Female  55.2 0.946     1 0.262 #>  2  1901     0 Female  56.4 0.946     1 0.264 #>  3  1902     0 Female  58.0 0.953     1 0.224 #>  4  1903     0 Female  56.5 0.951     1 0.233 #>  5  1904     0 Female  57.3 0.954     1 0.218 #>  6  1905     0 Female  56.2 0.949     1 0.243 #>  7  1906     0 Female  58.1 0.955     1 0.211 #>  8  1907     0 Female  57.9 0.958     1 0.200 #>  9  1908     0 Female  57.6 0.952     1 0.227 #> 10  1909     0 Female  58.9 0.954     1 0.220 #> # ℹ 114 more rows"},{"path":"https://pkg.robjhyndman.com/vital/reference/life_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute period life tables from age-specific mortality rates — life_table","title":"Compute period life tables from age-specific mortality rates — life_table","text":"available years ages included tables. $qx = mx/(1 + ((1-ax) * mx))$ per Chiang (1984). Warning: code tested data based single-year age groups.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/life_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute period life tables from age-specific mortality rates — life_table","text":"","code":"life_table(.data, mortality)"},{"path":"https://pkg.robjhyndman.com/vital/reference/life_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute period life tables from age-specific mortality rates — life_table","text":".data vital including age variable variable containing mortality rates. mortality Variable .data containing Mortality rates (mx). omitted, variable name  mx, Mortality Rate used (case sensitive).","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/life_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute period life tables from age-specific mortality rates — life_table","text":"vital object containing index, keys, new life table variables mx, qx, lx, dx, Lx, Tx ex.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/life_table.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute period life tables from age-specific mortality rates — life_table","text":"Chiang CL. (1984) life table applications. Robert E Krieger Publishing Company: Malabar. Keyfitz, N, Caswell, H. (2005) Applied mathematical demography, Springer-Verlag: New York. Preston, S.H., Heuveline, P., Guillot, M. (2001) Demography: measuring modeling population processes. Blackwell","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/life_table.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute period life tables from age-specific mortality rates — life_table","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/life_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute period life tables from age-specific mortality rates — life_table","text":"","code":"# Compute Norwegian life table for females in 2003 norway_mortality |>   dplyr::filter(Sex == \"Female\", Year == 2003) |>   life_table() #> # A vital: 111 x 13 [?] #> # Key:     Age x Sex [111 x 1] #>     Year   Age Sex          mx        qx    lx        dx    Lx    Tx    ex    rx #>    <int> <int> <chr>     <dbl>     <dbl> <dbl>     <dbl> <dbl> <dbl> <dbl> <dbl> #>  1  2003     0 Female 0.00309  0.00308   1     0.00308   0.997  81.9  81.9 0.997 #>  2  2003     1 Female 0.000434 0.000434  0.997 0.000433  0.997  80.9  81.2 1.000 #>  3  2003     2 Female 0.000278 0.000278  0.996 0.000277  0.996  79.9  80.2 1.000 #>  4  2003     3 Female 0.000136 0.000136  0.996 0.000135  0.996  78.9  79.2 1.000 #>  5  2003     4 Female 0.00024  0.000240  0.996 0.000239  0.996  77.9  78.2 1.000 #>  6  2003     5 Female 0.000034 0.0000340 0.996 0.0000339 0.996  76.9  77.3 1.000 #>  7  2003     6 Female 0.000099 0.0000990 0.996 0.0000986 0.996  76.0  76.3 1.000 #>  8  2003     7 Female 0.0001   0.0001000 0.996 0.0000996 0.996  75.0  75.3 1.000 #>  9  2003     8 Female 0.000166 0.000166  0.996 0.000165  0.996  74.0  74.3 1.000 #> 10  2003     9 Female 0.000033 0.0000330 0.995 0.0000328 0.995  73.0  73.3 1.000 #> # ℹ 101 more rows #> # ℹ 2 more variables: nx <dbl>, ax <dbl>"},{"path":"https://pkg.robjhyndman.com/vital/reference/make_pr.html","id":null,"dir":"Reference","previous_headings":"","what":"Do a product/ratio transformation — make_pr","title":"Do a product/ratio transformation — make_pr","text":"Make new vital containing products ratios measured variable key variable. common use case function mortality rates sex. , want compute geometric mean age-specific mortality rates, along ratio mortality geometric mean sex. latter equal male/female female/male ratios mortality rates.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/make_pr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Do a product/ratio transformation — make_pr","text":"","code":"make_pr(.data, .var, key = Sex)"},{"path":"https://pkg.robjhyndman.com/vital/reference/make_pr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Do a product/ratio transformation — make_pr","text":".data vital object .var bare variable name measured variable use. key bare variable name specifying key variable use.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/make_pr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Do a product/ratio transformation — make_pr","text":"vital object","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/make_pr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Do a product/ratio transformation — make_pr","text":"measured variable takes value 0, set 10^-6 avoid infinite values ratio.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/make_pr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Do a product/ratio transformation — make_pr","text":"Hyndman, R.J., Booth, H., & Yasmeen, F. (2013). Coherent mortality forecasting: product-ratio method functional time series models. Demography, 50(1), 261-283.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/make_pr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Do a product/ratio transformation — make_pr","text":"","code":"pr <- norway_mortality |>   dplyr::filter(Year > 2015, Sex != \"Total\") |>   make_pr(Mortality) pr |>   dplyr::filter(Sex == \"geometric_mean\") |>   autoplot(Mortality) +   ggplot2::scale_y_log10()"},{"path":"https://pkg.robjhyndman.com/vital/reference/make_sd.html","id":null,"dir":"Reference","previous_headings":"","what":"Do a sum/difference transformation — make_sd","title":"Do a sum/difference transformation — make_sd","text":"Make new vital containing means differences measured variable key variable. common use case function migration numbers sex. , want compute age-specific mean migration, along difference migration mean sex. latter equal half male/female female/male differences migration numbers.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/make_sd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Do a sum/difference transformation — make_sd","text":"","code":"make_sd(.data, .var, key = Sex)"},{"path":"https://pkg.robjhyndman.com/vital/reference/make_sd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Do a sum/difference transformation — make_sd","text":".data vital object .var bare variable name measured variable use. key bare variable name specifying key variable use.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/make_sd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Do a sum/difference transformation — make_sd","text":"vital object","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/make_sd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Do a sum/difference transformation — make_sd","text":"Hyndman, R.J., Booth, H., & Yasmeen, F. (2013). Coherent mortality forecasting: product-ratio method functional time series models. Demography, 50(1), 261-283.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/make_sd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Do a sum/difference transformation — make_sd","text":"","code":"mig <- net_migration(norway_mortality, norway_births) |>   dplyr::filter(Sex != \"Total\") sd <- mig |>   make_sd(NetMigration) sd |>   autoplot(NetMigration)"},{"path":"https://pkg.robjhyndman.com/vital/reference/model.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate models for vital data — model.vital","title":"Estimate models for vital data — model.vital","text":"Trains specified model definition(s) dataset. function estimate set model definitions (passed via ...) series within .data (identified key structure). result mable (model table), neatly stores estimated models tabular structure. Rows data identify different series within data, model column contains models model definition. cell mable identifies single model.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate models for vital data — model.vital","text":"","code":"# S3 method for class 'vital' model(.data, ..., .safely = TRUE)"},{"path":"https://pkg.robjhyndman.com/vital/reference/model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate models for vital data — model.vital","text":".data vital object including age variable. ... Definitions models used. models must share response variable. .safely model encounters error, rather aborting process NULL model returned instead. allows error occur computing many models, without losing results successful models.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate models for vital data — model.vital","text":"mable containing fitted models.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/model.html","id":"parallel","dir":"Reference","previous_headings":"","what":"Parallel","title":"Estimate models for vital data — model.vital","text":"possible estimate models parallel using future package. specifying future::plan() estimating models, computed according plan.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/model.html","id":"progress","dir":"Reference","previous_headings":"","what":"Progress","title":"Estimate models for vital data — model.vital","text":"Progress model estimation can obtained wrapping code progressr::with_progress(). customisation progress reported can controlled using progressr package.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/model.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimate models for vital data — model.vital","text":"Rob J Hyndman Mitchell O'Hara-Wild","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate models for vital data — model.vital","text":"","code":"norway_mortality |>   dplyr::filter(Sex == \"Female\") |>   model(     naive = FNAIVE(Mortality),     mean = FMEAN(Mortality)   ) #> # A mable: 1 x 3 #> # Key:     Sex [1] #>   Sex       naive    mean #>   <chr>   <model> <model> #> 1 Female <FNAIVE> <FMEAN>"},{"path":"https://pkg.robjhyndman.com/vital/reference/net_migration.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate net migration from a vital object — net_migration","title":"Calculate net migration from a vital object — net_migration","text":"Calculate net migration vital object","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/net_migration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate net migration from a vital object — net_migration","text":"","code":"net_migration(deaths, births)"},{"path":"https://pkg.robjhyndman.com/vital/reference/net_migration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate net migration from a vital object — net_migration","text":"deaths vital object containing least time index, age, population 1 January, death rates. births vital object containing least time index number births per time period. assumed population variable deaths object, keys age present objects.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/net_migration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate net migration from a vital object — net_migration","text":"vital object containing population, estimated deaths (actual deaths) net migration, using formula Net Migration = Population - lag(Population cohort) - Deaths + Births. Births returned Population Age -1, deaths estimated life table","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/net_migration.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate net migration from a vital object — net_migration","text":"Hyndman Booth (2008) Stochastic population forecasts using functional data models mortality, fertility migration. International Journal Forecasting, 24(3), 323-342.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/net_migration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate net migration from a vital object — net_migration","text":"","code":"net_migration(norway_mortality, norway_births) #> # A vital: 40,959 x 6 [1Y] #> # Key:     Age x Sex [111 x 3] #>     Year   Age Sex    Population Deaths NetMigration #>    <dbl> <dbl> <chr>       <dbl>  <dbl>        <dbl> #>  1  1900    -1 Female      32150 1745.        248.   #>  2  1900     0 Female      30070 1035.        -86.2  #>  3  1900     1 Female      28960  594.        222.   #>  4  1900     2 Female      28043  281.         57.3  #>  5  1900     3 Female      27019  190.         26.8  #>  6  1900     4 Female      26854  155.          3.50 #>  7  1900     5 Female      25569  122.          5.37 #>  8  1900     6 Female      25534  102.          4.64 #>  9  1900     7 Female      24314   91.7        -5.27 #> 10  1900     8 Female      24979   92.9       -11.1  #> # ℹ 40,949 more rows if (FALSE) { # \\dontrun{ # Files downloaded from the [Human Mortality Database](https://mortality.org) deaths <- read_hmd_files(c(\"Population.txt\", \"Mx_1x1.txt\")) births <- read_hmd_file(\"Births.txt\") mig <- net_migration(deaths, births) } # }"},{"path":"https://pkg.robjhyndman.com/vital/reference/norway_births.html","id":null,"dir":"Reference","previous_headings":"","what":"Norwegian mortality and births data — norway_births","title":"Norwegian mortality and births data — norway_births","text":"norway_births annual vital object covering years 1900-2023, provided Human Mortality Database 19 August 2025. norway_fertility annual vital covering years 1967-2022, provided Human Fertility Database 19 August 2025. norway_mortality annual vital covering years 1900-2023, provided Human Mortality Database 19 August 2025.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/norway_births.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Norwegian mortality and births data — norway_births","text":"Time series class vital","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/norway_births.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Norwegian mortality and births data — norway_births","text":"Human Mortality Database https://mortality.org Human Fertility Database https://www.humanfertility.org","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/norway_births.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Norwegian mortality and births data — norway_births","text":"","code":"library(ggplot2) # Births norway_births #> # A vital: 372 x 3 [1Y] #> # Key:     Sex [3] #>     Year Sex    Births #>    <int> <chr>   <int> #>  1  1900 Female  32150 #>  2  1900 Male    34079 #>  3  1900 Total   66229 #>  4  1901 Female  32671 #>  5  1901 Male    34632 #>  6  1901 Total   67303 #>  7  1902 Female  32279 #>  8  1902 Male    34215 #>  9  1902 Total   66494 #> 10  1903 Female  31782 #> # ℹ 362 more rows norway_births |>   autoplot(Births)  # Deaths norway_mortality #> # A vital: 41,292 x 7 [1Y] #> # Key:     Age x Sex [111 x 3] #>     Year   Age OpenInterval Sex    Population Deaths Mortality #>    <int> <int> <lgl>        <chr>       <dbl>  <dbl>     <dbl> #>  1  1900     0 FALSE        Female      30070 2376.    0.0778  #>  2  1900     1 FALSE        Female      28960  842     0.0290  #>  3  1900     2 FALSE        Female      28043  348     0.0123  #>  4  1900     3 FALSE        Female      27019  216.    0.00786 #>  5  1900     4 FALSE        Female      26854  168.    0.00624 #>  6  1900     5 FALSE        Female      25569  140.    0.00538 #>  7  1900     6 FALSE        Female      25534  108.    0.00422 #>  8  1900     7 FALSE        Female      24314   93.5   0.00376 #>  9  1900     8 FALSE        Female      24979   93.5   0.00380 #> 10  1900     9 FALSE        Female      24428   90     0.00365 #> # ℹ 41,282 more rows norway_mortality |>   dplyr::filter(Age < 85, Year < 1950, Sex != \"Total\") |>   autoplot(Mortality) +   scale_y_log10()  # Fertility norway_fertility #> # A vital: 2,464 x 4 [1Y] #> # Key:     Age [44 x 1] #>     Year   Age Fertility OpenInterval #>    <int> <int>     <dbl> <lgl>        #>  1  1967    12   0.00003 TRUE         #>  2  1967    13   0       FALSE        #>  3  1967    14   0.0001  FALSE        #>  4  1967    15   0.00094 FALSE        #>  5  1967    16   0.00753 FALSE        #>  6  1967    17   0.0258  FALSE        #>  7  1967    18   0.0644  FALSE        #>  8  1967    19   0.102   FALSE        #>  9  1967    20   0.142   FALSE        #> 10  1967    21   0.166   FALSE        #> # ℹ 2,454 more rows norway_fertility |>   autoplot(Fertility)"},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hfd.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data directly from HFD and construct a vital object for use in other functions — read_hfd","title":"Read data directly from HFD and construct a vital object for use in other functions — read_hfd","text":"read_hfd reads single-year single-age data Human Fertility Database (HFD https://www.humanfertility.org) constructs vital object suitable use functions. function uses HMDHFDplus::readHFDweb() download required data. designed handle age-specific fertility rates. may extended handle types data future.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hfd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data directly from HFD and construct a vital object for use in other functions — read_hfd","text":"","code":"read_hfd(country, username, password, variables = \"asfrRR\")"},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hfd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data directly from HFD and construct a vital object for use in other functions — read_hfd","text":"country Directory abbreviation HMD. instance, Norway = \"\". username HFD username (case-sensitive) password HFD password (case-sensitive) variables List variables download HFD. default, age-specific fertility rate (asfrRR) downloaded.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hfd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data directly from HFD and construct a vital object for use in other functions — read_hfd","text":"read_hfd returns vital object combining downloaded data.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hfd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read data directly from HFD and construct a vital object for use in other functions — read_hfd","text":"order read data, users required create account HFD website (https://www.humanfertility.org), obtain valid username password.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hfd.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read data directly from HFD and construct a vital object for use in other functions — read_hfd","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hfd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read data directly from HFD and construct a vital object for use in other functions — read_hfd","text":"","code":"if (FALSE) { # \\dontrun{ norway <- read_hfd(   country = \"NOR\",   username = \"Nora.Weigh@mymail.com\",   password = \"FF!5xeEFa6\" ) } # }"},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hfd_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data from files downloaded from HFD and construct a vital object for use in other functions — read_hfd_files","title":"Read data from files downloaded from HFD and construct a vital object for use in other functions — read_hfd_files","text":"read_hfd_files reads single-year single-age data files downloaded Human Mortality Database (HFD https://www.humanfertility.org) constructs vital object suitable use functions. function uses HMDHFDplus::readHFD() parse files.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hfd_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data from files downloaded from HFD and construct a vital object for use in other functions — read_hfd_files","text":"","code":"read_hfd_files(files)"},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hfd_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data from files downloaded from HFD and construct a vital object for use in other functions — read_hfd_files","text":"files Vector file names containing data downloaded HFD. file names used determine contain. file names per HFD, function automatically determine contents. unclear file contains, columns named according filename. data contains mixture age-specific non-age-specific variables, non-age-specific data repeated age. HMD files many countries, names, put separate folders avoid confusion, save changing filenames.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hfd_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data from files downloaded from HFD and construct a vital object for use in other functions — read_hfd_files","text":"read_hfd_files returns vital object combining downloaded data.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hfd_files.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read data from files downloaded from HFD and construct a vital object for use in other functions — read_hfd_files","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hfd_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read data from files downloaded from HFD and construct a vital object for use in other functions — read_hfd_files","text":"","code":"if (FALSE) { # \\dontrun{ # File downloaded from the [Human Fertility Database](https://www.humanfertility.org) fertility <- read_hfd_files(\"NORasfrRR.txt\") } # }"},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data directly from HMD and construct a vital object for use in other functions — read_hmd","title":"Read data directly from HMD and construct a vital object for use in other functions — read_hmd","text":"read_hmd reads single-year single-age data Human Mortality Database (HMD https://www.mortality.org) constructs vital object suitable use functions. function uses HMDHFDplus::readHMDweb() download required data. designed handle Deaths, Population, Exposure, Death Rates Births. default, Deaths, Population, Exposure Death Rates downloaded. better handle Births separately age-specific.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data directly from HMD and construct a vital object for use in other functions — read_hmd","text":"","code":"read_hmd(   country,   username,   password,   variables = c(\"Deaths\", \"Exposures\", \"Population\", \"Mx\") )"},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data directly from HMD and construct a vital object for use in other functions — read_hmd","text":"country Country name country code specified HMD. instance, Australian data can obtained using country = \"Australia\" country = \"AUS\". username HMD username (case-sensitive) password HMD password (case-sensitive) variables List variables download HMD. data contains mixture age-specific non-age-specific variables, non-age-specific data repeated age.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data directly from HMD and construct a vital object for use in other functions — read_hmd","text":"read_hmd returns vital object combining downloaded data.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read data directly from HMD and construct a vital object for use in other functions — read_hmd","text":"order read data, users required create account HMD website (https://www.mortality.org), obtain valid username password.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read data directly from HMD and construct a vital object for use in other functions — read_hmd","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read data directly from HMD and construct a vital object for use in other functions — read_hmd","text":"","code":"if (FALSE) { # \\dontrun{ norway <- read_hmd(   country = \"Norway\",   username = \"Nora.Weigh@mymail.com\",   password = \"FF!5xeEFa6\" ) norway_births <- read_hmd(   country = \"Norway\",   username = \"Nora.Weigh@mymail.com\",   password = \"FF!5xeEFa6\",   variables = \"Births\" ) } # }"},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data from files downloaded from HMD and construct a vital object for use in other functions — read_hmd_files","title":"Read data from files downloaded from HMD and construct a vital object for use in other functions — read_hmd_files","text":"read_hmd_files reads single-year single-age data files downloaded Human Mortality Database (HMD https://www.mortality.org) constructs vital object suitable use functions. function uses HMDHFDplus::readHMD() parse files.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data from files downloaded from HMD and construct a vital object for use in other functions — read_hmd_files","text":"","code":"read_hmd_files(files)"},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data from files downloaded from HMD and construct a vital object for use in other functions — read_hmd_files","text":"files Vector file names containing data downloaded HMD. file names used determine contain. file names per HMD, function automatically determine contents. unclear file contains, columns named according filename. data contains mixture age-specific non-age-specific variables, non-age-specific data repeated age. HMD files many countries, names, put separate folders avoid confusion, save changing filenames.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data from files downloaded from HMD and construct a vital object for use in other functions — read_hmd_files","text":"read_hmd_files returns vital object combining downloaded data.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd_files.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read data from files downloaded from HMD and construct a vital object for use in other functions — read_hmd_files","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_hmd_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read data from files downloaded from HMD and construct a vital object for use in other functions — read_hmd_files","text":"","code":"if (FALSE) { # \\dontrun{ # Files downloaded from the [Human Mortality Database](https://mortality.org) mortality <- read_hmd_files(   c(\"Deaths_1x1.txt\", \"Exposures_1x1.txt\", \"Population.txt\", \"Mx_1x1.txt\") ) births <- read_hmd_files(\"Births.txt\") } # }"},{"path":"https://pkg.robjhyndman.com/vital/reference/read_ktdb.html","id":null,"dir":"Reference","previous_headings":"","what":"Read old-age mortality from Kannisto-Thatcher (K-T) database and construct a vital object for use in other functions — read_ktdb","title":"Read old-age mortality from Kannisto-Thatcher (K-T) database and construct a vital object for use in other functions — read_ktdb","text":"read_ktdb reads old-age mortality data classified sex, age, year birth, calendar year 30 countries. series available Kannisto-Thatcher (K-T) database (https://www.demogr.mpg.de/cgi-bin/databases/ktdb/datamap.plx) constructs vital object suitable use functions.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_ktdb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read old-age mortality from Kannisto-Thatcher (K-T) database and construct a vital object for use in other functions — read_ktdb","text":"","code":"read_ktdb(country, triangle = 1)"},{"path":"https://pkg.robjhyndman.com/vital/reference/read_ktdb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read old-age mortality from Kannisto-Thatcher (K-T) database and construct a vital object for use in other functions — read_ktdb","text":"country Country name country code specified KT database. instance, Australian data can obtained using country = \"Australia\" country = 1. triangle Lexis triangle number, 1 (default) lower triangle, 2 upper triangle.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_ktdb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read old-age mortality from Kannisto-Thatcher (K-T) database and construct a vital object for use in other functions — read_ktdb","text":"read_ktdb returns vital object combining downloaded data.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_ktdb.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read old-age mortality from Kannisto-Thatcher (K-T) database and construct a vital object for use in other functions — read_ktdb","text":"Sixian Tang","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_ktdb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read old-age mortality from Kannisto-Thatcher (K-T) database and construct a vital object for use in other functions — read_ktdb","text":"","code":"if (FALSE) { # \\dontrun{ australia <- read_ktdb(country = \"Australia\") } # }"},{"path":"https://pkg.robjhyndman.com/vital/reference/read_ktdb_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Read old-age mortality data from files downloaded from K-T database — read_ktdb_files","title":"Read old-age mortality data from files downloaded from K-T database — read_ktdb_files","text":"read_ktdb_files reads old-age mortality data files downloaded K-T database (https://www.demogr.mpg.de/cgi-bin/databases/ktdb/datamap.plx) constructs vital object suitable use functions. two files provided, function treat data gender, returning combined dataset. one file provided, function assume represents data single gender.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_ktdb_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read old-age mortality data from files downloaded from K-T database — read_ktdb_files","text":"","code":"read_ktdb_files(male = NULL, female = NULL, triangle = 1)"},{"path":"https://pkg.robjhyndman.com/vital/reference/read_ktdb_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read old-age mortality data from files downloaded from K-T database — read_ktdb_files","text":"male File containing male mortality downloaded K-T database. female File containing female mortality downloaded K-T database. triangle Lexis triangle number, 1 (default) lower triangle, 2 upper triangle.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_ktdb_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read old-age mortality data from files downloaded from K-T database — read_ktdb_files","text":"read_ktdb_files returns vital object combining downloaded data.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_ktdb_files.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read old-age mortality data from files downloaded from K-T database — read_ktdb_files","text":"Sixian Tang","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_ktdb_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read old-age mortality data from files downloaded from K-T database — read_ktdb_files","text":"","code":"if (FALSE) { # \\dontrun{ # File downloaded from the K-T database australia_male <- read_ktdb_files(\"maustl.txt\") } # }"},{"path":"https://pkg.robjhyndman.com/vital/reference/read_stmf.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Short-Term Mortality Fluctuations data from the Human Mortality Database — read_stmf","title":"Read Short-Term Mortality Fluctuations data from the Human Mortality Database — read_stmf","text":"read_stmf reads weekly mortality data Short-term Mortality Fluctuations (STMF) series available Human Mortality Database (HMD) https://www.mortality.org/Data/STMF), constructs vital object suitable use functions.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_stmf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Short-Term Mortality Fluctuations data from the Human Mortality Database — read_stmf","text":"","code":"read_stmf(country)"},{"path":"https://pkg.robjhyndman.com/vital/reference/read_stmf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Short-Term Mortality Fluctuations data from the Human Mortality Database — read_stmf","text":"country Country name country code specified HMD. instance, Australian data can obtained using country = \"Australia\" country = \"AUS\".","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_stmf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Short-Term Mortality Fluctuations data from the Human Mortality Database — read_stmf","text":"vital object combining downloaded data.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_stmf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read Short-Term Mortality Fluctuations data from the Human Mortality Database — read_stmf","text":"Sixian Tang","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_stmf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Short-Term Mortality Fluctuations data from the Human Mortality Database — read_stmf","text":"","code":"if (FALSE) { # \\dontrun{ norway <- read_stmf(country = \"NOR\") } # }"},{"path":"https://pkg.robjhyndman.com/vital/reference/read_stmf_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Read STMF data from files downloaded from HMD — read_stmf_files","title":"Read STMF data from files downloaded from HMD — read_stmf_files","text":"read_stmf_files reads weekly mortality data file downloaded Short-term Mortality Fluctuations (STMF) series available Human Mortality Database (HMD) https://www.mortality.org/Data/STMF), constructs vital object suitable use functions.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_stmf_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read STMF data from files downloaded from HMD — read_stmf_files","text":"","code":"read_stmf_files(file)"},{"path":"https://pkg.robjhyndman.com/vital/reference/read_stmf_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read STMF data from files downloaded from HMD — read_stmf_files","text":"file Name file containing data downloaded HMD.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_stmf_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read STMF data from files downloaded from HMD — read_stmf_files","text":"read_stmf_files returns vital object combining downloaded data.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/read_stmf_files.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read STMF data from files downloaded from HMD — read_stmf_files","text":"Rob J Hyndman","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/vital/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. fabletools augment, estimate, forecast, generate, glance, interpolate, model, report, tidy ggplot2 autoplot","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/smooth_mortality_law.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to smooth mortality rates using MortalityLaw package — smooth_mortality_law","title":"Function to smooth mortality rates using MortalityLaw package — smooth_mortality_law","text":"smoothing function allows smoothing variable vital object using MortalityLaw package. vital object returned along additional columns containing information smoothed variable: .smooth containing smoothed values, .smooth_se containing corresponding standard errors.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/smooth_mortality_law.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to smooth mortality rates using MortalityLaw package — smooth_mortality_law","text":"","code":"smooth_mortality_law(.data, .var, law = \"gompertz\", ...)"},{"path":"https://pkg.robjhyndman.com/vital/reference/smooth_mortality_law.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to smooth mortality rates using MortalityLaw package — smooth_mortality_law","text":".data vital object .var name variable smooth. contain mortality rates. law name mortality law. available mortality laws, users can check availableLaws. Argument ignored custom law supplied. function learn available options. ... Additional arguments passed MortalityLaw.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/smooth_mortality_law.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to smooth mortality rates using MortalityLaw package — smooth_mortality_law","text":"vital added columns containing smoothed values standard errors","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/smooth_mortality_law.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to smooth mortality rates using MortalityLaw package — smooth_mortality_law","text":"Sixian Tang Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/smooth_mortality_law.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to smooth mortality rates using MortalityLaw package — smooth_mortality_law","text":"","code":"norway_mortality |> smooth_mortality_law(Mortality) #> # A vital: 41,292 x 9 [1Y] #> # Key:     Age x Sex [111 x 3] #>     Year   Age OpenInterval Sex   Population Deaths Mortality .smooth .smooth_se #>    <int> <int> <lgl>        <chr>      <dbl>  <dbl>     <dbl>   <dbl>      <dbl> #>  1  1900     0 FALSE        Fema…      30070 2376.    0.0778  0.00197   0.000146 #>  2  1900     1 FALSE        Fema…      28960  842     0.0290  0.00207   0.000154 #>  3  1900     2 FALSE        Fema…      28043  348     0.0123  0.00218   0.000161 #>  4  1900     3 FALSE        Fema…      27019  216.    0.00786 0.00229   0.000170 #>  5  1900     4 FALSE        Fema…      26854  168.    0.00624 0.00241   0.000179 #>  6  1900     5 FALSE        Fema…      25569  140.    0.00538 0.00253   0.000188 #>  7  1900     6 FALSE        Fema…      25534  108.    0.00422 0.00266   0.000197 #>  8  1900     7 FALSE        Fema…      24314   93.5   0.00376 0.00280   0.000208 #>  9  1900     8 FALSE        Fema…      24979   93.5   0.00380 0.00295   0.000218 #> 10  1900     9 FALSE        Fema…      24428   90     0.00365 0.00310   0.000230 #> # ℹ 41,282 more rows"},{"path":"https://pkg.robjhyndman.com/vital/reference/smooth_vital.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions to smooth demographic data — smooth_spline","title":"Functions to smooth demographic data — smooth_spline","text":"smoothing functions allow smoothing variable vital object. vital object returned along additional columns containing information smoothed variable: usually .smooth containing smoothed values, .smooth_se containing corresponding standard errors.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/smooth_vital.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions to smooth demographic data — smooth_spline","text":"","code":"smooth_spline(.data, .var, age_spacing = 1, k = -1)  smooth_mortality(.data, .var, age_spacing = 1, b = 65, power = 0.4, k = 30)  smooth_fertility(.data, .var, age_spacing = 1, lambda = 1e-10)  smooth_loess(.data, .var, age_spacing = 1, span = 0.2)"},{"path":"https://pkg.robjhyndman.com/vital/reference/smooth_vital.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions to smooth demographic data — smooth_spline","text":".data vital object .var name variable smooth age_spacing Spacing ages smoothed vital. Default 1. k Number knots use penalized regression spline estimate. b Lower age monotonicity. , smooth curve assumed monotonically increasing. power Power transformation age variable smoothing. Default 0.4 (mortality data). lambda Penalty constrained regression spline. span Span loess smooth.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/smooth_vital.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functions to smooth demographic data — smooth_spline","text":"vital added columns containing smoothed values standard errors","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/smooth_vital.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Functions to smooth demographic data — smooth_spline","text":"smooth_mortality() use penalized regression splines applied log mortality monotonicity constraint age b. methodology based Wood (1994). smooth_fertility() uses weighted regression B-splines concavity constraint, based Ng (1999). function smooth_loess() uses locally quadratic regression, smooth_spline() uses penalized regression splines.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/smooth_vital.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Functions to smooth demographic data — smooth_spline","text":"Hyndman, R.J., Ullah, S. (2007) Robust forecasting mortality fertility rates: functional data approach. Computational Statistics & Data Analysis, 51, 4942-4956. https://robjhyndman.com/publications/funcfor/","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/smooth_vital.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Functions to smooth demographic data — smooth_spline","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/smooth_vital.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functions to smooth demographic data — smooth_spline","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union norway_mortality |>   filter(Sex == \"Female\", Year > 2000) |>   smooth_mortality(Mortality) #> # A vital: 2,553 x 9 [1Y] #> # Key:     Age x Sex [111 x 1] #>     Year   Age OpenInterval Sex   Population Deaths Mortality .smooth .smooth_se #>    <int> <dbl> <lgl>        <chr>      <dbl>  <dbl>     <dbl> <dbl[1>  <dbl[1d]> #>  1  2001     0 FALSE        Fema…      28805     97  0.00343  3.42e-3  0.000311  #>  2  2001     1 FALSE        Fema…      29090      8  0.000274 2.71e-4  0.0000717 #>  3  2001     2 FALSE        Fema…      28891      2  0.000069 1.64e-4  0.0000393 #>  4  2001     3 FALSE        Fema…      29589      5  0.000172 1.32e-4  0.0000296 #>  5  2001     4 FALSE        Fema…      30155      3  0.0001   1.16e-4  0.0000250 #>  6  2001     5 FALSE        Fema…      29874      3  0.0001   1.07e-4  0.0000224 #>  7  2001     6 FALSE        Fema…      29751      5  0.000167 1.01e-4  0.0000210 #>  8  2001     7 FALSE        Fema…      29812      1  0.000034 9.64e-5  0.0000202 #>  9  2001     8 FALSE        Fema…      29832      4  0.000134 9.45e-5  0.0000200 #> 10  2001     9 FALSE        Fema…      30410      1  0.000033 9.58e-5  0.0000203 #> # ℹ 2,543 more rows norway_fertility |>   filter(Year > 2000) |>   smooth_fertility(Fertility) #> # A vital: 968 x 6 [1Y] #> # Key:     Age [44 x 1] #>     Year   Age Fertility OpenInterval    .smooth .smooth_se #>    <int> <dbl>     <dbl> <lgl>             <dbl>      <dbl> #>  1  2001    12   0       TRUE         0.00000601  0.0000299 #>  2  2001    13   0.00004 FALSE        0.0000262   0.000119  #>  3  2001    14   0.00019 FALSE        0.000114    0.000469  #>  4  2001    15   0.00046 FALSE        0.000498    0.00184   #>  5  2001    16   0.00217 FALSE        0.00217     0.00717   #>  6  2001    17   0.00752 FALSE        0.00751     0.0221    #>  7  2001    18   0.0158  FALSE        0.0164      0.0426    #>  8  2001    19   0.0291  FALSE        0.0269      0.0613    #>  9  2001    20   0.0404  FALSE        0.0391      0.0776    #> 10  2001    21   0.0502  FALSE        0.0502      0.0864    #> # ℹ 958 more rows"},{"path":"https://pkg.robjhyndman.com/vital/reference/time_components.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract time components from a model — time_components","title":"Extract time components from a model — time_components","text":"mable single model column, return model components indexed time.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/time_components.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract time components from a model — time_components","text":"","code":"time_components(object, ...)"},{"path":"https://pkg.robjhyndman.com/vital/reference/time_components.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract time components from a model — time_components","text":"object vital mable object single model column. ... currently used.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/time_components.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract time components from a model — time_components","text":"tsibble object containing time components model.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/time_components.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract time components from a model — time_components","text":"","code":"norway_mortality |>   dplyr::filter(Sex == \"Female\") |>   model(lee_carter = LC(log(Mortality))) |>   time_components() #> # A tsibble: 124 x 3 [1Y] #> # Key:       Sex [1] #>    Sex     Year    kt #>    <chr>  <int> <dbl> #>  1 Female  1900  117. #>  2 Female  1901  111. #>  3 Female  1902  105. #>  4 Female  1903  110. #>  5 Female  1904  108. #>  6 Female  1905  112. #>  7 Female  1906  103. #>  8 Female  1907  108. #>  9 Female  1908  107. #> 10 Female  1909  101. #> # ℹ 114 more rows"},{"path":"https://pkg.robjhyndman.com/vital/reference/total_fertility_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute total fertility rate from age-specific fertility rates — total_fertility_rate","title":"Compute total fertility rate from age-specific fertility rates — total_fertility_rate","text":"Total fertility rate expected number babies per woman life-time given fertility rate age woman's life.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/total_fertility_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute total fertility rate from age-specific fertility rates — total_fertility_rate","text":"","code":"total_fertility_rate(.data, fertility)"},{"path":"https://pkg.robjhyndman.com/vital/reference/total_fertility_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute total fertility rate from age-specific fertility rates — total_fertility_rate","text":".data vital object including age variable variable containing fertility rates. fertility Variable .data containing fertility rates. omitted, variable name  fx, Fertility Rate used (case sensitive).","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/total_fertility_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute total fertility rate from age-specific fertility rates — total_fertility_rate","text":"vital object total fertility column tfr.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/total_fertility_rate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute total fertility rate from age-specific fertility rates — total_fertility_rate","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/total_fertility_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute total fertility rate from age-specific fertility rates — total_fertility_rate","text":"","code":"# Compute Norwegian total fertility rates over time norway_fertility |>   total_fertility_rate() #> # A vital: 56 x 2 [1Y] #>     Year   tfr #>    <int> <dbl> #>  1  1967  2.78 #>  2  1968  2.75 #>  3  1969  2.70 #>  4  1970  2.51 #>  5  1971  2.49 #>  6  1972  2.38 #>  7  1973  2.23 #>  8  1974  2.13 #>  9  1975  1.98 #> 10  1976  1.86 #> # ℹ 46 more rows"},{"path":"https://pkg.robjhyndman.com/vital/reference/undo_pr.html","id":null,"dir":"Reference","previous_headings":"","what":"Undo a product/ratio transformation — undo_pr","title":"Undo a product/ratio transformation — undo_pr","text":"Make new vital products ratios measured variable key variable. common use case function computing mortality rates sex, sex ratios geometric mean rates.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/undo_pr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Undo a product/ratio transformation — undo_pr","text":"","code":"undo_pr(.data, .var, key = Sex, times = 2000)"},{"path":"https://pkg.robjhyndman.com/vital/reference/undo_pr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Undo a product/ratio transformation — undo_pr","text":".data vital object .var bare variable name measured variable use. key bare variable name specifying key variable use. key variable must include value geometric_mean. times variable distribution, product must computed simulation. argument specifies number simulations use.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/undo_pr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Undo a product/ratio transformation — undo_pr","text":"vital object","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/undo_pr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Undo a product/ratio transformation — undo_pr","text":"Note measured variable takes value 0, geometric mean set 10^-6 avoid infinite values ratio. Therefore, transformation undone, results identical original case original data 0.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/undo_pr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Undo a product/ratio transformation — undo_pr","text":"Hyndman, R.J., Booth, H., & Yasmeen, F. (2013). Coherent mortality forecasting: product-ratio method functional time series models. Demography, 50(1), 261-283.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/undo_pr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Undo a product/ratio transformation — undo_pr","text":"","code":"# Make products and ratios orig_data <- norway_mortality |>   dplyr::filter(Year > 2015, Sex != \"Total\") pr <- orig_data |>   make_pr(Mortality) # Compare original data with product/ratio version orig_data #> # A vital: 1,776 x 7 [1Y] #> # Key:     Age x Sex [111 x 2] #>     Year   Age OpenInterval Sex    Population Deaths Mortality #>    <int> <int> <lgl>        <chr>       <dbl>  <dbl>     <dbl> #>  1  2016     0 FALSE        Female      28851     57  0.00197  #>  2  2016     1 FALSE        Female      29195      7  0.00024  #>  3  2016     2 FALSE        Female      29631      6  0.000203 #>  4  2016     3 FALSE        Female      30416      2  0.000066 #>  5  2016     4 FALSE        Female      30582      0  0        #>  6  2016     5 FALSE        Female      31567      1  0.000032 #>  7  2016     6 FALSE        Female      31963      2  0.000063 #>  8  2016     7 FALSE        Female      31318      2  0.000063 #>  9  2016     8 FALSE        Female      30710      0  0        #> 10  2016     9 FALSE        Female      30882      1  0.000032 #> # ℹ 1,766 more rows pr #> # A vital: 2,664 x 7 [1Y] #> # Key:     Age x Sex [111 x 3] #>     Year   Age OpenInterval Sex    Population Deaths Mortality #>    <int> <int> <lgl>        <chr>       <dbl>  <dbl>     <dbl> #>  1  2016     0 FALSE        Female      28851     57     0.924 #>  2  2016     1 FALSE        Female      29195      7     1.36  #>  3  2016     2 FALSE        Female      29631      6     1.78  #>  4  2016     3 FALSE        Female      30416      2     1.44  #>  5  2016     4 FALSE        Female      30582      0     0     #>  6  2016     5 FALSE        Female      31567      1     0.724 #>  7  2016     6 FALSE        Female      31963      2     1.45  #>  8  2016     7 FALSE        Female      31318      2     0.841 #>  9  2016     8 FALSE        Female      30710      0     0     #> 10  2016     9 FALSE        Female      30882      1     1.79  #> # ℹ 2,654 more rows # Undo products and ratios pr |> undo_pr(Mortality) #> # A vital: 1,776 x 7 [1Y] #> # Key:     Age x Sex [111 x 2] #>     Year   Age OpenInterval Sex    Population Deaths Mortality #>    <int> <int> <lgl>        <chr>       <dbl>  <dbl>     <dbl> #>  1  2016     0 FALSE        Female      28851     57  0.00197  #>  2  2016     1 FALSE        Female      29195      7  0.00024  #>  3  2016     2 FALSE        Female      29631      6  0.000203 #>  4  2016     3 FALSE        Female      30416      2  0.000066 #>  5  2016     4 FALSE        Female      30582      0  0        #>  6  2016     5 FALSE        Female      31567      1  0.000032 #>  7  2016     6 FALSE        Female      31963      2  0.000063 #>  8  2016     7 FALSE        Female      31318      2  0.000063 #>  9  2016     8 FALSE        Female      30710      0  0        #> 10  2016     9 FALSE        Female      30882      1  0.000032 #> # ℹ 1,766 more rows"},{"path":"https://pkg.robjhyndman.com/vital/reference/undo_sd.html","id":null,"dir":"Reference","previous_headings":"","what":"Undo a mean/difference transformation — undo_sd","title":"Undo a mean/difference transformation — undo_sd","text":"Make new vital means differences measured variable key variable. common use case function computing migration numbers sex, sex differences mean numbers.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/undo_sd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Undo a mean/difference transformation — undo_sd","text":"","code":"undo_sd(.data, .var, key = Sex, times = 2000)"},{"path":"https://pkg.robjhyndman.com/vital/reference/undo_sd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Undo a mean/difference transformation — undo_sd","text":".data vital object .var bare variable name measured variable use. key bare variable name specifying key variable use. key variable must include value geometric_mean. times variable distribution, product must computed simulation. argument specifies number simulations use.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/undo_sd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Undo a mean/difference transformation — undo_sd","text":"vital object","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/undo_sd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Undo a mean/difference transformation — undo_sd","text":"Hyndman, R.J., Booth, H., & Yasmeen, F. (2013). Coherent mortality forecasting: product-ratio method functional time series models. Demography, 50(1), 261-283.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/undo_sd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Undo a mean/difference transformation — undo_sd","text":"","code":"# Make sums and differences mig <- net_migration(norway_mortality, norway_births) |>   dplyr::filter(Sex != \"Total\") sd <- mig |>   make_sd(NetMigration) # Undo products and ratios sd |> undo_sd(NetMigration) #> # A vital: 27,306 x 6 [1Y] #> # Key:     Age x Sex [111 x 2] #>     Year   Age Sex    Population Deaths NetMigration #>    <dbl> <dbl> <chr>       <dbl>  <dbl>        <dbl> #>  1  1900    -1 Female      32150 1745.        248.   #>  2  1900     0 Female      30070 1035.        -86.2  #>  3  1900     1 Female      28960  594.        222.   #>  4  1900     2 Female      28043  281.         57.3  #>  5  1900     3 Female      27019  190.         26.8  #>  6  1900     4 Female      26854  155.          3.50 #>  7  1900     5 Female      25569  122.          5.37 #>  8  1900     6 Female      25534  102.          4.64 #>  9  1900     7 Female      24314   91.7        -5.27 #> 10  1900     8 Female      24979   92.9       -11.1  #> # ℹ 27,296 more rows"},{"path":"https://pkg.robjhyndman.com/vital/reference/vital-package.html","id":null,"dir":"Reference","previous_headings":"","what":"vital: Tidy Analysis Tools for Mortality, Fertility, Migration and Population Data — vital-package","title":"vital: Tidy Analysis Tools for Mortality, Fertility, Migration and Population Data — vital-package","text":"Analysing vital statistics based tools consistent tidyverse. Tools provided data visualization, life table calculations, computing net migration numbers, Lee-Carter modelling; functional data modelling forecasting.","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/vital/reference/vital-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"vital: Tidy Analysis Tools for Mortality, Fertility, Migration and Population Data — vital-package","text":"Maintainer: Rob Hyndman Rob.Hyndman@monash.edu (ORCID) [copyright holder] Authors: Sixian Tang (ORCID) contributors: Miles McBain (ORCID) [contributor] Mitchell O'Hara-Wild (ORCID) [contributor]","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/vital.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a vital object — vital","title":"Create a vital object — vital","text":"vital object type tsibble contains vital statistics births, deaths, population counts, mortality fertility rates. tsibble special class allows special methods used. object attribute stores variables names needed functions, including age, sex, births, deaths population.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/vital.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a vital object — vital","text":"","code":"vital(   ...,   key = NULL,   index,   .age = NULL,   .sex = NULL,   .deaths = NULL,   .births = NULL,   .population = NULL,   regular = TRUE,   .drop = TRUE )"},{"path":"https://pkg.robjhyndman.com/vital/reference/vital.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a vital object — vital","text":"... set name-value pairs key Variable(s) uniquely determine time indices. NULL empty key, c() multiple variables. works tidy selector (e.g. tidyselect::starts_with()) index variable specify time index variable. .age Character string name age variable .sex Character string name sex variable .deaths Character string name deaths variable .births Character string name births variable .population Character string name population variable regular Regular time interval (TRUE) irregular (FALSE). interval determined greatest common divisor index column, TRUE. .drop TRUE, empty key groups dropped.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/vital.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a vital object — vital","text":"tsibble class vital.","code":""},{"path":[]},{"path":"https://pkg.robjhyndman.com/vital/reference/vital.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a vital object — vital","text":"Rob J Hyndman","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/vital.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a vital object — vital","text":"","code":"# create a vital with only age as a key vital(   year = rep(2010:2015, 100),   age = rep(0:99, each = 6),   mx = runif(600, 0, 1),   index = year,   key = age,   .age = \"age\" ) #> # A vital: 600 x 3 [1Y] #> # Key:     age [100 x 1] #>     year   age    mx #>    <int> <int> <dbl> #>  1  2010     0 0.680 #>  2  2011     0 0.143 #>  3  2012     0 0.765 #>  4  2013     0 0.627 #>  5  2014     0 0.730 #>  6  2015     0 0.424 #>  7  2010     1 0.268 #>  8  2011     1 0.769 #>  9  2012     1 0.587 #> 10  2013     1 0.899 #> # ℹ 590 more rows"},{"path":"https://pkg.robjhyndman.com/vital/reference/vital_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Return vital variables — vital_vars","title":"Return vital variables — vital_vars","text":"vital object special case tsibble object additional attributes identifying age, sex, deaths, births population variables. vital_vars() returns character vector names vital variables.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/vital_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return vital variables — vital_vars","text":"","code":"vital_vars(x)"},{"path":"https://pkg.robjhyndman.com/vital/reference/vital_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return vital variables — vital_vars","text":"x tsibble object.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/vital_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return vital variables — vital_vars","text":"character vector names vital variables.","code":""},{"path":"https://pkg.robjhyndman.com/vital/reference/vital_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return vital variables — vital_vars","text":"","code":"vital_vars(norway_mortality) #>          age          sex       deaths   population  #>        \"Age\"        \"Sex\"     \"Deaths\" \"Population\""},{"path":"https://pkg.robjhyndman.com/vital/news/index.html","id":"vital-200","dir":"Changelog","previous_headings":"","what":"vital 2.0.0","title":"vital 2.0.0","text":"New data functions: read_ktdb(), read_ktdb_files(), read_stmf(), read_stmf_files() New model functions: GAPC(), PLAT(), M7(), RH(), CBD(), LC2() New smoothing function: smooth_mortality_law() New stochastic simulation function: generate_population() Added vignette introducing package Added vignette stochastic population forecasting Removed Australian data sets reduce package size Updated Norwegian data sets Bug fixes unit tests","code":""},{"path":"https://pkg.robjhyndman.com/vital/news/index.html","id":"vital-110","dir":"Changelog","previous_headings":"","what":"vital 1.1.0","title":"vital 1.1.0","text":"CRAN release: 2024-06-21 Improved formatting vital objects printed Added vital_vars function Added age_components methods FNAIVE FMEAN models Data 1900 removed norway_xxx data sets","code":""},{"path":"https://pkg.robjhyndman.com/vital/news/index.html","id":"vital-100","dir":"Changelog","previous_headings":"","what":"vital 1.0.0","title":"vital 1.0.0","text":"CRAN release: 2024-06-04 First CRAN submission","code":""}]
